<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetBrowser</name>
    </assembly>
    <members>
        <member name="T:DotNetBrowser.Browser.BrowserDisposeOptions">
            <summary>
                The dispose options of the browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.BrowserDisposeOptions.BeforeUnloadEventHandled">
            <summary>
                Specifies whether the <c>beforeunload</c> and <c>unload</c> JavaScript events should be
                handled if they are present on the web page loaded into the browser instance that is about to be disposed.
            </summary>
            <value>
                <c>true</c> if the registered on the web page <c>beforeunload</c> and <c>unload</c>
                JavaScript events should be handled when disposing a browser instance, <c>false</c> otherwise.
            </value>
        </member>
        <member name="T:DotNetBrowser.Browser.BrowserViewExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Browser.IBrowserView" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.BrowserViewExtensions.InitializeFrom(DotNetBrowser.Browser.IBrowserView,DotNetBrowser.Browser.IBrowser)">
            <summary>
                Initialize a browser view from this particular <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance. If there is another browser view
                bound to this browser instance, that view will be de-initialized.
            </summary>
            <param name="browserView">the browser view to initialize.</param>
            <param name="browser">the browser instance to initialize from.</param>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.AlertParameters">
            <inheritdoc />
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.AlertHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.AlertParameters.OkActionText">
            <summary>
                Gets the localized text of the "OK" action.
            </summary>
            <value>The localized text of the "OK" action.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.AlertParameters.Url">
            <summary>
                Gets the URL of the web page that requested to display the dialog.
            </summary>
            <value>
                The URL of the web page that requested to display the dialog.
            </value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadCause">
            <summary>
                Describes the cause of the <c>onbeforeunload</c> dialog.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadCause.ReloadCurrentPage">
            <summary>
                The current web page is about to be reloaded.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadCause.LoadOtherPage">
            <summary>
                The other web page is about to be loaded.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadParameters">
            <inheritdoc />
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.BeforeUnloadHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadParameters.Cause">
            <summary>
                Gets the action that caused the dialog to appear.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadCause" /> describing the action that caused the dialog to appear.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadParameters.LeaveActionText">
            <summary>
                The localized text of the "Leave" action.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadParameters.StayActionText">
            <summary>
                Gets the localized text of the "Stay" action.
            </summary>
            <value>The localized text of the "Stay" action.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.BeforeUnloadHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadResponse.Leave">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadResponse" /> that notifies the browser that the user decided to leave the current
                page.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.BeforeUnloadHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadResponse.Stay">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadResponse" /> that notifies the browser that the user decided to stay on the
                current page.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.BeforeUnloadHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.CommonDialogParameters">
            <summary>
                The base class for common dialog parameters.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.CommonDialogParameters.Message">
            <summary>
                Gets the localized dialog message.
            </summary>
            <value>The localized dialog message.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.CommonDialogParameters.Title">
            <summary>
                Gets the localized dialog title.
            </summary>
            <value>The localized dialog title.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmParameters">
            <inheritdoc />
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.ConfirmHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmParameters.CancelActionText">
            <summary>
                Gets the localized text of the "Cancel" action.
            </summary>
            <value>The localized text of the "Cancel" action.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmParameters.OkActionText">
            <summary>
                Gets the localized text of the "OK" action.
            </summary>
            <value>The localized text of the "OK" action.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmParameters.Url">
            <summary>
                Gets the URL of the web page that requested to display the dialog.
            </summary>
            <value>
                The URL of the web page that requested to display the dialog.
            </value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.ConfirmHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmResponse" /> that notifies the browser that the JavaScript confirmation dialog should
                be canceled.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.ConfirmHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmResponse.Ok">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmResponse" /> that notifies the browser that the JavaScript confirmation dialog should
                be closed with the
                "OK" action.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.ConfirmHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.DialogParameters">
            <summary>
                The base class for dialog parameters.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.DialogParameters.Browser">
            <summary>
                Gets the browser associated with the dialog.
            </summary>
            <value>The browser associated with the dialog.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.FileChooserParameters">
            <summary>
                The base class for the common file chooser parameters.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.FilteredFileChooserParameters">
            <inheritdoc />
            <summary>
                The base class for the common parameters of the file chooser with file filter.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.FilteredFileChooserParameters.AcceptableExtensions">
            <summary>
                Gets the file extensions acceptable by the file chooser.
            </summary>
            <value>
                The file extensions acceptable by the file chooser. The collection is empty in
                case no <c>accept</c> attribute is specified or its value is empty.
            </value>
            <remarks>
                The acceptable file extensions are based on the <c>accept</c> attribute value of the HTML input
                element. The extensions do not include the preceding dot character.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.FilteredFileChooserParameters.FilterDescription">
            <summary>
                Gets the meaningful (e.g. "Image files", "PDF File (.pdf)",
                etc.) description of the acceptable extensions.
            </summary>
            <value>
                The meaningful description of the acceptable extensions. In case no extensions are provided, the value is empty,
                which implies that any file type is acceptable.
            </value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenDirectoryHandler" />.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenDirectoryHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse.Canceled">
            <summary>
                Indicates whether the dialog was canceled.
            </summary>
            <value><c>true</c> if the dialog was canceled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse.SelectedDirectory">
            <summary>
                Gets the selected directory.
            </summary>
            <value>The selected directory.</value>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse" /> that notifies the browser that the dialog was canceled.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenDirectoryHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse.SelectDirectory(System.String)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse" /> that notifies the browser that the directory was selected in the
                dialog.
            </summary>
            <param name="directory"> The selected directory.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenDirectoryHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenExternalAppHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppParameters.CancelActionText">
            <summary>
                Gets the localized text of the "Cancel" action.
            </summary>
            <value>The localized text of the "Cancel" action.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppParameters.OpenActionText">
            <summary>
                Gets the localized text of the "Open..." action.
            </summary>
            <value>The localized text of the "Open..." action.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenExternalAppHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppResponse" /> that notifies the browser that the link should not be opened in
                the external application.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenExternalAppHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppResponse.Open">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppResponse" /> that notifies the browser that the link should be opened in the
                associated external application.
            </summary>
            <remarks>
                <para>
                    If the application is not running, the operating system should launch the application
                    and open the link in it.
                </para>
            </remarks>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenExternalAppHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenFileHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileParameters.DefaultFileName">
            <summary>
                Gets the default file name to select in the dialog.
            </summary>
            <value>
                The default file name to select in the dialog or an
                empty string if there is no default file name.
            </value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenFileHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse.Canceled">
            <summary>
                Indicates whether the dialog was canceled.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse.SelectedFile">
            <summary>
                The selected file.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse.Cancel">
            <summary>
                Creates an <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse" /> that notifies the browser that the dialog was canceled.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenFileHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse.SelectFile(System.String)">
            <summary>
                Creates an <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse" /> that notifies the browser that the file was selected in the file chooser
                dialog.
            </summary>
            <param name="file">the selected file.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenFileHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenMultipleFilesHandler" />.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenMultipleFilesHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse.Canceled">
            <summary>
                Indicates whether the dialog was canceled.
            </summary>
            <value><c>true</c> if the dialog was canceled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse.SelectedFiles">
            <summary>
                Gets the selected files.
            </summary>
            <value>A collection of the selected files.</value>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse" /> that notifies the browser that the dialog was canceled.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenMultipleFilesHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse.SelectFiles(System.String[])">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse" /> that notifies the browser that the files were selected in the
                file chooser dialog.
            </summary>
            <param name="files">The selected files.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenMultipleFilesHandler" /> implementation.
            </returns>
            <exception cref="T:System.ArgumentException">
                The <paramref name="files" /> collection is null, empty, contains null or
                whitespace strings or contains strings that do not represent
                the existing files.
            </exception>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.PromptParameters">
            <inheritdoc />
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.PromptHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.PromptParameters.CancelActionText">
            <summary>
                Gets the localized text of the "Cancel" action.
            </summary>
            <value>The localized text of the "Cancel" action.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.PromptParameters.OkActionText">
            <summary>
                Gets the localized text of the "OK" action.
            </summary>
            <value>The localized text of the "OK" action.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.PromptParameters.PromptText">
            <summary>
                Gets the default prompt text.
            </summary>
            <value>
                The default text passed to the <c>window.prompt()</c>
                JavaScript function or an empty string, if no default value is passed.
            </value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.PromptParameters.Url">
            <summary>
                Gets the URL of the web page that requested to display the
                dialog.
            </summary>
            <value>
                The URL of the web page that requested to display the
                dialog.
            </value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.PromptHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse.Canceled">
            <summary>
                Indicates whether the prompt dialog has been canceled.
            </summary>
            <value><c>true</c> if the dialog has been canceled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse.Text">
            <summary>
                Gets the text input entered in the prompt dialog.
            </summary>
            <value>The text input entered in the prompt dialog.</value>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse" /> that notifies the browser that the prompt dialog has been canceled.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.PromptHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse.SubmitText(System.String)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse" /> that notifies the browser that the user input was submitted in the prompt
                dialog.
            </summary>
            <param name="text">The user input that was submitted in the prompt dialog.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.PromptHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormParameters">
            <inheritdoc />
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.RepostFormHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormParameters.CancelActionText">
            <summary>
                Gets the localized text of the "Cancel" action.
            </summary>
            <value>The localized text of the "Cancel" action.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormParameters.RepostActionText">
            <summary>
                Gets the localized text of the "Repost" action.
            </summary>
            <value>The localized text of the "Repost" action.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.RepostFormHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormResponse" /> that notifies the browser that the page reloading should be canceled.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.RepostFormHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormResponse.Repost">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormResponse" /> that notifies the browser that resubmitting POST data is allowed.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.RepostFormHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.SaveAsPdfHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfParameters.SuggestedDirectory">
            <summary>
                Gets the suggested directory where to save the PDF file.
            </summary>
            <value>The suggested directory where to save the PDF file.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfParameters.SuggestedFileName">
            <summary>
                Gets the suggested name of the PDF file to save.
            </summary>
            <value>The suggested name of the PDF file to save.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.SaveAsPdfHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse.Canceled">
            <summary>
                Indicates whether the dialog was canceled.
            </summary>
            <value><c>true</c> if the dialog was canceled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse.SelectedFile">
            <summary>
                Gets the selected file.
            </summary>
            <value>The selected file.</value>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse" /> that notifies the browser that the dialog was canceled.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.SaveAsPdfHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse.SaveToFile(System.String)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse" /> that notifies the browser that the file was selected in the file chooser
                dialog.
            </summary>
            <param name="file">the selected file.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.SaveAsPdfHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.IBrowser.SelectCertificateHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateParameters.Certificates">
            <summary>
                Gets a collection of the certificates allowed by the server.
            </summary>
            <value>
                The collection of the certificates allowed by the server. The collection is empty when there are no matching
                certificates installed in the operating system.
                In this case you can either cancel the SSL client authentication, or provide a custom <see cref="T:DotNetBrowser.Net.Certificates.Certificate" />.
            </value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateParameters.RequestIssuedByProxy">
            <summary>
                Indicates whether the request that requires the certificate selection is
                issued by an HTTPS proxy server.
            </summary>
            <value><c>true</c> if the request is issued by a proxy server, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateParameters.SslOrigin">
            <summary>
                Gets the host and port of the server that requested the client authentication.
            </summary>
            <value>The host and port of the server that requested the client authentication.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse">
            <summary>
                The response to <see cref="P:DotNetBrowser.Browser.IBrowser.SelectCertificateHandler" />
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse" /> that notifies the browser that the SSL authorization should be
                cancelled.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.SelectCertificateHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse.Select(DotNetBrowser.Net.Certificates.Certificate)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse" /> that notifies the browser that the given certificate should be
                selected.
            </summary>
            <param name="certificate">The certificate that should be selected.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.SelectCertificateHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse.Select(System.Int32)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse" /> that notifies the browser that the client certificate from the
                list with the given index should be selected.
            </summary>
            <param name="index">The index of the certificate that should be selected.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.SelectCertificateHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorParameters">
            <summary>
                The parameters for the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.SelectColorHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorParameters.DefaultColor">
            <summary>
                Gets the default color value.
            </summary>
            <value>
                The default color value represents the value of the <c>value</c>
                attribute of the <c>&lt;input type="color"&gt;</c> element. If this attribute is not
                specified, the default color is black.
            </value>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.SelectColorHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse.Cancelled">
            <summary>
                Indicates whether the dialog was cancelled.
            </summary>
            <value><c>true</c> if the dialog was cancelled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse.SelectedColor">
            <summary>
                Gets the selected color.
            </summary>
            <value>The selected color.</value>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse" /> that notifies the browser that the user has cancelled color selection.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.SelectColorHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse.SelectColor(DotNetBrowser.Ui.Color)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse" /> that notifies the browser that the user has selected a color.
            </summary>
            <param name="color">The selected color.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.Dialogs.IDialogs.SelectColorHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.IDefaultDialogs">
            <summary>
                The common interface for default implementations of various dialogs.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDefaultDialogs.DefaultOpenDirectoryHandler">
            <summary>
                This handler is invoked when the browser requests to display a file chooser dialog to open a
                directory, if a different handler was not configured for the browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDefaultDialogs.DefaultOpenExternalAppHandler">
            <summary>
                This handler is invoked when the currently loaded web page wants to open a link in the
                associated external application.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDefaultDialogs.DefaultOpenFileHandler">
            <summary>
                This handler is invoked when the browser requests to display a file chooser dialog to open a
                file, if a different handler was not configured for the browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDefaultDialogs.DefaultOpenMultipleFilesHandler">
            <summary>
                This handler is invoked when the browser requests to display a file chooser dialog to open several
                files, if a different handler was not configured for the browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDefaultDialogs.DefaultRepostFormHandler">
            <summary>
                This handler is invoked when a web page with POST data is going to be reloaded and the user must
                confirm that the POST data can be resubmitted, if a different handler was not configured.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDefaultDialogs.DefaultSaveAsPdfHandler">
            <summary>
                This handler is invoked when the browser requests to display a file chooser dialog to save
                content as PDF, if a different handler was not configured for the browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDefaultDialogs.DefaultSelectColorHandler">
            <summary>
                This handler is invoked when the user clicks an <c>&lt;input type='color'&gt;</c> HTML5 element, if a different
                handler was not configured for the browser.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.IDefaultJsDialogs">
            <summary>
                The common interface for default implementations of JavaScript dialogs.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDefaultJsDialogs.DefaultAlertHandler">
            <summary>
                This handler is used when JavaScript alert dialog should be displayed,
                if a different handler was not configured in <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.AlertHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDefaultJsDialogs.DefaultBeforeUnloadHandler">
            <summary>
                This handler is used when the web page is about to be unloaded,
                if a different handler was not configured in <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.BeforeUnloadHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDefaultJsDialogs.DefaultConfirmHandler">
            <summary>
                This handler is used when JavaScript confirmation dialog should be displayed,
                if a different handler was not configured in <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.ConfirmHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDefaultJsDialogs.DefaultPromptHandler">
            <summary>
                This handler is used when JavaScript dialog prompting the user to input some text should be
                displayed, if a different handler was not configured in <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.PromptHandler" />.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.IDialogs">
            <summary>
                The browser dialogs.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenDirectoryHandler">
            <summary>
                Gets or sets a handler that is used  when the browser requests to display a file chooser dialog to open a
                directory.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    You can use this handler to display the directory chooser dialog, or provide the chosen
                    directory without displaying any dialogs.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse.SelectDirectory(System.String)" /> method to provide the selected directory
                    to
                    the browser.
                </para>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse.Cancel" /> method to cancel the dialog.</para>
                <para>If the handler throws an exception, the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenDirectoryResponse.Cancel" /> method will be used.</para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenExternalAppHandler">
            <summary>
                Gets or sets a handler that is used when the currently loaded web page wants to open a link in the
                associated external application.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    You can display your own dialog with the localized message that you can get
                    from the parameters.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppResponse.Open" /> method to tell the browser that the link should be opened
                    in
                    the associated external application. If the application is not running, the operating system
                    should launch the application and open the link in it.
                </para>
                <para>
                    If the handler throws an exception, the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenExternalAppResponse.Cancel" /> method will be
                    invoked.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenFileHandler">
            <summary>
                Gets or sets a handler that is used  when the browser requests to display a file chooser dialog to open a
                file.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    You can use this handler to display the file chooser, or provide the file without
                    displaying any dialogs.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse.SelectFile(System.String)" /> method to provide the selected file to the
                    browser.
                </para>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse.Cancel" /> method to cancel the dialog.</para>
                <para>If the handler throws an exception, the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenFileResponse.Cancel" /> method will be invoked.</para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDialogs.OpenMultipleFilesHandler">
            <summary>
                Gets or sets a handler that is used when the browser requests to display a file chooser dialog to open several
                files.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    You can use this handler to display the file chooser, or provide the files without
                    displaying any dialogs.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse.SelectFiles(System.String[])" /> method to provide the selected files to
                    the browser.
                </para>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse.Cancel" /> method to cancel the dialog.</para>
                <para>
                    If the handler throws an exception, the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.OpenMultipleFilesResponse.Cancel" /> method will be
                    invoked.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDialogs.RepostFormHandler">
            <summary>
                Gets or sets a handler that is used when a web page with POST data is going to be reloaded and the user must
                confirm that the POST data can be resubmitted.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    You can use this handler to display a confirmation dialog where you ask the user whether the
                    web page can be reloaded or not.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormResponse.Repost" /> method to allow resubmitting POST data.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormResponse.Cancel" /> method to cancel the page reloading.
                </para>
                <para>
                    If the handler throws an exception, the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.RepostFormResponse.Repost" /> method
                    method will be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDialogs.SaveAsPdfHandler">
            <summary>
                Gets or sets a handler that is used when the browser requests to display a file chooser dialog to save
                content as PDF.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    You can use this handler to display the save dialog, or provide the full file path
                    without displaying any dialogs.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse.SaveToFile(System.String)" /> method to provide the selected files to
                    the browser.
                </para>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse.Cancel" /> method to cancel the dialog.</para>
                <para>
                    If the handler throws an exception, the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.SaveAsPdfResponse.Cancel" /> method will be
                    invoked.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IDialogs.SelectColorHandler">
            <summary>
                Gets or sets a handler that is used when the user clicks an <c>&lt;input type='color'&gt;</c> HTML5 element.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    You
                    can use this handler to display your own color chooser dialog or set the required color
                    programmatically without displaying any dialogs.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse.SelectColor(DotNetBrowser.Ui.Color)" /> method to provide the selected color to
                    the browser.
                </para>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse.Cancel" /> method to cancel the dialog.</para>
                <para>
                    If the handler throws an exception, the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectColorResponse.Cancel" /> method will be
                    invoked.
                </para>
            </remarks>
        </member>
        <member name="T:DotNetBrowser.Browser.Dialogs.IJsDialogs">
            <summary>
                The JavaScript dialogs.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.AlertHandler">
            <summary>
                Gets or sets a handler that is used when JavaScript alert dialog should be displayed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    In this callback you
                    can display standard modal dialog with the message that you can get from <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.AlertParameters" />.
                </para>
                <para>Please note that it is not necessary to display a dialog in this handler.</para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.BeforeUnloadHandler">
            <summary>
                Gets or sets a handler that is used when the web page is about to be unloaded.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    Some web pages may override the <c>window.onbeforeunload</c> JavaScript function, so that a
                    confirmation dialog will be shown every time when the user tries to reload a web page or navigate
                    to another web page. You can use this callback to display an appropriate confirmation message
                    dialog to ask the user if they really want to leave or reload the web page. To find out whether
                    the web page is going to be reloaded you can check the <see cref="P:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadParameters.Cause" />
                    property.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadResponse.Stay" /> method to stay on the current web page.
                </para>
                <para>Use the  <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadResponse.Leave" /> method to reload or navigate to another web page.</para>
                <para>If the handler throws an exception, the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadResponse.Leave" /> method will be used.</para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.ConfirmHandler">
            <summary>
                Gets or sets a handler that is used when JavaScript confirmation dialog should be displayed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    In this
                    handler you can display standard modal dialog with the message that you can get from
                    <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmParameters" />. Please note that it is not necessary to display a dialog in this
                    handler.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmResponse.Ok" /> to notify that the JavaScript dialog is closed
                    with the "OK" action.
                </para>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmResponse.Cancel" /> method to dismiss the dialog.</para>
                <para>If the handler throws an exception, the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.ConfirmResponse.Cancel" /> method will be used.</para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.PromptHandler">
            <summary>
                Gets or sets a handler that is used when JavaScript dialog prompting the user to input some text should be
                displayed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    The passed <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.PromptParameters" /> object contains the text of the prompt message and the default
                    response text. You can use this information to display standard modal dialog to obtain a
                    prompt response from user. Please note that it is not necessary to display a dialog in this
                    callback.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse.SubmitText(System.String)" /> method to close the dialog and pass the text value passed
                    as a parameter to the engine.
                </para>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse.Cancel" /> method to cancel the dialog.</para>
                <para>If the callback throws an exception, the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.PromptResponse.Cancel" /> method will be used.</para>
            </remarks>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.BrowserBecameResponsiveEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.BrowserBecameResponsive" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.BrowserBecameUnresponsiveEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.BrowserBecameUnresponsive" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.BrowserEventArgs">
            <summary>
                The base class for <see cref="T:DotNetBrowser.Browser.IBrowser" /> events.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.BrowserEventArgs.Browser">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with the event.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with the event.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.ConsoleMessageReceived" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.Level">
            <summary>
                Gets the console message level.
            </summary>
            <value>
                The console message level (<see cref="F:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.MessageLevel.Debug" />, <see cref="F:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.MessageLevel.Log" />,
                <see cref="F:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.MessageLevel.Warning" /> or <see cref="F:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.MessageLevel.Error" />).
            </value>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.LineNumber">
            <summary>
                Gets the line number that caused the message.
            </summary>
            <value>The line number that caused the message.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.Message">
            <summary>
                Gets the console message text.
            </summary>
            <value>The console message text.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.Source">
            <summary>
                Gets the source of the console message.
            </summary>
            <value>
                A string that describes the source of the console message. Usually the source
                is a path to a file that causes this console message.
            </value>
        </member>
        <member name="M:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.MessageLevel">
            <summary>
                Console message levels.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.MessageLevel.Unspecified">
            <summary>
                Unspecified level.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.MessageLevel.Debug">
            <summary>
                Debug level.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.MessageLevel.Log">
            <summary>
                Log level.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.MessageLevel.Warning">
            <summary>
                Warning level.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.MessageLevel.Error">
            <summary>
                Error level.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.ConsoleMessageReceivedEventArgs.MessageLevel.Verbose">
            <summary>
                Verbose level.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.FaviconChangedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.FaviconChanged" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.FaviconChangedEventArgs.NewFavicon">
            <summary>
                Gets the new favicon.
            </summary>
            <value>The new favicon.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.FocusGainedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.FocusGained" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.FocusLostEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.FocusLost" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.FocusRequestedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.FocusRequested" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.FrameCreatedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.FrameCreated" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.FrameDeletedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.FrameDeleted" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.FrameEventArgs">
            <summary>
                The base class for <see cref="T:DotNetBrowser.Browser.IBrowser" /> events related to <see cref="T:DotNetBrowser.Frames.IFrame" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.FrameEventArgs.Frame">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Frames.IFrame" /> instance associated with the event.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Frames.IFrame" /> instance associated with the event.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.FullScreenEnteredEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.FullScreenEntered" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.FullScreenExitedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.FullScreenExited" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.RenderProcessTerminatedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.RenderProcessTerminated" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.RenderProcessTerminatedEventArgs.ExitCode">
            <summary>
                Gets the render process exit code.
            </summary>
            <value>The process exit code that indicates the reason of unexpected render process exit or crash.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.RenderProcessTerminatedEventArgs.TerminationStatus">
            <summary>
                Gets the status of the render process termination.
            </summary>
            <value>The status of the render process termination.</value>
        </member>
        <member name="M:DotNetBrowser.Browser.Events.RenderProcessTerminatedEventArgs.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Browser.Events.SpellCheckCompletedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.SpellCheckCompleted" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.SpellCheckCompletedEventArgs.CheckedText">
            <summary>
                Gets the text that has been checked by the spell checker.
            </summary>
            <value>The text that has been checked by the spell checker.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.SpellCheckCompletedEventArgs.Results">
            <summary>
                Gets the collection of the spell checking results.
            </summary>
            <value>The collection of the spell checking results. Can be empty.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.StatusChangedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.StatusChanged" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.StatusChangedEventArgs.Text">
            <summary>
                Gets the new status text.
            </summary>
            <value>The new status text. Can be an empty string.</value>
        </member>
        <member name="M:DotNetBrowser.Browser.Events.StatusChangedEventArgs.#ctor(DotNetBrowser.Browser.IBrowser,System.String)">
            <summary>
                Constructs a new StatusEvent instance.
            </summary>
            <param name="browser">the browser instance on which the event is initially occurred.</param>
            <param name="statusText">the status text.</param>
        </member>
        <member name="M:DotNetBrowser.Browser.Events.StatusChangedEventArgs.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Browser.Events.TerminationStatus">
            <summary>
                The termination status of the render process.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.TerminationStatus.Unspecified">
            <summary>
                Termination status unspecified.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.TerminationStatus.Normal">
            <summary>
                Normal termination.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.TerminationStatus.Abnormal">
            <summary>
                Abnormal termination.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.TerminationStatus.ProcessWasKilled">
            <summary>
                Process was killed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.TerminationStatus.ProcessCrashed">
            <summary>
                Process crashed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.TerminationStatus.StillRunning">
            <summary>
                Still running.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.TerminationStatus.LaunchFailed">
            <summary>
                Launch failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Events.TerminationStatus.OutOfMemory">
            <summary>
                Out of memory.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Events.TitleChangedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.TitleChanged" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.TitleChangedEventArgs.Title">
            <summary>
                Gets the new title.
            </summary>
            <value>The new title.</value>
        </member>
        <member name="M:DotNetBrowser.Browser.Events.TitleChangedEventArgs.#ctor(DotNetBrowser.Browser.IBrowser,System.String)">
            <summary>
                Constructs a new TitleChangedEventArgs instance.
            </summary>
            <param name="browser">the browser instance on which the event is initially occurred.</param>
            <param name="title">the new title value.</param>
        </member>
        <member name="M:DotNetBrowser.Browser.Events.TitleChangedEventArgs.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Browser.Events.UpdateBoundsRequestedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Browser.IBrowser.UpdateBoundsRequested" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Events.UpdateBoundsRequestedEventArgs.Bounds">
            <summary>
                Gets the new bounds.
            </summary>
            <value>The new bounds in screen coordinates.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.BrowserParameters">
            <summary>
                The base class for <see cref="T:DotNetBrowser.Browser.IBrowser" /> handlers parameters.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.BrowserParameters.Browser">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance the handler is associated with.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance the handler is associated with.</value>
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.CreatePopupParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.IBrowser.CreatePopupHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.CreatePopupParameters.TargetName">
            <summary>
                Gets the popup window target name that was passed through the <c>window.open()</c>
                JavaScript function.
            </summary>
            <value>
                The popup window target name that was passed through the <c>window.open()</c>
                JavaScript function.
            </value>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.CreatePopupParameters.TargetUrl">
            <summary>
                Gets the target URL that will be loaded in the popup browser.
            </summary>
            <value>The target URL that will be loaded in the popup browser.</value>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.CreatePopupParameters.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.CreatePopupResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.IBrowser.CreatePopupHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.CreatePopupResponse.Create">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Handlers.CreatePopupResponse" /> that notifies the browser that the popup can be created.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Handlers.CreatePopupResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.CreatePopupHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.CreatePopupResponse.Suppress">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Handlers.CreatePopupResponse" /> that notifies the browser that the popup creation should be
                suppressed.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Handlers.CreatePopupResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.CreatePopupHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.FrameParameters">
            <summary>
                Represents the parameters of <see cref="T:DotNetBrowser.Browser.IBrowser" />-related handlers associated with <see cref="T:DotNetBrowser.Frames.IFrame" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.FrameParameters.Frame">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Frames.IFrame" /> instance associated with the handler.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.IFrame" /> instance associated with the handler.</returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.InjectCssParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.IBrowser.InjectCssHandler" />.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.InjectCssResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.IBrowser.InjectCssHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.InjectCssResponse.Inject(System.String)">
            <summary>
                Creates an <see cref="T:DotNetBrowser.Browser.Handlers.InjectCssResponse" /> that injects the given <paramref name="customStylesheet" /> string that
                represents a custom stylesheet
                (CSS) into the document that is loaded in this browser instance.
            </summary>
            <param name="customStylesheet">The CSS code that will be injected into the document.</param>
            <exception cref="T:System.ArgumentException"> The <paramref name="customStylesheet" /> is null, empty or blank.</exception>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Handlers.InjectCssResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.InjectCssHandler" /> implementation.
            </returns>
            <remarks>
                If the CSS property defined in the given <paramref name="customStylesheet" /> string already exists
                on the loaded HTML document, then the existing CSS property won't be overridden. The CSS
                properties defined in the given <paramref name="customStylesheet" /> string will be applied only if
                these properties aren't defined on the loaded document.
            </remarks>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.InjectCssResponse.Proceed">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Handlers.InjectCssResponse" /> that notifies the browser that it can proceed without injecting a custom
                stylesheet.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Handlers.InjectCssResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.InjectCssHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.InjectJsParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.IBrowser.InjectJsHandler" />.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.OpenPopupParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.IBrowser.OpenPopupHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.OpenPopupParameters.PopupBrowser">
            <summary>
                Gets the browser instance which should be opened in a popup window.
            </summary>
            <value>The browser instance which should be opened in a popup window.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.OpenPopupParameters.Rectangle">
            <summary>
                Gets the initial bounds of the popup.
            </summary>
            <value>
                The initial bounds of the popup. If the popup is about to open as a result of the
                <c>window.open()</c> JavaScript function, this value represents the corresponding attributes
                of the <c>WindowFeatures</c> parameter passed to this function. The value is empty in case
                no bounds were passed.
            </value>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.OpenPopupParameters.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.RequestPrintParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.IBrowser.RequestPrintHandler" />.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.RequestPrintResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.IBrowser.RequestPrintHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.RequestPrintResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Handlers.RequestPrintResponse" /> that notifies the browser that the printing should be canceled.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Handlers.RequestPrintResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.RequestPrintHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.RequestPrintResponse.Print">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Handlers.RequestPrintResponse" /> that notifies the browser to proceed with printing and
                configure the print settings via the <see cref="P:DotNetBrowser.Browser.IBrowser.PrintHtmlContentHandler" /> and
                <see cref="P:DotNetBrowser.Browser.IBrowser.PrintPdfContentHandler" /> handlers.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Handlers.RequestPrintResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.RequestPrintHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.RequestPrintResponse.ShowPrintPreview">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Handlers.RequestPrintResponse" /> that notifies the browser to display the Print Preview dialog.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Handlers.RequestPrintResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.RequestPrintHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.IBrowser.ShowContextMenuHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.CustomMenuItems">
            <summary>
                Gets the collection of the custom context menu items.
            </summary>
            <returns>
                The collection of the custom context menu items. Can be empty if the context menu does not contain any custom
                items.
            </returns>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.FrameCharset">
            <summary>
                Gets the character encoding of the frame on which the menu is invoked.
            </summary>
            <value>The character encoding of the frame.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.FrameUrl">
            <summary>
                Gets the URL of the sub-frame that the context menu was invoked on.
            </summary>
            <value>The URL of the sub-frame.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.LinkText">
            <summary>
                Gets the text associated with the link.
            </summary>
            <value>
                The text associated with the link. May be an empty string
                if the link contains an image.
            </value>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.LinkUrl">
            <summary>
                Gets the URL of the link that encloses the node the context menu
                was invoked on.
            </summary>
            <value>
                The URL of the link that encloses the node the context menu
                was invoked on.
            </value>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.Location">
            <summary>
                Gets the context menu location. This location is related to the frame the context menu
                is invoked on.
            </summary>
            <value>The context menu location.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.MediaType">
            <summary>
                Gets the media type of the node the context menu is being invoked on.
            </summary>
            <value>The media type of the node the context menu is being invoked on.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.PageUrl">
            <summary>
                Gets the URL of the top level page that the context menu was invoked on.
            </summary>
            <value>The URL of the top level page.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.SelectedText">
            <summary>
                Gets the text of the selection that the context menu was invoked on.
            </summary>
            <value>the text of the selection.</value>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.SourceUrl">
            <summary>
                Gets the source URL for the element that the context menu was
                invoked on.
            </summary>
            <value>
                The source URL for the element. Example of the elements with source URLs are <c>img</c>, <c>audio</c>, and
                <c>video</c>.
            </value>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.SpellCheckMenu">
            <summary>
                Gets the spell check submenu.
            </summary>
            <value>
                the spell check submenu containing
                suggestions for replacing misspelled word.
            </value>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters.ToString">
            <summary>
                Represent object as string
            </summary>
            <returns>a string that represents the object</returns>
        </member>
        <member name="T:DotNetBrowser.Browser.Handlers.ShowContextMenuResponse">
            <summary>
                The response to the <see cref="P:DotNetBrowser.Browser.IBrowser.ShowContextMenuHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Handlers.ShowContextMenuResponse.SelectedItem">
            <summary>
                The selected custom context menu item. If not specified, then it means that the
                context menu has been closed.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.ShowContextMenuResponse.Close">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Handlers.ShowContextMenuResponse" /> that notifies the browser the context menu should be closed.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Handlers.ShowContextMenuResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.ShowContextMenuHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Browser.Handlers.ShowContextMenuResponse.Select(DotNetBrowser.ContextMenu.ContextMenuItem)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Browser.Handlers.ShowContextMenuResponse" /> that notifies the browser that the <c>item</c> should be
                selected. The browser will execute the
                corresponding functionality of the selected context menu item. The context menu state
                will be changed to closed.
            </summary>
            <param name="item"> The menu item that should be selected.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="item" /> is null.</exception>
            <returns>
                The <see cref="T:DotNetBrowser.Browser.Handlers.ShowContextMenuResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.ShowContextMenuHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Browser.IBrowser">
            <summary>
                A web browser control that allows loading a web page or a local HTML file, accessing DOM and
                executing JavaScript on the loaded web page, getting notifications about loading progress,
                dispatching keyboard and mouse events, etc.
            </summary>
            <remarks>
                <para>
                    The <c>IBrowser</c> instance itself is running in a separate native process that allocates
                    memory and system resources that must be released. So, when a <c>IBrowser</c> instance is no
                    longer needed, it must be disposed through the <see cref="M:System.IDisposable.Dispose" /> method to release all the
                    allocated memory and system resources. For example:
                </para>
                <code>
                    IBrowser browser = engine.CreateBrowser();
                    ...
                    browser.Dispose();
                </code>
                <para>
                    Any attempt to use an already disposed <c>IBrowser</c> instance will lead to the
                    <see cref="T:System.ObjectDisposedException" />.
                </para>
                <para>
                    The <c>IBrowser</c> instance is disposed automatically when its <c> IEngine</c> is disposed or
                    unexpectedly crashed. If the instance represents a popup window created by JavaScript via the
                    <c>window.open()</c> function, then JavaScript can close the instance using the
                    <c>window.close()</c> function.
                </para>
                <para>
                    To get notifications that the <c>IBrowser</c> instance has been disposed please subscribe to
                    the following event:
                </para>
                <code>
                    browser.Disposed += (s, e) => {
                        // The Browser instance has been disposed.
                    };
                </code>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.AllFrames">
            <summary>
                Gets all the frames on the currently loaded web page.
            </summary>
            <value>
                All the frames on the currently loaded web page. If the current
                browser did not load any web pages, this will be an empty collection.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Audio">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Media.IAudio" /> instance that allows controlling audio on the loaded web page and receive
                notifications when audio has been
                started or stopped playing.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Media.IAudio" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.DevTools">
            <summary>
                Gets the <see cref="T:DotNetBrowser.DevTools.IDevTools" /> instance that allows working with Chromium Developer Tools for this browser.
            </summary>
            <value>The <see cref="T:DotNetBrowser.DevTools.IDevTools" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Dialogs">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.Dialogs.IDialogs" /> instance that can be used for configuring the dialogs that can be shown by
                browser.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Browser.Dialogs.IDialogs" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.DragAndDrop">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Input.DragAndDrop.IDragAndDrop" /> instance that can be used for managing drag&amp;drop operations for the
                browser.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Input.DragAndDrop.IDragAndDrop" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Engine">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this browser.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Favicon">
            <summary>
                Gets the favicon of the currently loaded web page.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <value>
                The favicon of the currently loaded web page. Will return a default Chromium favicon if the browser did not load
                any web pages or loaded web page URL is invalid.
            </value>
            <remarks>
                Maximum favicon size is 16x16. If the actual favicon size is bigger, then it will be resized
                to fit this constraint.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.FocusedFrame">
            <summary>
                Gets the focused frame on the currently loaded web page.
            </summary>
            <value>The focused frame on the currently loaded web page. Can be null if there is no focused frame.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.JsDialogs">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.Dialogs.IJsDialogs" /> instance that can be used for configuring the JavaScript dialogs that can be
                shown by browser.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Browser.Dialogs.IJsDialogs" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Keyboard">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Input.Keyboard.IKeyboard" /> instance that can be used for listening and simulating keyboard input events.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Input.Keyboard.IKeyboard" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.MainFrame">
            <summary>
                The main frame on the currently loaded web page, if it exists.
            </summary>
            <value>The main frame on the currently loaded web page. Can be null if there is no main frame.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Mouse">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Input.Mouse.IMouse" /> instance that can be used for listening and simulating mouse input events.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Input.Mouse.IMouse" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Navigation">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Navigation.INavigation" /> instance that can be used for controlling navigation in the current browser
                instance.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Navigation.INavigation" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Settings">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> instance that can be used for modifying the settings of the browser.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Size">
            <summary>
                Gets or sets the browser size.
            </summary>
            <value>The browser size. By default, browser's size is empty.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    Setting this property updates the size of this Browser instance with the given width and height. Many web pages
                    rely on the Browser's size and require that it's not empty. DOM document of a web page might not be loaded
                    and displayed at all, because there's no sense in loading and rendering DOM document when it's empty.
                </para>
                <para>
                    As a result, you should set the browser size programmatically when you don't need to display content of the
                    loaded web page, but the web page must "think" it has been loaded in a browser instance
                    with a non-empty size.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.TextFinder">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Search.ITextFinder" /> instance that can be used for finding text on a web page loaded in the
                browser.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Search.ITextFinder" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Title">
            <summary>
                Gets the title of the currently loaded web page.
            </summary>
            <value>
                The title of the currently loaded web page. Can be an empty string if
                the browser hasn't loaded any web page yet.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Url">
            <summary>
                Gets the URL of the currently loaded web page or an empty string if
                the browser hasn't loaded any web page yet.
            </summary>
            <value>
                The URL of the currently loaded web page. Can be an empty string if
                the browser hasn't loaded any web page yet.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.UserAgent">
            <summary>
                Gets or sets the <c>user-agent</c> of the current browser instance.
            </summary>
            <value>
                The <c>user-agent</c> string for this browser.
                If the string has not been overridden, then the property is the same as the
                default <c>user-agent</c> string obtained through <see cref="P:DotNetBrowser.Net.INetwork.UserAgent" />
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.Zoom">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Zoom.IZoom" /> instance that can be used for zooming content of a web page loaded in the current
                browser instance.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Zoom.IZoom" /> instance associated with this <see cref="T:DotNetBrowser.Browser.IBrowser" />. </value>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.FocusLost">
            <summary>
                Occurs when the browser instance has lost the focus.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.FocusGained">
            <summary>
                Occurs when the browser instance has gained the focus.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.BrowserBecameResponsive">
            <summary>
                Occurs when the browser instance has become responsive.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.BrowserBecameUnresponsive">
            <summary>
                Occurs when the browser instance has become unresponsive.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.FocusRequested">
            <summary>
                Occurs when JavaScript sends a request to focus the Browser instance by calling the
                <c>window.focus()</c> method.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.RenderProcessTerminated">
            <summary>
                Occurs when a render process has been terminated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.SpellCheckCompleted">
            <summary>
                Occurs when spell checking on the frame has been completed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.StatusChanged">
            <summary>
                Occurs when the status text has been changed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.TitleChanged">
            <summary>
                Occurs when the web page title has been changed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.UpdateBoundsRequested">
            <summary>
                Occurs when JavaScript requests to update bounds of the Browser instance.
            </summary>
            <remarks>
                JavaScript can request to update bounds of the Browser instance through the
                following JavaScript functions:
                <list type="bullet">
                    <item>
                        <term>
                            <c>window.moveTo()</c>
                        </term>
                        <description>
                            moves a window to the specified position.
                        </description>
                    </item>
                    <item>
                        <term>
                            <c>window.moveBy()</c>
                        </term>
                        <description>
                            moves a window a specified number of pixels relative to its
                            current coordinates.
                        </description>
                    </item>
                    <item>
                        <term>
                            <c>window.resizeTo()</c>
                        </term>
                        <description>
                            resizes the window to the specified width and height.
                        </description>
                    </item>
                    <item>
                        <term>
                            <c>window.resizeBy()</c>
                        </term>
                        <description>
                            resizes the window by the specified pixels.
                        </description>
                    </item>
                </list>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.ConsoleMessageReceived">
            <summary>
                Occurs when the message was added to the console.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.FaviconChanged">
            <summary>
                Occurs when the web page favicon has changed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.FrameCreated">
            <summary>
                Occurs when the <see cref="T:DotNetBrowser.Frames.IFrame" /> has been created.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.FrameDeleted">
            <summary>
                Occurs when the <see cref="T:DotNetBrowser.Frames.IFrame" /> has been deleted.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.FullScreenEntered">
            <summary>
                Occurs when the browser instance has been toggled into full-screen mode.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Browser.IBrowser.FullScreenExited">
            <summary>
                Occurs when the browser instance has been toggled out of full-screen mode.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowser.DisposeAsync(DotNetBrowser.Browser.BrowserDisposeOptions)">
            <summary>
                Asynchronously disposes the current browser instance according to the given options.
            </summary>
            <param name="browserDisposeOptions">browser dispose options.</param>
            <returns>
                The task that represents the result of the asynchronous dispose process.
                <c>True</c> indicates that the browser instance is successfully disposed without any dialogs,
                <c>false</c> if the dispose process was canceled.
                This may happen if the <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.BeforeUnloadHandler" /> handler was invoked and
                the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.BeforeUnloadResponse.Stay" /> response was sent.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    If the currently loaded web page registers the <c>onbeforeunload</c> JavaScript event
                    and the given options tell the browser to fire the <c>beforeunload</c>
                    event, then this method will not dispose the browser right away.
                </para>
                <para>
                    The <see cref="P:DotNetBrowser.Browser.Dialogs.IJsDialogs.BeforeUnloadHandler" /> will be invoked
                    in this case and if the handler tells the browser to stay on the web page, then the browser
                    will not be disposed.
                </para>
                <para>
                    The following example demonstrates how to dispose the browser instance as if a user
                    manually clicking the close button of the tab/window.
                </para>
                <code>
                    browser.DisposeAsync(new BrowserDisposeOptions(){BeforeUnloadEventHandled = true});
                </code>
                <para>
                    If the browser is already disposed, then this method does nothing.
                </para>
            </remarks>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowser.Focus">
            <summary>
                Tells the browser that it has focus and must be activated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowser.ReplaceMisspelledWord(System.String)">
            <summary>
                Replaces misspelled word under cursor on the currently loaded web page with the given <paramref name="word" />.
                If there is no misspelled word under cursor, this method does nothing.
            </summary>
            <param name="word">a string that represents the word for replacement</param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <exception cref="T:System.ArgumentException">
                The <paramref name="word" /> is null, empty, or consists only of white-space
                characters.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowser.SaveWebPage(System.String,System.String,DotNetBrowser.Browser.SavePageType)">
            <summary>
                Initiates the saving process of the currently loaded web page. The web page can be saved as a
                single HTML file or the file with resources. Before saving a web page make sure that it is
                not being loaded. It is recommended to completely loaded the web page and only then save it.
            </summary>
            <param name="filePath">an absolute path to a file in which the web page will be saved.</param>
            <param name="resourcesPath">
                an absolute path to a directory in which the resources (e.g. images, css)
                of the web page will be saved. If the directory does not exist, it will
                be created
            </param>
            <param name="saveType">
                determines how the web page will be saved: as an HTML file with all the
                required resources (e.g. images, css etc.), a single HTML or MHTML file
            </param>
            <returns><c>true</c> if the saving process has been initialized successfully, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <exception cref="T:System.ArgumentException">
                The <paramref name="filePath" /> is null, empty, or consists only of white-space
                characters.
            </exception>
            <exception cref="T:System.ArgumentException">
                The <paramref name="resourcesPath" /> is null, empty, or consists only of
                white-space characters.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowser.TakeImage">
            <summary>
                Creates and returns an image of the currently loaded web page.
            </summary>
            <returns>a <see cref="T:DotNetBrowser.Ui.Bitmap" /> that contains the image of the currently loaded web page.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    The bitmap size depends on the size of the current browser instance and the device scale
                    factor of the display where it is located at the moment. If the current browser size is
                    empty, then the bitmap will be empty as well.
                </para>
                <para>
                    For example, if the device scale factor of the display where the browser instance is
                    located at the moment is 2.0 and the browser size is 100x100, then the size of the bitmap is
                    expected to be 200x200.
                </para>
            </remarks>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowser.Unfocus">
            <summary>
                Tells the browser that it does not have focus and must be deactivated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.ShowContextMenuHandler">
            <summary>
                Gets or sets a handler that is used when the browser should show a context menu.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <remarks>
                <para>
                    The passed <see cref="T:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters" /> object contains information about the context menu to show.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Handlers.ShowContextMenuResponse.Close" /> method to close the context menu without choice.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Handlers.ShowContextMenuResponse.Select(DotNetBrowser.ContextMenu.ContextMenuItem)" /> method to choose the context menu item.
                </para>
                <para>
                    If an exception occurs inside the handler implementation, the default behavior will be applied - the method
                    <see cref="M:DotNetBrowser.Browser.Handlers.ShowContextMenuResponse.Close" /> will be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.SelectCertificateHandler">
            <summary>
                Gets or sets a handler that is used when the web server requires authorization via client certificate.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <remarks>
                <para>The <see cref="T:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateParameters" /> object contains information about the authorization request.</para>
                <para>
                    To access the list of the certificates from the system storage that match the server criteria you
                    can use the <see cref="P:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateParameters.Certificates" /> property.
                </para>
                <para>
                    You can use this handler to display a dialog with the list of the available certificates
                    that allows the user to select the required certificate. Please note that it is not necessary to
                    display a dialog in this handler.
                </para>
                <para>This handler itself is never called on the UI thread directly.</para>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse.Cancel" /> method to cancel the authorization.</para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse.Select(System.Int32)" /> method to inform the browser to use
                    the client certificate located by the passed index in the certificate list.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse.Select(DotNetBrowser.Net.Certificates.Certificate)" /> method to inform the
                    browser to use the specified client certificate.
                </para>
                <para>
                    If an exception occurs inside the handler implementation, the default behavior will be applied - the method
                    <see cref="M:DotNetBrowser.Browser.Dialogs.Handlers.SelectCertificateResponse.Cancel" /> will be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.CreatePopupHandler">
            <summary>
                Gets or sets a handler that is used when the browser decides whether a new popup instance can be created or not.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <remarks>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Handlers.CreatePopupResponse.Create" /> method to let the browser to create a new popup.</para>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Handlers.CreatePopupResponse.Suppress" /> method to suppress popup.</para>
                <para>
                    If an exception occurs inside the handler implementation, the default behavior will be applied - the method
                    <see cref="M:DotNetBrowser.Browser.Handlers.CreatePopupResponse.Suppress" /> will be used.
                </para>
                <para><b>Important:</b> the engine will be blocked until you return control from the callback.</para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.InjectCssHandler">
            <summary>
                Gets or sets a handler that is used when the document element has been created and a custom stylesheet can
                be injected into the document.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Handlers.InjectCssResponse.Inject(System.String)" /> method to inject a custom stylesheet into the
                    document.
                </para>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Handlers.InjectCssResponse.Proceed" /> method to continue loading without injecting.</para>
                <para>
                    If an exception occurs inside the handler implementation, the default behavior will be applied - the method
                    <see cref="M:DotNetBrowser.Browser.Handlers.InjectCssResponse.Proceed" /> will be used.
                </para>
                <para><b>Important:</b> the engine will be blocked until you return control from the callback.</para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.InjectJsHandler">
            <summary>
                Gets or sets a handler that is used when the document element has been created and a custom JavaScript can
                be injected into the document.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <remarks>
                <para>
                    You can inject a custom JavaScript code using the <see cref="M:DotNetBrowser.Frames.IFrame.ExecuteJavaScript(System.String,System.Boolean)" />
                    method.This callback is intended to give you an opportunity to inject a .NET object into
                    JavaScript code or inject a custom JavaScript code for further execution before any scripts are
                    executed in the particular frame. For example:
                    <code>
                        Browser.InjectJsHandler = new Handler&lt;InjectJsParameters&gt;(args =&gt;
                        {
                            IJsObject window = args.Frame.ExecuteJavaScript&lt;IJsObject&gt;("window").Result;
                            window["myObject"] = new MyObject();
                        });
                    </code>
                </para>
                <para>
                    The MyObject class may look like this:
                    <code>
                    public class MyObject
                    {
                        public string SayHelloTo(string firstName) =&gt; "Hello " + firstName + "!";
                    }
                </code>
                </para>
                <para>
                    When the property is set, you can call methods of the injected .NET object from JavaScript:
                    <code>
            window.myObject.SayHelloTo('John');
                </code>
                </para>
                <para>This handler may be invoked several times for the same frame.</para>
                <para>
                    <b>Important:</b> you should avoid executing a JavaScript code that modifies the DOM tree of
                    the web page being loaded.You must not use DotNetBrowser DOM API to remove the frame for which this
                    callback is invoked, otherwise the render process will crash.
                </para>
                <para><b>Important:</b> the engine will be blocked until you return control from the callback.</para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.OpenPopupHandler">
            <summary>
                Gets or sets a handler that is used when a new popup browser instance should be opened.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <remarks>
                <para><b>Important:</b> the engine will be blocked until you return control from the callback.</para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.RequestPrintHandler">
            <summary>
                Gets or sets a handler that is used when the printing is initiated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <remarks>
                <para>In this callback you can cancel or allow showing print preview dialog, or print the content programmatically.</para>
                <para>By default, the printing is canceled if there is no browser view initialized from the browser.</para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Handlers.RequestPrintResponse.ShowPrintPreview" /> method to show the print preview.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Browser.Handlers.RequestPrintResponse.Print" /> method to continue printing and configure it programmatically
                    in <see cref="P:DotNetBrowser.Browser.IBrowser.PrintHtmlContentHandler" /> and <see cref="P:DotNetBrowser.Browser.IBrowser.PrintPdfContentHandler" />.
                </para>
                <para>Use the <see cref="M:DotNetBrowser.Browser.Handlers.RequestPrintResponse.Cancel" /> method to cancel printing.</para>
                <para>
                    If an exception occurs inside the handler implementation, the default behavior will be applied - the method
                    <see cref="M:DotNetBrowser.Browser.Handlers.RequestPrintResponse.Cancel" /> will be used.
                </para>
                <para>
                    <b>Important:</b> do not use <see cref="M:DotNetBrowser.Browser.Handlers.RequestPrintResponse.ShowPrintPreview" /> if the browser is not
                    displayed. In this case, the dialog will not be visible  - as a result, the end user will not be able to
                    close it or confirm printing.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.PrintHtmlContentHandler">
            <summary>
                Gets or sets a handler that is used when the HTML content printing is initiated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <remarks>
                <para>
                    In this callback you can configure the print settings. The workflow is the following:
                </para>
                <para>
                    <list type="bullet">
                        <item>
                            <value>
                                Find the required printer using the <see cref="T:DotNetBrowser.Print.IPrinters`2" />
                                interface.
                                You can obtain an instance of <c>Printers</c> using the
                                <see cref="P:DotNetBrowser.Print.Handlers.PrintContentParameters`2.Printers" /> property.
                            </value>
                        </item>
                        <item>
                            <value>Get the current <see cref="T:DotNetBrowser.Print.IPrintJob`1" /> from the printer.</value>
                        </item>
                        <item>
                            <value>
                                Configure the required settings for the print job using the
                                <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> interface provided by the
                                <see cref="P:DotNetBrowser.Print.IPrintJob`1.Settings" /> property.
                            </value>
                        </item>
                        <item>
                            <value>
                                Apply the configured settings using the
                                <see cref="M:DotNetBrowser.Print.Settings.IPrintSettings.Apply" /> method.
                            </value>
                        </item>
                        <item>
                            <value>
                                Tell the browser to proceed with the printing using the configured settings:
                                <see cref="M:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse.Print(DotNetBrowser.Print.SystemPrinter{DotNetBrowser.Print.SystemPrinter.IHtmlSettings})" />.
                            </value>
                        </item>
                    </list>
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse.Print(DotNetBrowser.Print.SystemPrinter{DotNetBrowser.Print.SystemPrinter.IHtmlSettings})" /> method
                    to continue printing using the selected printer.
                </para>
                <para>Use the <see cref="M:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse.Cancel" /> method to cancel printing.</para>
                <para>
                    If an exception occurs inside the handler implementation, the default behavior will be applied - the method
                    <see cref="M:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse.Cancel" /> will be used.
                </para>
                <para>
                    If printing is initiated when the browser is loading a web page, this callback is not
                    invoked.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.PrintPdfContentHandler">
            <summary>
                Gets or sets a handler that is used when the PDF content printing is initiated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
            <remarks>
                <para>
                    In this callback you can configure the print settings. The workflow is the following:
                </para>
                <para>
                    <list type="bullet">
                        <item>
                            <value>
                                Find the required printer using the <see cref="T:DotNetBrowser.Print.IPrinters`2" />
                                interface.
                                You can obtain an instance of <c>Printers</c> using the
                                <see cref="P:DotNetBrowser.Print.Handlers.PrintContentParameters`2.Printers" /> property.
                            </value>
                        </item>
                        <item>
                            <value>Get the current <see cref="T:DotNetBrowser.Print.IPrintJob`1" /> from the printer.</value>
                        </item>
                        <item>
                            <value>
                                Configure the required settings for the print job using the
                                <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> interface provided by the
                                <see cref="P:DotNetBrowser.Print.IPrintJob`1.Settings" /> property.
                            </value>
                        </item>
                        <item>
                            <value>
                                Apply the configured settings using the
                                <see cref="M:DotNetBrowser.Print.Settings.IPrintSettings.Apply" /> method.
                            </value>
                        </item>
                        <item>
                            <value>
                                Tell the browser to proceed with the printing using the configured settings:
                                <see cref="M:DotNetBrowser.Print.Handlers.PrintPdfContentResponse.Print(DotNetBrowser.Print.SystemPrinter{DotNetBrowser.Print.SystemPrinter.IPdfSettings})" />.
                            </value>
                        </item>
                    </list>
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Print.Handlers.PrintPdfContentResponse.Print(DotNetBrowser.Print.SystemPrinter{DotNetBrowser.Print.SystemPrinter.IPdfSettings})" /> method
                    to continue printing using the selected printer.
                </para>
                <para>Use the <see cref="M:DotNetBrowser.Print.Handlers.PrintPdfContentResponse.Cancel" /> method to cancel printing.</para>
                <para>
                    If an exception occurs inside the handler implementation, the default behavior will be applied - the method
                    <see cref="M:DotNetBrowser.Print.Handlers.PrintPdfContentResponse.Cancel" /> will be used.
                </para>
                <para>
                    If printing is initiated when the browser is loading a web page, this callback is not
                    invoked.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowser.StartDownloadHandler">
            <summary>
                Gets or sets a handler that is used when the browser is about to start downloading the file.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Downloads.IDownloads" /> has already been disposed.</exception>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Downloads.Handlers.StartDownloadResponse.DownloadTo(System.String)" /> method to
                    confirm the download and specify the location to store the downloaded file.
                </para>
                <para>
                    Use the<see cref="M:DotNetBrowser.Downloads.Handlers.StartDownloadResponse.Cancel" /> method if you do not need
                    to download the file.
                </para>
                <para>
                    If an exception occurs inside the handler implementation, the default behavior will be applied - the method
                    <see cref="M:DotNetBrowser.Downloads.Handlers.StartDownloadResponse.Cancel" /> will be used.
                </para>
            </remarks>
        </member>
        <member name="T:DotNetBrowser.Browser.IBrowserSettings">
            <summary>
                The settings of the browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.AllowJavaScriptAccessClipboard">
            <summary>
                Allows or disallows JavaScript code on the web pages loaded in the browser to access clipboard.
            </summary>
            <value><c>true</c> if JavaScript is allowed, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.AllowLoadingImagesAutomatically">
            <summary>
                Allows or disallows loading images automatically on the web pages loaded in the browser.
            </summary>
            <value><c>true</c> if loading images automatically is allowed, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.AllowRunningInsecureContent">
            <summary>
                Allows or disallows running an insecure content in the browser.
            </summary>
            <value><c>true</c> if running an insecure content is allowed, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.AllowScriptsToCloseWindows">
            <summary>
                Allows or disallows JavaScript code on the web pages loaded in the browser to close the browser.
            </summary>
            <value><c>true</c> if closing the browser from JavaScript is allowed, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.ApplicationCacheEnabled">
            <summary>
                Enables or disables the application cache in the browser.
            </summary>
            <value><c>true</c> if application cache is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.DefaultEncoding">
            <summary>
                Gets or sets the default text encoding.
            </summary>
            <value>The default text encoding.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.ImagesEnabled">
            <summary>
                Enables or disables images displaying on the web pages loaded in the browser.
            </summary>
            <value><c>true</c> if displaying images is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.JavaScriptEnabled">
            <summary>
                Enables or disables JavaScript on the web pages loaded in the browser.
            </summary>
            <value><c>true</c> if JavaScript is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.LocalStorageEnabled">
            <summary>
                Enables or disables the local storage in the browser.
            </summary>
            <value><c>true</c> if the local storage is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.OverscrollHistoryNavigationEnabled">
            <summary>
                Enables or disables the back/forward navigation with a left/right swipe in the browser.
            </summary>
            <value><c>true</c> if back/forward navigation with a left/right swipe is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.PluginsEnabled">
            <summary>
                Enables or disables plugins on the web pages loaded in the browser.
            </summary>
            <value><c>true</c> if plugins are enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.ScrollbarsHidden">
            <summary>
                Hides or shows scrollbars on the web pages.
            </summary>
            <value><c>true</c> if scrollbars are hidden, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.TransparentBackgroundEnabled">
            <summary>
                Enables or disables transparent background on the web pages.By default, the background is always
                opaque.
            </summary>
            <value><c>true</c> if transparent background is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>This property is supported for the <see cref="F:DotNetBrowser.Engine.RenderingMode.OffScreen" /> rendering mode on Windows.</para>
                <para>
                    The attempt to set this property to <c>true</c> in the unsupported rendering mode will result in an
                    exception.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserSettings.WebRtcIpHandlingPolicy">
            <summary>
                Gets or sets the WebRTC IP handling policy for the browser.
            </summary>
            <value>The current WebRTC IP handling policy for the browser.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                Specifying the custom WebRTC IP handling policy can be used to protect against WebRTC leaks - the WebRTC itself
                will remain enabled.
            </remarks>
        </member>
        <member name="T:DotNetBrowser.Browser.IBrowserView">
            <summary>
                The interface that is implemented by UI components which are able to display the browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserViewImpl.CreatePopupHandler">
            <summary>
                This handler will be used when browser decides whether a new popup instance can be created or not,
                if a different handler was not configured for the browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserViewImpl.DefaultDialogs">
            <summary>
                The default dialogs implementation for this browser view.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserViewImpl.DefaultJsDialogs">
            <summary>
                The default JavaScript dialogs implementation for this browser view.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserViewImpl.OpenPopupHandler">
            <summary>
                This handler is used when a new popup browser instance should be opened,
                if a different handler was not configured for the browser.
            </summary>
            <remarks>
                <para><b>Important:</b> the engine will be blocked until you return control from the callback.</para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserViewImpl.SelectCertificateHandler">
            <summary>
                This handler is used when the client SSL certificate should be selected,
                if a different handler was not configured for the browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserViewImpl.ShowContextMenuHandler">
            <summary>
                The default context menu handler implementation for this browser view.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.IBrowserViewImpl.StartDownloadHandler">
            <summary>
                This handler is used when the browser is about to start downloading the file,
                if a different handler was not configured for the browser.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowserViewImpl.DeinitializeView">
            <summary>
                Called when this view should be deinitialized and detached from all the browser widgets.
            </summary>
            <remarks>This usually happens before the browser is disposed or a different view is configured for the same browser.</remarks>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowserViewImpl.InitializeHardwareAcceleratedView(DotNetBrowser.Browser.Widgets.IWindowedWidget)">
            <summary>
                Called by Browser when it is necessary to initialize a hardware-accelerated browser view.
            </summary>
            <param name="windowedWidget">the hardware-accelerated widget that should be displayed in the browser view.</param>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowserViewImpl.InitializeOffScreenView(DotNetBrowser.Browser.Widgets.IRenderWidget)">
            <summary>
                <para>
                    Called by Browser when it is necessary to initialize an off-screen browser view.
                </para>
            </summary>
            <param name="renderWidgets">
                the object that can be used to obtain the active off-screen render widget and subscribe to the notifications when
                other widgets should be shown or hidden.
            </param>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowserViewImpl.OnFocusGained(System.Object,System.EventArgs)">
            <summary>
                Occurs when the browser instance has gained the focus.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserView" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowserViewImpl.OnFocusLost(System.Object,System.EventArgs)">
            <summary>
                Occurs when the browser instance has lost the focus.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowserView" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Browser.IBrowserViewImpl.OnFocusRequested(System.Object,System.EventArgs)">
            <summary>
                Event handler for <see cref="E:DotNetBrowser.Browser.IBrowser.FocusRequested" /> event.
            </summary>
            <param name="sender">the sender of the event</param>
            <param name="e">the event args</param>
        </member>
        <member name="P:DotNetBrowser.Browser.IWidgetsProvider.BrowserView">
            <summary>
                The browser view which currently displays the contents of this browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.IWidgetsProvider.RenderingMode">
            <summary>
                Current rendering mode.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.IWidgetsProvider.RenderWidget">
            <summary>
                Off-screen widgets related to this browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.IWidgetsProvider.WindowedWidget">
            <summary>
                The hardware-accelerated widget.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.SavePageType">
            <summary>
                Determines how the web page will be saved.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.SavePageType.Html">
            <summary>
                Single HTML.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.SavePageType.CompletePage">
            <summary>
                HTML file with required resources (e.g. images, css etc.).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.SavePageType.MHtml">
            <summary>
                MHTML file.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.WebRtcIpHandlingPolicy">
            <summary>
                The media performance/privacy tradeoffs which affect how WebRTC traffic will be routed and
                how much local address information will be exposed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.WebRtcIpHandlingPolicy.Unspecified">
            <summary>
                The policy has not been specified.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.WebRtcIpHandlingPolicy.Default">
            <summary>
                This is the default behavior. Currently, WebRTC has the right to enumerate
                all interfaces and bind them to discover public interfaces.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.WebRtcIpHandlingPolicy.DefaultPublicInterfacesOnly">
            <summary>
                WebRTC should only use the default route used by HTTP. This doesn't expose
                any local addresses.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.WebRtcIpHandlingPolicy.DefaultPublicAndPrivateInterfaces">
            <summary>
                WebRTC should only use the default route used by HTTP. This also exposes the
                associated default private address. Default route is the route chosen by the
                OS on a multi-homed endpoint.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.WebRtcIpHandlingPolicy.DisableNonProxiedUdp">
            <summary>
                WebRTC should only use TCP to contact peers or servers unless the proxy
                server supports UDP. This doesn't expose any local addresses either.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Widgets.Events.CursorChangedEventArgs">
            <summary>
                The <see cref="E:DotNetBrowser.Browser.Widgets.IRenderWidget.CursorChanged" /> event data which can be used to update the cursor for the off-screen
                view.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.Events.CursorChangedEventArgs.Bitmap">
            <summary>
                The cursor image. Available for custom cursors only.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.Events.CursorChangedEventArgs.CursorType">
            <summary>
                The cursor type. If set to <see cref="F:DotNetBrowser.Ui.Cursors.CursorType.Custom" />, the cursor image and hotspot are provided in the
                corresponding fields.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.Events.CursorChangedEventArgs.Hotspot">
            <summary>
                The cursor hotspot. Available for custom cursors only.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Widgets.Events.RenderWidgetEventArgs">
            <summary>
                The event data related to the off-screen widget events.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.Events.RenderWidgetEventArgs.Widget">
            <summary>
                The off-screen widget.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Widgets.Events.TabbingDoneEventArgs">
            <inheritdoc />
            <summary>
                The <see cref="E:DotNetBrowser.Browser.Widgets.IWidget.TabbingDone" /> event data.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.Events.TabbingDoneEventArgs.Reason">
            <summary>
                Describes the reason of the event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Widgets.Events.TabbingDoneReason">
            <summary>
                The reason of the <see cref="E:DotNetBrowser.Browser.Widgets.IWidget.TabbingDone" />event.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Widgets.Events.TabbingDoneReason.DoneTabbingNext">
            <summary>
                The focus should be traversed to the next focusable component.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Browser.Widgets.Events.TabbingDoneReason.DoneTabbingPrevious">
            <summary>
                The focus should be traversed to the previous focusable component.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Widgets.Events.TooltipChangedEventArgs">
            <inheritdoc />
            <summary>
                The <see cref="E:DotNetBrowser.Browser.Widgets.IRenderWidget.TooltipChanged" /> event data which can be used to show the tooltip.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.Events.TooltipChangedEventArgs.TooltipText">
            <summary>
                The tooltip text.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Widgets.Handlers.PaintParameters">
            <summary>
                The <see cref="P:DotNetBrowser.Browser.Widgets.IRenderWidget.PaintHandler" /> data which can be used to render the off-screen view.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.Handlers.PaintParameters.DirtyRect">
            <summary>
                The rectangle that is considered to be "dirty" and should be updated.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.Handlers.PaintParameters.ScaleFactor">
            <summary>
                The current scale factor (DPI).
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.Handlers.PaintParameters.View">
            <summary>
                The repainted view (image).
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Widgets.IRenderWidget">
            <summary>
                <para>The off-screen Browser widget.</para>
                <para>
                    This widget provides the methods and events which can be used to render the browser contents on UI components
                    and forward user actions to Chromium.
                </para>
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.IRenderWidget.DragDrop">
            <summary>
                A service that can be used for Drag &amp; Drop actions simulation.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.IRenderWidget.Keyboard">
            <summary>
                A service that can be used for keyboard input simulation.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.IRenderWidget.Mouse">
            <summary>
                A service that can be used for mouse input simulation.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.IRenderWidget.PaintHandler">
            <summary>
                The handler which is used when the browser contents were changed and the UI component should be repainted.
            </summary>
        </member>
        <member name="E:DotNetBrowser.Browser.Widgets.IRenderWidget.CursorChanged">
            <summary>
                Occurs when the cursor should be changed.
            </summary>
        </member>
        <member name="E:DotNetBrowser.Browser.Widgets.IRenderWidget.TooltipChanged">
            <summary>
                Occurs when the tooltip has changed.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Widgets.IRenderWidget.SetObservedWindowHandle(System.Int64)">
            <summary>
                Sets the window handle that should be observed for detecting the current display.
            </summary>
            <param name="handle">The window handle to observe.</param>
        </member>
        <member name="T:DotNetBrowser.Browser.Widgets.IWidget">
            <summary>
                The browser widget.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Browser.Widgets.IWidget.IsDpiAware">
            <summary>
                Indicates whether this widget is DPI-aware.
            </summary>
        </member>
        <member name="E:DotNetBrowser.Browser.Widgets.IWidget.TabbingDone">
            <summary>
                <para>Indicates that the client should take the focus from the web content. </para>
                <para>
                    This event occurs when tabbing through controls on the page is done.
                </para>
            </summary>
            <remarks>
                Handling this event means that the client should decide which application component the focus should be passed to.
            </remarks>
        </member>
        <member name="M:DotNetBrowser.Browser.Widgets.IWidget.Focus">
            <summary>
                Tells this widget that it has focus and must be activated.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Widgets.IWidget.Minimize">
            <summary>
                The form with the widget is minimized.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Widgets.IWidget.Restore">
            <summary>
                The form with the widget is restored.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Widgets.IWidget.SetBounds(DotNetBrowser.Geometry.Point,DotNetBrowser.Geometry.Point,DotNetBrowser.Geometry.Size)">
            <summary>
                Updates the bounds of the current widget instance with the given ones.
            </summary>
            <remarks>
                <para>
                    By default, the size of the browser is empty.Many web pages rely on the browser size and require that it is not
                    empty.
                    The DOM document of a web page might not be loaded and displayed at all, because there is no
                    sense in loading and rendering DOM document when it is empty.
                </para>
                <para>
                    Use this method when you do not need to display content of the loaded web page, but the
                    web page must "think" it has been loaded in a browser instance with a non-empty size.
                </para>
            </remarks>
            <param name="size">The new size.</param>
            <param name="location">The widget location inside its parent window.</param>
            <param name="locationOnScreen">The widget location in screen coordinates.</param>
        </member>
        <member name="M:DotNetBrowser.Browser.Widgets.IWidget.Unfocus">
            <summary>
                Tells this widget that it does not have focus and must be deactivated.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Browser.Widgets.IWindowedWidget">
            <summary>
                <para>The hardware-accelerated Browser widget.</para>
                <para>This widget wraps a native window which is used to draw the browser contents</para>
            </summary>
        </member>
        <member name="M:DotNetBrowser.Browser.Widgets.IWindowedWidget.Attach(System.UInt64)">
            <summary>
                Attach the widget to its parent window. The Chromium native window will become its child.
            </summary>
            <param name="handle">The native handle of the parent window. </param>
        </member>
        <member name="M:DotNetBrowser.Browser.Widgets.IWindowedWidget.Detach">
            <summary>
                Sets the target window handle for display checking to 0 and hides the widget.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Cache.Events.DiskCacheClearedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Cache.IHttpCache.DiskCacheCleared" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Cache.Events.DiskCacheClearedEventArgs.HttpCache">
            <summary>
                The <see cref="T:DotNetBrowser.Cache.IHttpCache" /> instance associated with the event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Cache.IHttpCache">
            <summary>
                An HTTP cache service.
            </summary>
            <remarks>
                <para>
                    By default, HTTP cache stores the resources fetched from the web on a disk or in the
                    memory. Chromium itself decides how to cache the resources for optimal performance.
                </para>
                <para>
                    The memory cache stores and loads the resources to and from the process memory (RAM). It is a
                    fast, but non-persistent way.
                </para>
                <para>
                    The disk cache is persistent. The cached resources are stored and loaded to and from the
                    disk. The disk cache is stored in the HttpCache folder in the User Data directory.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Cache.IHttpCache.Engine">
            <summary>
                The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.
            </summary>
        </member>
        <member name="E:DotNetBrowser.Cache.IHttpCache.DiskCacheCleared">
            <summary>
                Occurs when the disk cache has been cleared.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Cache.IHttpCache.Clear">
            <summary>
                Marks all the cache entries for deletion. The deletion of the entries is performed asynchronously by the
                Chromium engine itself. If the engine is closed during this task executing - the operation will be canceled.
            </summary>
            <returns>a <see cref="T:System.Threading.Tasks.Task" /> which is completed when the disk cache is cleared.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Cache.IHttpCache" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Cache.IHttpCache.ClearDiskCache">
            <summary>
                Marks all entries in the disk cache for deletion. The deletion of the entries is performed asynchronously by the
                Chromium engine itself.
                This method is obsolete with version 2.2 and above.
                Use <see cref="M:DotNetBrowser.Cache.IHttpCache.Clear" /> instead.
            </summary>
            <returns>a <see cref="T:System.Threading.Tasks.Task" /> which is completed when the disk cache is cleared.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Cache.IHttpCache" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.ContextMenu.ContextMenuItem">
            <summary>
                A custom context menu item.
            </summary>
        </member>
        <member name="P:DotNetBrowser.ContextMenu.ContextMenuItem.IsChecked">
            <summary>
                Indicates whether context menu item is checked or not.
            </summary>
            <value><c>true</c> if the item is checked, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.ContextMenu.ContextMenuItem.IsEnabled">
            <summary>
                Indicates whether context menu item is enabled or not.
            </summary>
            <value><c>true</c> if the item is enabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.ContextMenu.ContextMenuItem.SubItems">
            <summary>
                Gets a collection of sub-items.
            </summary>
            <value>The collection of sub-items or an empty collection if the menu item doesn't have sub-items.</value>
        </member>
        <member name="P:DotNetBrowser.ContextMenu.ContextMenuItem.Text">
            <summary>
                Gets the text of the context menu item.
            </summary>
            <value>The text of the context menu item. If this menu item represents a separator, its text will be an empty string.</value>
        </member>
        <member name="P:DotNetBrowser.ContextMenu.ContextMenuItem.Type">
            <summary>
                Gets the type of the context menu item.
            </summary>
            <value>The type of the context menu item.</value>
        </member>
        <member name="T:DotNetBrowser.ContextMenu.ContextMenuItemType">
            <summary>
                The context menu item types.
            </summary>
        </member>
        <member name="F:DotNetBrowser.ContextMenu.ContextMenuItemType.Unspecified">
            <summary>
                The context menu item type is not specified.
            </summary>
        </member>
        <member name="F:DotNetBrowser.ContextMenu.ContextMenuItemType.Item">
            <summary>
                The context menu item is a simple item.
            </summary>
        </member>
        <member name="F:DotNetBrowser.ContextMenu.ContextMenuItemType.CheckableItem">
            <summary>
                The context menu item is a checkable item.
            </summary>
        </member>
        <member name="F:DotNetBrowser.ContextMenu.ContextMenuItemType.Group">
            <summary>
                The context menu item is a sub-menu with items.
            </summary>
        </member>
        <member name="F:DotNetBrowser.ContextMenu.ContextMenuItemType.Separator">
            <summary>
                The context menu item is a separator.
            </summary>
        </member>
        <member name="F:DotNetBrowser.ContextMenu.ContextMenuItemType.SubMenu">
            <summary>
                The context menu item is a sub-menu with items.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Cookies.Cookie">
            <summary>
                Represents an HTTP cookie.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.CreationTime">
            <summary>
                Gets the cookie creation time.
            </summary>
            <value>The creation time.</value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.DomainName">
            <summary>
                Gets the domain name set for this cookie. It specifies allowed hosts
                to receive the cookie.
            </summary>
            <value>The domain name.</value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.ExpirationTime">
            <summary>
                Gets the cookie expiration time.
            </summary>
            <value>The expiration time or null if the expiration time is not set.</value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.IsHttpOnly">
            <summary>
                Gets the <c>HttpOnly</c> attribute value of the cookie.
                The <c>HttpOnly</c> cookie attribute can help to mitigate hijacking and XSS attacks
                by preventing access to cookie value through JavaScript.
            </summary>
            <value>The <c>HttpOnly</c> attribute value.</value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.IsSecure">
            <summary>
                Gets the <c>Secure</c> attribute value of the cookie.
                A secure cookie is only sent to the server with an encrypted
                request over the HTTPS protocol.
            </summary>
            <value>
                The <c>Secure</c> attribute value.
            </value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.IsSession">
            <summary>
                Indicates whether this cookie is a session cookie without
                expiration time.
            </summary>
            <value>
                <c>true</c> if this cookie is a session cookie without expiration time, <c>false</c> if this cookie is a persistent
                cookie that has expiration time.
            </value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.Name">
            <summary>
                Gets the name of the cookie.
            </summary>
            <value>The cookie's name.</value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.Path">
            <summary>
                Gets the path on the server to which the browser returns this cookie. The
                cookie is visible to all sub-paths on the server.
            </summary>
            <value>
                The path on the server, for example, <i>/catalog</i>.
            </value>
            <remarks>
                <para>
                    <c>Path</c> indicates a URL path that must exist in the requested URL in order to send
                    the <c>Cookie</c> header. The %x2F ("/") character is considered a directory separator,
                    and subdirectories will match as well.
                </para>
                <para>
                    For example, if <c>Path=/docs</c> is set, these paths will match:
                    <ul>
                        <li>
                            <c>/docs</c>
                        </li>
                        <li>
                            <c>/docs/Web/</c>
                        </li>
                        <li>
                            <c>/docs/Web/HTTP</c>
                        </li>
                    </ul>
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.SameSite">
            <summary>
                Gets the <c>SameSite</c> attribute value of the cookie.
                This attribute denotes if your cookie is restricted to a first-party or same-site context.
            </summary>
            <value>
                The <c>SameSite</c> attribute value.
            </value>
            <remarks>
                <para>
                    By default, the attribute value is set to <see cref="F:DotNetBrowser.Cookies.SameSite.LaxMode" /> which means
                    cookies are only set when the domain in the URL of the browser matches the domain of the
                    cookie — a first-party cookie.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.Value">
            <summary>
                Gets the value of the cookie.
            </summary>
            <value>The cookie's value.</value>
        </member>
        <member name="M:DotNetBrowser.Cookies.Cookie.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Cookies.Cookie.Builder">
            <summary>
                A builder class to construct cookie.
            </summary>
            <remarks>
                Each of the properties modifies the state of the builder. Builders are not thread-safe and should
                not be used concurrently from multiple threads without external synchronization.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.Builder.DomainName">
            <summary>
                Gets or sets the domain name for this cookie.
            </summary>
            <exception cref="T:System.ArgumentException">
                <paramref name="value" /> is null.
            </exception>
            <value>The domain name.</value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.Builder.ExpirationTime">
            <summary>
                Gets or sets cookie expiration time.
            </summary>
            <value>The cookie expiration time. This value is null for session cookies.</value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.Builder.HttpOnly">
            <summary>
                Gets or sets the <i>HttpOnly</i> attribute.
                The <c>HttpOnly</c> cookie attribute can help to mitigate hijacking and XSS attacks
                by preventing access to cookie value through JavaScript.
            </summary>
            <value>The <c>HttpOnly</c> attribute value.</value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.Builder.Name">
            <summary>
                Gets or sets the name of the cookie.
            </summary>
            <exception cref="T:System.ArgumentException">
                The <paramref name="value" /> is null, empty or blank.
            </exception>
            <value>The cookie's name.</value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.Builder.Path">
            <summary>
                Gets or sets the path on the server to which the browser returns this cookie. The
                cookie is visible to all sub-paths on the server.
            </summary>
            <value>
                The path on the server, for example, <i>/catalog</i>.
            </value>
            <exception cref="T:System.ArgumentException">
                The <paramref name="value" /> is null, empty or blank.
            </exception>
            <remarks>
                <para>
                    <c>Path</c> indicates a URL path that must exist in the requested URL in order to send
                    the <c>Cookie</c> header. The %x2F ("/") character is considered a directory separator,
                    and subdirectories will match as well.
                </para>
                <para>
                    For example, if <c>Path=/docs</c> is set, these paths will match:
                    <ul>
                        <li>
                            <c>/docs</c>
                        </li>
                        <li>
                            <c>/docs/Web/</c>
                        </li>
                        <li>
                            <c>/docs/Web/HTTP</c>
                        </li>
                    </ul>
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.Builder.SameSite">
            <summary>
                Gets or sets the <c>SameSite</c> attribute value of the cookie.
                This attribute denotes if your cookie should be restricted to a first-party or same-site context.
            </summary>
            <value>
                The <c>SameSite</c> attribute value.
            </value>
            <remarks>
                <para>
                    By default, the attribute value is set to <see cref="F:DotNetBrowser.Cookies.SameSite.LaxMode" /> which means
                    cookies are only set when the domain in the URL of the browser matches the domain of the
                    cookie — a first-party cookie.
                </para>
                <para>
                    The <see cref="F:DotNetBrowser.Cookies.SameSite.None" /> value requires that the <see cref="P:DotNetBrowser.Cookies.Cookie.Builder.Secure" /> attribute
                    is set to <c>true</c>.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.Builder.Secure">
            <summary>
                Gets or sets the <c>Secure</c> attribute value of the cookie.
                A secure cookie is only sent to the server with an encrypted
                request over the HTTPS protocol.
            </summary>
            <value>
                The <c>Secure</c> attribute value.
            </value>
        </member>
        <member name="P:DotNetBrowser.Cookies.Cookie.Builder.Value">
            <summary>
                Gets or sets the value of the cookie.
            </summary>
            <exception cref="T:System.ArgumentException">
                The <paramref name="value" /> is null, empty or blank.
            </exception>
            <value>The cookie's value.</value>
        </member>
        <member name="M:DotNetBrowser.Cookies.Cookie.Builder.Build">
            <summary>
                Builds an HTTP cookie.
            </summary>
            <returns>The constructed <see cref="T:DotNetBrowser.Cookies.Cookie" /> instance.</returns>
        </member>
        <member name="T:DotNetBrowser.Cookies.ICookieStore">
            <summary>
                The system for storing and retrieving cookies. The cookies can be stored in
                the process memory (session cookies) or in files (persistent cookies).
                The <see cref="T:DotNetBrowser.Cookies.ICookieStore" /> instance provides access to both session and persistent cookies.
            </summary>
            <remarks>
                <para>
                    The persistent cookies are stored in the Browser cache directory.
                </para>
                <para>
                    So, if Browser A and B have the same cache directory, then they will access
                    the cookies of each other.
                </para>
                <para>
                    If you need to configure each Browser to use unique cookie storage which is
                    not accessible for other Browser instances, you need to provide unique
                    user data directory for each Browser instance. The user data directory path
                    can be provided via configured <see cref="P:DotNetBrowser.Engine.EngineOptions.UserDataDirectory" /> object that
                    must be passed into the <c>EngineFactory.Create</c> method.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Cookies.ICookieStore.Engine">
            <summary>
                The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Cookies.ICookieStore.Delete(DotNetBrowser.Cookies.Cookie)">
            <summary>
                Deletes one specific cookie. The cookie instance can be received from
                a list of cookies returned from the <see cref="M:DotNetBrowser.Cookies.ICookieStore.GetAllCookies(System.String)" /> method.
            </summary>
            <param name="cookie">cookie to delete.</param>
            <returns>true when cookie was deleted successfully.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Cookies.ICookieStore" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Cookies.ICookieStore.DeleteAllCookies">
            <summary>
                Deletes all of the cookies including session, secure or HTTP only cookies.
            </summary>
            <returns>The number of deleted cookies.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Cookies.ICookieStore" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Cookies.ICookieStore.Flush">
            <summary>
                Use this method to save all the changes you apply to this cookie storage.
                By default all the changes to the cookie store are made in memory, so when
                you restart the application you will not see the changes you made if you
                don't invoke this method on application exit. You can invoke this method
                after every change you made to cookie storage.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Cookies.ICookieStore" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Cookies.ICookieStore.GetAllCookies(System.String)">
            <summary>
                Returns all the cookies for given url including HTTP only cookies.
            </summary>
            <param name="url">The URL associated with the returned cookies.</param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Cookies.ICookieStore" /> has already been disposed.</exception>
            <returns>The collection of all the cookies or an empty collection when there's no cookies.</returns>
        </member>
        <member name="M:DotNetBrowser.Cookies.ICookieStore.SetCookie(System.String,DotNetBrowser.Cookies.Cookie)">
            <summary>
                Sets a session cookie given explicit user-provided cookie attributes and associate
                it with the given <paramref name="url" />.
            </summary>
            <param name="url">
                A valid URL, which host will be associated
                with a new cookie instance. The url string must be
                valid and has the following format: http[https]://host. For example,
                http://www.google.com, https://www.gmail.com etc.
            </param>
            <param name="cookie">An HTTP cookie.</param>
            <exception cref="T:System.ArgumentException">
                The <paramref name="cookie" /> is null, or the <paramref name="url" /> is null,
                empty, or contains blank characters.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Cookies.ICookieStore" /> has already been disposed.</exception>
            <returns><c>true</c> when session cookie was inserted successfully, <c>false</c> otherwise.</returns>
            <remarks>
                If <paramref name="url" /> and <paramref name="cookie.Domain.Domain" /> are different, the cookie will not be set
                and the method returns <c>false</c>. So, make sure that <paramref name="url" /> and
                cookie domain are the same domains. For example, for http://www.teamdev.com
                address the cookie domain must be <c>.teamdev.com</c>
                <para />
                If you set the cookie successfully and the method returns <c>true</c> and you
                decide to find the cookie in the list of all cookies, please note that
                the cookie storage can modify some cookies attributes, such as domain or expiration time.
            </remarks>
        </member>
        <member name="T:DotNetBrowser.Cookies.SameSite">
            <summary>
                The SameSite cookie attribute values of the <c>Set-Cookie</c> HTTP response header. This attribute is used to
                declare in which context the cookies can be sent.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Cookies.SameSite.Unspecified">
            <summary>
                Reserved value.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Cookies.SameSite.StrictMode">
            <summary>
                The cookie can only be sent in a first-party context, when the cookie matches the domain of the current site.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Cookies.SameSite.LaxMode">
            <summary>
                The cookie can be sent with top-level navigations from a third-party site to the web site with the domain matching
                the cookie. This is the default value in modern browsers.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Cookies.SameSite.None">
            <summary>
                The cookie can be sent in a third-party context. To use this mode the cookie must also be marked as secure.
            </summary>
        </member>
        <member name="T:DotNetBrowser.DevTools.IDevTools">
            <summary>
                Allows working with Chromium Developer Tools and access the remote debugging URL of the currently
                loaded web page in the browser instance associated with this DevTools instance.
            </summary>
        </member>
        <member name="P:DotNetBrowser.DevTools.IDevTools.RemoteDebuggingUrl">
            <summary>
                Gets the remote debugging URL of the currently loaded web page in the browser instance associated with this
                DevTools
                instance.
            </summary>
            <value>
                The remote debugging URL. Can be <c>null</c> if the remote debugging URL is not available, for instance, when the
                <see cref="T:DotNetBrowser.Engine.IEngine" /> instance has not been configured with the remote debugging port.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Dom.AlignTo">
            <summary>
                Represents the values that can be used to describe how the element
                will be aligned to the visible area of the scrollable ancestor.
            </summary>
            <seealso cref="M:DotNetBrowser.Dom.IElement.ScrollIntoView(DotNetBrowser.Dom.AlignTo)" />
        </member>
        <member name="F:DotNetBrowser.Dom.AlignTo.Top">
            <summary>
                The top of the element will be aligned to the top of the visible area of the scrollable ancestor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.AlignTo.Bottom">
            <summary>
                The bottom of the element will be aligned to the bottom of the visible area of the scrollable ancestor.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Dom.DocumentPosition">
            <summary>
                Enumeration of the document position that represent the relationship
                between two nodes within the Document.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.DocumentPosition.Unspecified">
            <summary>
                The position is not specified.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.DocumentPosition.Disconnected">
            <summary>
                The nodes are disconnected.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.DocumentPosition.Preceding">
            <summary>
                The position of the other node precedes the position of the reference node.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.DocumentPosition.Following">
            <summary>
                The position of the other node follows the position of the reference node.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.DocumentPosition.Contains">
            <summary>
                The reference node contains the other node.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.DocumentPosition.ContainedBy">
            <summary>The other node contains the reference node.</summary>
        </member>
        <member name="F:DotNetBrowser.Dom.DocumentPosition.ImplementationSpecific">
            <summary>The node positions depend on the DOM implementation and cannot be compared.</summary>
        </member>
        <member name="T:DotNetBrowser.Dom.DomException">
            <summary>
                Thrown when an operation on the DOM element fails.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Dom.DomException.#ctor(System.String)">
            <summary>
                Initializes a new <see cref="T:DotNetBrowser.Dom.DomException" /> instance.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.DeltaMode">
            <summary>
                The type of the delta units.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DeltaMode.Pixel">
            <summary>
                The delta units are specified in pixels.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DeltaMode.Line">
            <summary>
                The delta units are specified in lines.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DeltaMode.Page">
            <summary>
                The delta units are specified in pages.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.DomEventArgs">
            <summary>
                The common DOM event arguments.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.DomEventArgs.Event">
            <summary>
                Gets the DOM event that is currently handled.
            </summary>
            <value>The DOM event that is currently handled.</value>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.DomKeyCode">
            <summary>
                The DOM key codes represent physical keys on the keyboard (as opposed to the character generated by pressing the
                key). In other words, these values are not altered by keyboard layout or the state of the
                modifier keys.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Unknown">
            <summary>
                The key code is unidentified.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.None">
            <summary>
                No key code.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Hyper">
            <summary> The "HYPER" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Super">
            <summary> The "SUPER" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Fn">
            <summary> The "FN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.FnLock">
            <summary> The "FN_LOCK" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Suspend">
            <summary> The "SUSPEND" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Resume">
            <summary> The "RESUME" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Turbo">
            <summary> The "TURBO" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.PrivacyScreenToggle">
            <summary> The "PRIVACY_SCREEN_TOGGLE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Sleep">
            <summary> The "SLEEP" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.WakeUp">
            <summary> The "WAKE_UP" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.DisplayToggleIntExt">
            <summary> The "DISPLAY_TOGGLE_INT_EXT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsbReserved">
            <summary> The "USB_RESERVED" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsbErrorRollOver">
            <summary> The "USB_ERROR_ROLL_OVER" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsbPostFail">
            <summary> The "USB_POST_FAIL" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsbErrorUndefined">
            <summary> The "USB_ERROR_UNDEFINED" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsA">
            <summary> The "US_A" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsB">
            <summary> The "US_B" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsC">
            <summary> The "US_C" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsD">
            <summary> The "US_D" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsE">
            <summary> The "US_E" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsF">
            <summary> The "US_F" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsG">
            <summary> The "US_G" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsH">
            <summary> The "US_H" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsI">
            <summary> The "US_I" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsJ">
            <summary> The "US_J" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsK">
            <summary> The "US_K" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsL">
            <summary> The "US_L" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsM">
            <summary> The "US_M" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsN">
            <summary> The "US_N" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsO">
            <summary> The "US_O" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsP">
            <summary> The "US_P" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsQ">
            <summary> The "US_Q" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsR">
            <summary> The "US_R" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsS">
            <summary> The "US_S" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsT">
            <summary> The "US_T" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsU">
            <summary> The "US_U" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsV">
            <summary> The "US_V" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsW">
            <summary> The "US_W" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsX">
            <summary> The "US_X" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsY">
            <summary> The "US_Y" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.UsZ">
            <summary> The "US_Z" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Digit1">
            <summary> The "DIGIT1" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Digit2">
            <summary> The "DIGIT2" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Digit3">
            <summary> The "DIGIT3" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Digit4">
            <summary> The "DIGIT4" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Digit5">
            <summary> The "DIGIT5" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Digit6">
            <summary> The "DIGIT6" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Digit7">
            <summary> The "DIGIT7" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Digit8">
            <summary> The "DIGIT8" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Digit9">
            <summary> The "DIGIT9" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Digit0">
            <summary> The "DIGIT0" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Enter">
            <summary> The "ENTER" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Escape">
            <summary> The "ESCAPE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Backspace">
            <summary> The "BACKSPACE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Tab">
            <summary> The "TAB" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Space">
            <summary> The "SPACE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Minus">
            <summary> The "MINUS" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Equal">
            <summary> The "EQUAL" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BracketLeft">
            <summary> The "BRACKET_LEFT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BracketRight">
            <summary> The "BRACKET_RIGHT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Backslash">
            <summary> The "BACKSLASH" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Semicolon">
            <summary> The "SEMICOLON" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Quote">
            <summary> The "QUOTE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Backquote">
            <summary> The "BACKQUOTE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Comma">
            <summary> The "COMMA" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Period">
            <summary> The "PERIOD" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Slash">
            <summary> The "SLASH" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.CapsLock">
            <summary> The "CAPS_LOCK" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F1">
            <summary> The "F1" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F2">
            <summary> The "F2" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F3">
            <summary> The "F3" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F4">
            <summary> The "F4" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F5">
            <summary> The "F5" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F6">
            <summary> The "F6" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F7">
            <summary> The "F7" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F8">
            <summary> The "F8" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F9">
            <summary> The "F9" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F10">
            <summary> The "F10" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F11">
            <summary> The "F11" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F12">
            <summary> The "F12" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.PrintScreen">
            <summary> The "PRINT_SCREEN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ScrollLock">
            <summary> The "SCROLL_LOCK" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Pause">
            <summary> The "PAUSE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Insert">
            <summary> The "INSERT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Home">
            <summary> The "HOME" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.PageUp">
            <summary> The "PAGE_UP" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Del">
            <summary> The "DEL" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.End">
            <summary> The "END" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.PageDown">
            <summary> The "PAGE_DOWN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ArrowRight">
            <summary> The "ARROW_RIGHT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ArrowLeft">
            <summary> The "ARROW_LEFT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ArrowDown">
            <summary> The "ARROW_DOWN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ArrowUp">
            <summary> The "ARROW_UP" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumLock">
            <summary> The "NUM_LOCK" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadDivide">
            <summary> The "NUMPAD_DIVIDE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadMultiply">
            <summary> The "NUMPAD_MULTIPLY" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadSubtract">
            <summary> The "NUMPAD_SUBTRACT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadAdd">
            <summary> The "NUMPAD_ADD" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadEnter">
            <summary> The "NUMPAD_ENTER" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Numpad1">
            <summary> The "NUMPAD1" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Numpad2">
            <summary> The "NUMPAD2" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Numpad3">
            <summary> The "NUMPAD3" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Numpad4">
            <summary> The "NUMPAD4" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Numpad5">
            <summary> The "NUMPAD5" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Numpad6">
            <summary> The "NUMPAD6" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Numpad7">
            <summary> The "NUMPAD7" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Numpad8">
            <summary> The "NUMPAD8" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Numpad9">
            <summary> The "NUMPAD9" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Numpad0">
            <summary> The "NUMPAD0" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadDecimal">
            <summary> The "NUMPAD_DECIMAL" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.IntlBackslash">
            <summary> The "INTL_BACKSLASH" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ContextMenu">
            <summary> The "CONTEXT_MENU" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Power">
            <summary> The "POWER" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadEqual">
            <summary> The "NUMPAD_EQUAL" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F13">
            <summary> The "F13" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F14">
            <summary> The "F14" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F15">
            <summary> The "F15" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F16">
            <summary> The "F16" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F17">
            <summary> The "F17" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F18">
            <summary> The "F18" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F19">
            <summary> The "F19" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F20">
            <summary> The "F20" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F21">
            <summary> The "F21" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F22">
            <summary> The "F22" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F23">
            <summary> The "F23" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.F24">
            <summary> The "F24" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Open">
            <summary> The "OPEN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Help">
            <summary> The "HELP" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Select">
            <summary> The "SELECT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Again">
            <summary> The "AGAIN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Undo">
            <summary> The "UNDO" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Cut">
            <summary> The "CUT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Copy">
            <summary> The "COPY" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Paste">
            <summary> The "PASTE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Find">
            <summary> The "FIND" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.VolumeMute">
            <summary> The "VOLUME_MUTE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.VolumeUp">
            <summary> The "VOLUME_UP" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.VolumeDown">
            <summary> The "VOLUME_DOWN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadComma">
            <summary> The "NUMPAD_COMMA" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.IntlRo">
            <summary> The "INTL_RO" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.KanaMode">
            <summary> The "KANA_MODE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.IntlYen">
            <summary> The "INTL_YEN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Convert">
            <summary> The "CONVERT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NonConvert">
            <summary> The "NON_CONVERT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Lang1">
            <summary> The "LANG1" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Lang2">
            <summary> The "LANG2" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Lang3">
            <summary> The "LANG3" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Lang4">
            <summary> The "LANG4" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Lang5">
            <summary> The "LANG5" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Abort">
            <summary> The "ABORT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Props">
            <summary> The "PROPS" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadParenLeft">
            <summary> The "NUMPAD_PAREN_LEFT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadParenRight">
            <summary> The "NUMPAD_PAREN_RIGHT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadBackspace">
            <summary> The "NUMPAD_BACKSPACE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadMemoryStore">
            <summary> The "NUMPAD_MEMORY_STORE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadMemoryRecall">
            <summary> The "NUMPAD_MEMORY_RECALL" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadMemoryClear">
            <summary> The "NUMPAD_MEMORY_CLEAR" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadMemoryAdd">
            <summary> The "NUMPAD_MEMORY_ADD" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadMemorySubtract">
            <summary> The "NUMPAD_MEMORY_SUBTRACT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadSignChange">
            <summary> The "NUMPAD_SIGN_CHANGE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadClear">
            <summary> The "NUMPAD_CLEAR" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.NumpadClearEntry">
            <summary> The "NUMPAD_CLEAR_ENTRY" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ControlLeft">
            <summary> The "CONTROL_LEFT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ShiftLeft">
            <summary> The "SHIFT_LEFT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.AltLeft">
            <summary> The "ALT_LEFT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MetaLeft">
            <summary> The "META_LEFT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ControlRight">
            <summary> The "CONTROL_RIGHT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ShiftRight">
            <summary> The "SHIFT_RIGHT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.AltRight">
            <summary> The "ALT_RIGHT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MetaRight">
            <summary> The "META_RIGHT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Info">
            <summary> The "INFO" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ClosedCaptionToggle">
            <summary> The "CLOSED_CAPTION_TOGGLE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrightnessUp">
            <summary> The "BRIGHTNESS_UP" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrightnessDown">
            <summary> The "BRIGHTNESS_DOWN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrightnessToggle">
            <summary> The "BRIGHTNESS_TOGGLE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrightnessMinimium">
            <summary> The "BRIGHTNESS_MINIMIUM" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrightnessMaximum">
            <summary> The "BRIGHTNESS_MAXIMUM" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrightnessAuto">
            <summary> The "BRIGHTNESS_AUTO" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.KbdIllumUp">
            <summary> The "KBD_ILLUM_UP" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.KbdIllumDown">
            <summary> The "KBD_ILLUM_DOWN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MediaLast">
            <summary> The "MEDIA_LAST" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchPhone">
            <summary> The "LAUNCH_PHONE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ProgramGuide">
            <summary> The "PROGRAM_GUIDE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Exit">
            <summary> The "EXIT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ChannelUp">
            <summary> The "CHANNEL_UP" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ChannelDown">
            <summary> The "CHANNEL_DOWN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MediaPlay">
            <summary> The "MEDIA_PLAY" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MediaPause">
            <summary> The "MEDIA_PAUSE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MediaRecord">
            <summary> The "MEDIA_RECORD" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MediaFastForward">
            <summary> The "MEDIA_FAST_FORWARD" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MediaRewind">
            <summary> The "MEDIA_REWIND" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MediaTrackNext">
            <summary> The "MEDIA_TRACK_NEXT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MediaTrackPrevious">
            <summary> The "MEDIA_TRACK_PREVIOUS" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MediaStop">
            <summary> The "MEDIA_STOP" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Eject">
            <summary> The "EJECT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MediaPlayPause">
            <summary> The "MEDIA_PLAY_PAUSE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.SpeechInputToggle">
            <summary> The "SPEECH_INPUT_TOGGLE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BassBoost">
            <summary> The "BASS_BOOST" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MediaSelect">
            <summary> The "MEDIA_SELECT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchWordProcessor">
            <summary> The "LAUNCH_WORD_PROCESSOR" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchSpreadsheet">
            <summary> The "LAUNCH_SPREADSHEET" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchMail">
            <summary> The "LAUNCH_MAIL" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchContacts">
            <summary> The "LAUNCH_CONTACTS" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchCalendar">
            <summary> The "LAUNCH_CALENDAR" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchApp2">
            <summary> The "LAUNCH_APP2" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchApp1">
            <summary> The "LAUNCH_APP1" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchInternetBrowser">
            <summary> The "LAUNCH_INTERNET_BROWSER" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LogOff">
            <summary> The "LOG_OFF" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LockScreen">
            <summary> The "LOCK_SCREEN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchControlPanel">
            <summary> The "LAUNCH_CONTROL_PANEL" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.SelectTask">
            <summary> The "SELECT_TASK" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchDocuments">
            <summary> The "LAUNCH_DOCUMENTS" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.SpellCheck">
            <summary> The "SPELL_CHECK" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchKeyboardLayout">
            <summary> The "LAUNCH_KEYBOARD_LAYOUT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchScreenSaver">
            <summary> The "LAUNCH_SCREEN_SAVER" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchAssistant">
            <summary> The "LAUNCH_ASSISTANT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.LaunchAudioBrowser">
            <summary> The "LAUNCH_AUDIO_BROWSER" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.New">
            <summary> The "NEW" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Close">
            <summary> The "CLOSE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Save">
            <summary> The "SAVE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Print">
            <summary> The "PRINT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrowserSearch">
            <summary> The "BROWSER_SEARCH" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrowserHome">
            <summary> The "BROWSER_HOME" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrowserBack">
            <summary> The "BROWSER_BACK" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrowserForward">
            <summary> The "BROWSER_FORWARD" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrowserStop">
            <summary> The "BROWSER_STOP" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrowserRefresh">
            <summary> The "BROWSER_REFRESH" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.BrowserFavorites">
            <summary> The "BROWSER_FAVORITES" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ZoomIn">
            <summary> The "ZOOM_IN" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ZoomOut">
            <summary> The "ZOOM_OUT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ZoomToggle">
            <summary> The "ZOOM_TOGGLE" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.Redo">
            <summary> The "REDO" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MailReply">
            <summary> The "MAIL_REPLY" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MailForward">
            <summary> The "MAIL_FORWARD" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.MailSend">
            <summary> The "MAIL_SEND" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.KeyboardLayoutSelect">
            <summary> The "KEYBOARD_LAYOUT_SELECT" key code. </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomKeyCode.ShowAllWindows">
            <summary> The "SHOW_ALL_WINDOWS" key code. </summary>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.DomMouseButton">
            <summary>
                A DOM mouse button.
            </summary>
            <seealso cref="T:DotNetBrowser.Dom.Events.IMouseEvent" />
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomMouseButton.Main">
            <summary>
                A main mouse button. Usually the left button or the un-initialized state.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomMouseButton.Middle">
            <summary>
                An auxiliary button. Usually the wheel button or the middle button (if present).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomMouseButton.Right">
            <summary>
                A secondary button. Usually the right button.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomMouseButton.Back">
            <summary>
                A fourth button. Typically the <i>Browser Back</i> button.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.DomMouseButton.Forward">
            <summary>
                A fifth button. Typically the <i>Browser Forward</i> button.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.Event">
            <summary>
                Represents a DOM event that can be handled on the .NET side.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.Event.EventType">
            <summary>
                Gets the DOM event type.
            </summary>
            <value>The DOM event type.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.Event.UseCapture">
            <summary>
                Indicates if capturing is used for the DOM event.
            </summary>
            <remarks>
                <para>
                    If capturing is used, all events of the specified type will be dispatched to the
                    registered listeners before being dispatched to any event target beneath them
                    in the tree.
                </para>
                <para>Events which are bubbling upward through the tree will not trigger the listeners in this case.</para>
            </remarks>
            <value><c>true</c> if capturing is used, <c>false</c> otherwise.</value>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.Event.EventReceived">
            <summary>
                Occurs when the corresponding DOM event is received.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.Events.Event.op_Addition(DotNetBrowser.Dom.Events.Event,System.EventHandler{DotNetBrowser.Dom.Events.DomEventArgs})">
            <summary>
                The overloaded operator that can be used for simplifying registering event handlers for the DOM event.
            </summary>
            <param name="evt"> The custom DOM event.</param>
            <param name="handler"> the event handler to register for this DOM event.</param>
            <returns>The updated <see cref="T:DotNetBrowser.Dom.Events.Event" /> instance.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.Events.Event.op_Subtraction(DotNetBrowser.Dom.Events.Event,System.EventHandler{DotNetBrowser.Dom.Events.DomEventArgs})">
            <summary>
                The overloaded operator that can be used for simplifying registering event handlers for the DOM event.
            </summary>
            <param name="node">The custom DOM event.</param>
            <param name="handler">The event handler to unregister from this DOM event.</param>
            <returns>The updated <see cref="T:DotNetBrowser.Dom.Events.Event" /> instance.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.EventParameters">
            <summary>
                The parameters of creating the DOM event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.EventParameters.Bubbles">
            <summary>
                Indicates whether the dispatched event is a bubbling event.
            </summary>
            <value><c>true</c> if the dispatched event is a bubbling event, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.EventParameters.Cancelable">
            <summary>
                Indicates whether the dispatched event can have its default action
                prevented.
            </summary>
            <value>
                <c>true</c> if the dispatched event can have its default action
                prevented, <c>false</c> otherwise.
            </value>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.EventParameters.Builder">
            <summary>
                The <see cref="T:DotNetBrowser.Dom.Events.EventParameters" /> builder.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.EventParameters.Builder.Bubbles">
            <summary>
                Gets or sets whether the dispatched event is a bubbling event.
            </summary>
            <value><c>true</c> if the dispatched event is a bubbling event, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.EventParameters.Builder.Cancelable">
            <summary>
                Gets or sets whether the dispatched event can have its default action
                prevented.
            </summary>
            <value>
                <c>true</c> if the dispatched event can have its default action
                prevented, <c>false</c> otherwise.
            </value>
        </member>
        <member name="M:DotNetBrowser.Dom.Events.EventParameters.Builder.Build">
            <summary>
                Builds and returns a read-only <see cref="T:DotNetBrowser.Dom.Events.EventParameters" /> object.
            </summary>
            <returns>a read-only <see cref="T:DotNetBrowser.Dom.Events.EventParameters" /> object.</returns>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.EventPhase">
            <summary>
                Represents the DOM event phases.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventPhase.Unspecified">
            <summary>
                The event phase is not specified.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventPhase.CapturingPhase">
            <summary>
                The event is moving from the document root down the event target.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventPhase.AtTarget">
            <summary>
                The event is being evaluated at the event target.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventPhase.BubblingPhase">
            <summary>
                The event is moving from the event target up to the root.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.EventType">
            <summary>
                The DOM event type. Wraps a string that specifies the name of the event without the "on" prefix.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Click">
            <summary>
                The "click" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.DoubleClick">
            <summary>
                The "dblclick" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.MouseUp">
            <summary>
                The "mouseup" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.MouseDown">
            <summary>
                The "mousedown" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.MouseOver">
            <summary>
                The "mouseover" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.MouseOut">
            <summary>
                The "mouseout" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.MouseMove">
            <summary>
                The "mousemove" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.KeyDown">
            <summary>
                The "keydown" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.KeyUp">
            <summary>
                The "keyup" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.KeyPress">
            <summary>
                The "keypress" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Load">
            <summary>
                The "load" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Unload">
            <summary>
                The "unload" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Abort">
            <summary>
                The "abort" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Error">
            <summary>
                The "error" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Resize">
            <summary>
                The "resize" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Scroll">
            <summary>
                The "scroll" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Select">
            <summary>
                The "select" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Change">
            <summary>
                The "change" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Submit">
            <summary>
                The "submit" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Reset">
            <summary>
                The "reset" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Focus">
            <summary>
                The "focus" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Blur">
            <summary>
                The "blur" event type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.Events.EventType.Wheel">
            <summary>
                The "wheel" event type.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.EventType.Value">
            <summary>
                The DOM event type as string value.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Dom.Events.EventType.#ctor(System.String)">
            <summary>
                Constructs an <see cref="T:DotNetBrowser.Dom.Events.EventType" /> instance from the given string.
            </summary>
            <param name="value">A string that specifies the name of the event without the "on" prefix.</param>
        </member>
        <member name="M:DotNetBrowser.Dom.Events.EventType.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Dom.Events.EventType.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Dom.Events.EventType.op_Equality(DotNetBrowser.Dom.Events.EventType,DotNetBrowser.Dom.Events.EventType)">
            <summary>
                The overloaded operator that simplifies comparing the <see cref="T:DotNetBrowser.Dom.Events.EventType" /> objects.
            </summary>
            <param name="eventType1">The <see cref="T:DotNetBrowser.Dom.Events.EventType" /> to compare. </param>
            <param name="eventType2">The <see cref="T:DotNetBrowser.Dom.Events.EventType" /> to compare. </param>
            <returns>true if the objects are considered to be equal.</returns>
        </member>
        <member name="M:DotNetBrowser.Dom.Events.EventType.op_Inequality(DotNetBrowser.Dom.Events.EventType,DotNetBrowser.Dom.Events.EventType)">
            <summary>
                The overloaded operator that simplifies comparing the <see cref="T:DotNetBrowser.Dom.Events.EventType" /> objects.
            </summary>
            <param name="eventType1">The <see cref="T:DotNetBrowser.Dom.Events.EventType" /> to compare. </param>
            <param name="eventType2">The <see cref="T:DotNetBrowser.Dom.Events.EventType" /> to compare. </param>
            <returns>true if the objects are considered to be not equal.</returns>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.IEvent">
            <summary>
                Represents DOM <c>Event</c> object and provides access to the event object data.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IEvent.Bubbles">
            <summary>
                Indicates whether an event is a bubbling event.
            </summary>
            <value>If the event can bubble the property value is <c>true</c>, in other case the value is <c>false</c>.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IEvent.Cancelable">
            <summary>
                Indicates whether an event can have its default action
                prevented.
            </summary>
            <value>
                If the default action can be prevented, the property value is <c>true</c>,
                in other case the value is <c>false</c>.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IEvent.CurrentTarget">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> whose event listeners are currently
                being processed.
            </summary>
            <value>
                The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> whose event listeners are currently
                being processed.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IEvent.EventPhase">
            <summary>
                Gets the phase of event flow.
            </summary>
            <value>The phase of event flow that is currently being evaluated.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IEvent.Target">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> to which the event was originally dispatched.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> to which the event was originally dispatched.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IEvent.Type">
            <summary>
                Gets the type of this DOM event.
            </summary>
            <value>The type of this DOM event.</value>
        </member>
        <member name="M:DotNetBrowser.Dom.Events.IEvent.PreventDefault">
            <summary>
                Cancels the event if it is cancelable, without stopping further propagation of the event.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Dom.Events.IEvent.StopPropagation">
            <summary>
                Prevents further propagation of the current event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.IEvents">
            <summary>
                A collection of custom DOM events that can be listened and/or handled.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IEvents.Item(DotNetBrowser.Dom.Events.EventType,System.Boolean)">
            <summary>
                Gets or sets the custom DOM event to listen.
            </summary>
            <param name="eventType">The event type to listen.</param>
            <param name="useCapture">
                if true, indicates that the
                user wishes to initiate capture. After initiating capture, all
                events of the specified type will be dispatched to the registered
                listeners before being dispatched to any
                event target beneath them in the tree. Events which
                are bubbling upward through the tree will not trigger the listeners
                in this case.
            </param>
            <value>The object that can be used to listen to the custom DOM event.</value>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Click">
            <summary>
                Occurs when the user clicks on an element.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.DoubleClick">
            <summary>
                Occurs when the user double-clicks on an element.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.MouseDown">
            <summary>
                Occurs when the user presses a mouse button over an element.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.MouseUp">
            <summary>
                Occurs when a user releases a mouse button over an element.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.MouseOver">
            <summary>
                Occurs when the pointer is moved onto an element, or onto one of its children.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.MouseMove">
            <summary>
                Occurs when the pointer is moving while it is over an element.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.MouseOut">
            <summary>
                Occurs when a user moves the mouse pointer out of an element, or out of one of its children
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.KeyDown">
            <summary>
                Occurs when the user presses a key.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.KeyUp">
            <summary>
                Occurs when the user releases a key.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.KeyPress">
            <summary>
                Occurs when the user presses a key that produces a character value.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Load">
            <summary>
                Occurs when an object has loaded.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Unload">
            <summary>
                Occurs once a page has unloaded (for &lt;body&gt;).
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Abort">
            <summary>
                Occurs when the loading of a resource has been aborted.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Error">
            <summary>
                Occurs when an error occurs while loading an external file.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Resize">
            <summary>
                Occurs when the document view is resized.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Scroll">
            <summary>
                Occurs when an element's scrollbar is being scrolled.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Select">
            <summary>
                Occurs after the user selects some text (for &lt;input&gt; and &lt;textarea&gt;).
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Change">
            <summary>
                Occurs when the content of a form element, the selection,
                or the checked state have changed (for &lt;input&gt;, &lt;select&gt;, and &lt;textarea&gt;).
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Submit">
            <summary>
                Occurs when a form is submitted.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Reset">
            <summary>
                Occurs when a form is reset.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Focus">
            <summary>
                Occurs when an element gets focus.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Blur">
            <summary>
                Occurs when an element loses focus.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Dom.Events.IEvents.Wheel">
            <summary>
                Occurs when user scrolls a mouse wheel over an element.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.IEventTarget">
            <summary>
                This interface is implemented by all <see cref="T:DotNetBrowser.Dom.INode" /> implementations
                to support DOM event model.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IEventTarget.Events">
            <summary>
                Gets the DOM events that can be listened.
            </summary>
            <value>The DOM events that can be listened.</value>
        </member>
        <member name="M:DotNetBrowser.Dom.Events.IEventTarget.DispatchEvent(DotNetBrowser.Dom.Events.IEvent)">
            <summary>
                Dispatches (sends) a particular DOM event to the current target.
            </summary>
            <param name="evt">The DOM event to dispatch</param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.Events.IEventTarget" /> has already been disposed.</exception>
            <returns>
                <c>false</c> if event is cancelable and at least one of the event handlers
                which handled this event called cancelable action; <c>true</c> otherwise.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.IKeyEvent">
            <summary>
                Represents a keyboard event and provides an access to specific keyboard event data.
                <para>
                    This event occurs when a user performs some keyboard action, for example presses or releases a
                    keyboard key.
                </para>
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IKeyEvent.Character">
            <summary>
                Gets the character generated by pressing the key.
            </summary>
            <value>
                The character generated by pressing the key.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IKeyEvent.KeyCode">
            <summary>
                Gets the key code that represents a physical key on the keyboard.
            </summary>
            <value>
                The key code. If the key can't be identified, returns
                <see cref="F:DotNetBrowser.Dom.Events.DomKeyCode.Unknown" />.
            </value>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.IMouseEvent">
            <summary>
                Represents a mouse event and provides an access to specific mouse event data.
                <para>
                    This event occurs when a user performs an action with a pointing device (such as a mouse), for
                    example moves the mouse or clicks a mouse button.
                </para>
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IMouseEvent.Button">
            <summary>
                Gets the button which was pressed on the mouse to trigger the event.
            </summary>
            <value>The mouse button which was pressed to trigger the event.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IMouseEvent.ClickCount">
            <summary>
                Gets the click count.
            </summary>
            <value>
                the count of consecutive clicks that happened in a short amount of time for mouse
                events, such as <c>click</c>, <c>mouseDown</c>, <c>mouseUp</c>.
                For all other UI events returns 0.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IMouseEvent.ClientLocation">
            <summary>
                Gets the location of the mouse cursor in the local (DOM content) coordinate system at the time the
                event occurred.
            </summary>
            <value>The location of the mouse cursor.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IMouseEvent.OffsetLocation">
            <summary>
                Gets the location of the mouse cursor in the component's coordinate system at the time the
                event occurred.
            </summary>
            <value>The location of the mouse cursor.</value>
            <remarks>
                <para>
                    For example, clicking in the top-left corner of the client area will always result in that
                    the <c>X</c> field of the result equals 0, regardless of whether the page is scrolled
                    horizontally.
                </para>
                <para> This API is available since DotNetBrowser 2.1.</para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IMouseEvent.ScreenLocation">
            <summary>
                Gets the location of the mouse cursor in the screen's coordinate system at the time the
                event occurred.
            </summary>
            <value>The location of the mouse cursor.</value>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.IUiKeyEventModifier">
            <summary>
                Represents a DOM UI event that can be fired with the key modifiers.
                <para>
                    The <see cref="P:DotNetBrowser.Dom.Events.IUiKeyEventModifier.KeyModifiers" /> provides access to the data about pressed service keys, such as
                    <c>Ctrl</c>, <c>Alt</c>, <c>Shift</c>, <c>Meta</c>,
                    when a keyboard or mouse event occurs.
                </para>
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IUiKeyEventModifier.KeyModifiers">
            <summary>
                Gets the key modifiers that are applied to the event.
            </summary>
            <value>The key modifiers that are applied to the event.</value>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.IWheelEvent">
            <summary>
                A wheel event that provides access to the wheel event data.
                <para>This event occurs when a user rotates a wheel on a pointing device (such as a mouse).</para>
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IWheelEvent.DeltaMode">
            <summary>
                Gets the delta units type.
            </summary>
            <value>The delta units type used, e.g. pixels, lines, or pages.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IWheelEvent.DeltaX">
            <summary>
                Gets the amount of units to scroll horizontally.
            </summary>
            <value>The amount of units to scroll horizontally.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.IWheelEvent.DeltaY">
            <summary>
                Gets the amount of units to scroll vertically.
            </summary>
            <value>The amount of units to scroll vertically.</value>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.KeyEventParameters">
            <summary>
                Represents the DOM keyboard event parameters.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.KeyEventParameters.Character">
            <summary>
                Gets or sets the character generated by pressing the key.
            </summary>
            <value>
                The character generated by pressing the key.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.KeyEventParameters.KeyCode">
            <summary>
                Gets or sets the key code of the pressed key.
            </summary>
            <value>The key code of the pressed key.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.KeyEventParameters.UiEventModifierParameters">
            <summary>
                Gets or sets the DOM UI event parameters with the key modifiers.
            </summary>
            <value>The DOM UI event parameters with the key modifiers.</value>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.MouseEventParameters">
            <summary>
                Represents the DOM mouse event parameters.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.MouseEventParameters.Button">
            <summary>
                Gets or sets the number of the mouse button that was pressed to trigger the event.
            </summary>
            <value>
                The number of the mouse button that was pressed to trigger the event:
                <ul>
                    <li>0 - Main button pressed, usually the left button or the uninitialized state</li>
                    <li>1 - Auxiliary button pressed, usually the wheel button or the middle button (if present)</li>
                    <li>2 - Secondary button pressed, usually the right button</li>
                    <li>3 - Fourth button, typically the Browser Back button</li>
                    <li>4 - Fifth button, typically the Browser Forward button</li>
                </ul>
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.MouseEventParameters.ClickCount">
            <summary>
                Gets or sets the click count.
            </summary>
            <value>
                the count of consecutive clicks that happened in a short amount of time for mouse
                events, such as <c>click</c>, <c>mouseDown</c>, <c>mouseUp</c>.
                For all other UI events it is equal to 0.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.MouseEventParameters.ClientLocation">
            <summary>
                Gets or sets the location of the mouse cursor in the component's coordinate system at the time the event
                occurred.
            </summary>
            <value>
                the location of the mouse cursor in the component's coordinate system at the time the event
                occurred. For example, clicking in the top-left corner of the client area will always result in
                that the <c>ClientLocation.X</c> value equals 0, regardless of whether the page is scrolled
                horizontally.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.MouseEventParameters.ScreenLocation">
            <summary>
                Gets or sets the location of the mouse cursor in the screen's coordinate
                system at the time the event occurred.
            </summary>
            <value>
                The location of the mouse cursor in the screen's coordinate
                system at the time the event occurred.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.MouseEventParameters.UiEventModifierParameters">
            <summary>
                Gets or sets the DOM UI event parameters with the key modifiers.
            </summary>
            <value>The DOM UI event parameters with the key modifiers.</value>
        </member>
        <member name="T:DotNetBrowser.Dom.Events.UiEventModifierParameters">
            <summary>
                Represents the DOM UI event parameters with the key modifiers.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.UiEventModifierParameters.EventParameters">
            <summary>
                Gets or sets the DOM event parameters applicable to the UI events.
            </summary>
            <value>The DOM event parameters applicable to the UI events.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.Events.UiEventModifierParameters.KeyModifiers">
            <summary>
                Gets or sets the key modifiers.
            </summary>
            <value>The key modifiers.</value>
        </member>
        <member name="T:DotNetBrowser.Dom.IAttribute">
            <inheritdoc />
            <summary>
                Represents DOM HTML attribute.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.IAttribute.Owner">
            <summary>
                Gets an owner element of the attribute.
            </summary>
            <value>
                The owner element of the attribute. If the owner
                does not exist, this property is <c>null</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IAttribute" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Dom.IAttributes">
            <summary>
                A dictionary that contains <see cref="T:DotNetBrowser.Dom.IElement" /> attributes. Modifying this dictionary
                will lead to modifying the element attributes.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Dom.IAttributes.AsReadOnly">
            <summary>
                Gets a read-only dictionary that contains a snapshot of the attributes of the current element.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IAttributes" /> has already been disposed.</exception>
            <returns>
                The dictionary that contains a snapshot of the attributes of the current element.
                The returned dictionary will be empty if the element doesn't have any attributes.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Dom.IDocument">
            <summary>
                Represents DOM HTML document of the web page.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.IDocument.BaseUri">
            <summary>
                Gets the <c>&lt;base&gt;</c> element's href attribute if one
                is present.
            </summary>
            <value>
                The <c>&lt;base&gt;</c> element's href attribute if one
                is present. If the currently loaded document doesn't have the <c>&lt;base&gt;</c> element, the
                method returns URL of the currently loaded document including "about:blank" when nothing is loaded.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IDocument.DocumentElement">
            <summary>
                Gets the document HTML element that usually represents HTML tag.
            </summary>
            <value>
                The document HTML element that usually represents HTML tag.
                Can be null if the document element is not
                available (e.g. the web page of this document was disposed).
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IDocument.FocusedElement">
            <summary>
                Gets the currently focused element in the document.
            </summary>
            <value>The currently focused element in the document. Can be null if there is no focused element in this document.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IDocument" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.IDocument.CreateElement(System.String)">
            <summary>
                Creates and returns a new DOM element with the specified tag name.
            </summary>
            <param name="tagName">the tag name (e.g. "A", "P", "DIV") of the new DOM element.</param>
            <returns>the new <see cref="T:DotNetBrowser.Dom.IElement" /> or null if the <paramref name="tagName" /> is incorrect.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="tagName" /> is null, empty, or contains only blank characters.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.IDocument.CreateEvent(DotNetBrowser.Dom.Events.EventType,DotNetBrowser.Dom.Events.EventParameters)">
            <summary>
                Creates a DOM event instance of the specified type.
            </summary>
            <param name="eventType">the DOM event type.</param>
            <param name="parameters">the parameters of the DOM event</param>
            <returns>DOM Event object</returns>
            <exception cref="T:System.ArgumentNullException">when eventType or parameters values are null.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.IDocument.CreateKeyDownEvent(DotNetBrowser.Dom.Events.KeyEventParameters)">
            <summary>
                Creates and returns a new <c>keyDown</c> <see cref="T:DotNetBrowser.Dom.Events.IKeyEvent" /> object with the given <code>parameters</code>.
            </summary>
            <param name="parameters">
                a <see cref="T:DotNetBrowser.Dom.Events.KeyEventParameters" />object representing key event properties.
                Cannot be null.
            </param>
            <returns>the new <see cref="T:DotNetBrowser.Dom.Events.IKeyEvent" /> object.</returns>
            <exception cref="T:System.ArgumentException">when parameters value is null.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.IDocument.CreateKeyPressEvent(DotNetBrowser.Dom.Events.KeyEventParameters)">
            <summary>
                Creates and returns a new <c>keyPress</c> <see cref="T:DotNetBrowser.Dom.Events.IKeyEvent" /> object with the given <code>parameters</code>.
            </summary>
            <param name="parameters">
                a <see cref="T:DotNetBrowser.Dom.Events.KeyEventParameters" />object representing key event properties.
                Cannot be null.
            </param>
            <returns>the new <see cref="T:DotNetBrowser.Dom.Events.IKeyEvent" /> object.</returns>
            <exception cref="T:System.ArgumentException">when parameters value is null.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.IDocument.CreateKeyUpEvent(DotNetBrowser.Dom.Events.KeyEventParameters)">
            <summary>
                Creates and returns a new <c>keyUp</c> <see cref="T:DotNetBrowser.Dom.Events.IKeyEvent" /> object with the given <code>parameters</code>.
            </summary>
            <param name="parameters">
                a <see cref="T:DotNetBrowser.Dom.Events.KeyEventParameters" />object representing key event properties.
                Cannot be null.
            </param>
            <returns>the new <see cref="T:DotNetBrowser.Dom.Events.IKeyEvent" /> object.</returns>
            <exception cref="T:System.ArgumentException">when parameters value is null.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.IDocument.CreateMouseEvent(DotNetBrowser.Dom.Events.EventType,DotNetBrowser.Dom.Events.MouseEventParameters)">
            <summary>
                Creates and returns a new <see cref="T:DotNetBrowser.Dom.Events.IMouseEvent" /> object with the given <code>eventType</code>
                and <code>parameters</code>.
            </summary>
            <param name="eventType">
                an <see cref="T:DotNetBrowser.Dom.Events.EventType" />object representing a type of a valid DOM event
                supported by engine. Cannot be null.
            </param>
            <param name="parameters">
                a <see cref="T:DotNetBrowser.Dom.Events.MouseEventParameters" /> object representing mouse event properties
                (e.g. bubbles, cancellable). Cannot be null.
            </param>
            <returns>the new <see cref="T:DotNetBrowser.Dom.Events.IMouseEvent" /> object.</returns>
            <exception cref="T:System.ArgumentException">when eventType or parameters values are null.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.IDocument.CreateTextNode(System.String)">
            <summary>
                Returns a new Text DOM node with <see cref="F:DotNetBrowser.Dom.NodeType.TextNode" /> type.
            </summary>
            <param name="text">the string, which will be used to initialize node value.</param>
            <returns>the new Text DOM node with <see cref="F:DotNetBrowser.Dom.NodeType.TextNode" /> type.</returns>
        </member>
        <member name="T:DotNetBrowser.Dom.IElement">
            <inheritdoc />
            <summary>
                Represents DOM HTML element.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.IElement.AttributeNodes">
            <summary>
                Gets a list that contains attribute nodes of the element. Each list entry
                represents an attribute node.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IElement" /> has already been disposed.</exception>
            <value>
                A list that contains attribute nodes of the element. The list will be empty if the element does not have
                attributes.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IElement.Attributes">
            <summary>
                Gets a dictionary that contains attributes of the current element. Modifying this dictionary
                will lead to modifying the element attributes.
            </summary>
            <value>
                A dictionary that contains attributes of the current element. Modifying this dictionary
                will lead to modifying the element attributes.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IElement.BoundingClientRect">
            <summary>
                Gets the bounds of the element and its position relative to the top-left of
                the viewport of the current document.
            </summary>
            <value>
                The bounds of the element and its position relative to the top-left of
                the viewport of the current document.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IElement" /> has already been disposed.</exception>
            <remarks>
                <para>
                    The amount of scrolling that has been done of the viewport area (or any other
                    scrollable element) is taken into account when computing the bounding rectangle.
                    This means that the rectangle's boundary edges (top, left, bottom, and right)
                    change their values every time the scrolling position changes (because their
                    values are relative to the viewport and not absolute). If you need the bounding
                    rectangle relative to the top-left corner of the document, just add the current
                    scrolling position to the top and left properties (these can be obtained using
                    <c>window.scrollX</c> and <c>window.scrollY</c>) to get a bounding rectangle
                    which is independent from the current scrolling position.
                </para>
            </remarks>
            <value>
                The  bounds of the element and its position relative to the top-left of
                the viewport of the current document.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IElement.InnerHtml">
            <summary>
                Gets or sets the inner HTML of the current element.
            </summary>
            <exception cref="T:DotNetBrowser.Dom.DomException">The value was not set.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IElement" /> has already been disposed.</exception>
            <value>
                The inner HTML of the current element. If the current element doesn't have inner HTML
                or the element doesn't exist anymore, this will be an empty string.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IElement.InnerText">
            <summary>
                Gets or sets the inner text of the current element.
            </summary>
            <exception cref="T:DotNetBrowser.Dom.DomException">The value was not set.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IElement" /> has already been disposed.</exception>
            <value>
                The inner text of the current element. If the current element doesn't have inner text
                or the element doesn't exist anymore, this will be an empty string.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IElement.OuterHtml">
            <summary>
                Gets or sets the outer HTML of the current element.
            </summary>
            <remarks>
                <para>
                    While the element will be replaced in the document, the variable whose <c>OuterHtml</c> property
                    was set will still hold a reference to the original element.
                    See <see href="https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML" />
                    MDN web docs.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentException">The value is set to null.</exception>
            <exception cref="T:DotNetBrowser.Dom.DomException">The value was not set.</exception>
            <value>
                The string that represents an HTML serialization of this element and its descendants.
            </value>
        </member>
        <member name="M:DotNetBrowser.Dom.IElement.Blur">
            <summary>
                Removes focus from the current element.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IElement" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.IElement.Focus">
            <summary>
                Gives focus to the current element (if it can be focused).
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IElement" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.IElement.ScrollIntoView(DotNetBrowser.Dom.AlignTo)">
            <summary>
                Scrolls the element's parent container such that the element on which this method is called
                is visible to the user.
            </summary>
            <param name="alignTo">
                Describes how the element will be aligned to the visible area of the
                scrollable ancestor
            </param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IElement" /> has already been disposed.</exception>
            <remarks>
                <para>
                    Note that the element may not be scrolled completely to the top or bottom depending on
                    the layout of other elements.
                </para>
            </remarks>
        </member>
        <member name="T:DotNetBrowser.Dom.IFormControlElement">
            <summary>
                Represents the form control element.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.IFormControlElement.Form">
            <summary>
                Gets the <c>&lt;form&gt;</c> element containing this control.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IFormControlElement" /> has already been disposed.</exception>
            <value>
                The <c>&lt;form&gt;</c> element containing this control.
                Can be <c>null</c> if this control is not within the context of a form.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IFormControlElement.IsEnabled">
            <summary>
                Indicates whether form control is enabled or disabled.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IFormControlElement" /> has already been disposed.</exception>
            <value><c>true</c> if the control is enabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.IFormControlElement.Value">
            <summary>
                Gets or sets the form control value.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IFormControlElement" /> has already been disposed.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="value" /> is null.</exception>
            <value>The form control value.</value>
        </member>
        <member name="T:DotNetBrowser.Dom.IFormElement">
            <summary>
                Represents DOM HTML Form element.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.IFormElement.Action">
            <summary>
                Gets the 'action' attribute value.
            </summary>
            <value>The 'action' attribute value.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IFormElement" /> has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Dom.IFormElement.Controls">
            <summary>
                Gets the collection of all control elements in the form.
            </summary>
            <value>The collection of all control elements in the form.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IFormElement" /> has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Dom.IFormElement.Method">
            <summary>
                Gets the 'method' attribute value.
            </summary>
            <value>The 'method' attribute value.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IFormElement" /> has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Dom.IFormElement.Name">
            <summary>
                Gets the 'name' attribute value.
            </summary>
            <value>The 'name' attribute value.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IFormElement" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.IFormElement.Reset">
            <summary>
                Restores the form elements' default values. It performs the same action as a reset button.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IFormElement" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.IFormElement.Submit">
            <summary>
                Submits the form. It performs the same action as a submit button.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IFormElement" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Dom.IFrameElement">
            <summary>
                Represents an HTML <c>&lt;frame&gt;</c> or <c>&lt;iframe&gt;</c> element.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.IFrameElement.ContentDocument">
            <summary>
                Gets the document of the current <c>&lt;frame&gt;</c> or <c>&lt;iframe&gt;</c> element.
            </summary>
            <value>
                The document of the current <c>&lt;frame&gt;</c> or <c>&lt;iframe&gt;</c> element if
                it exists, otherwise <c>null</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IFrameElement" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Dom.IInputElement">
            <summary>
                Represents the DOM element with <c>&lt;input&gt;</c> tag.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.IInputElement.Checked">
            <summary>
                Gets or sets the checked attribute of the input DOM element with the type
                <c>'checkbox'</c> or <c>'radio'</c>.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IInputElement" /> has already been disposed.</exception>
            <value>
                <c>true</c> if the <c>'checkbox'</c> or <c>'radio'</c> element has non-empty value of the <c>'checked'</c>
                attribute.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IInputElement.File">
            <summary>
                Gets or sets an absolute or relative path to a file if the current input DOM element
                has the type attribute with the 'file' value.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IInputElement" /> has already been disposed.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="value" /> is null, empty, or contains only blank characters. </exception>
            <value>
                The absolute or relative path to a file if the current input DOM element
                has the type attribute with the <c>'file'</c> value. If this DOM element has the <c>multiple</c> attribute,
                this will be the first of file paths. If the element has no file selected, this will be an empty string.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IInputElement.Files">
            <summary>
                Gets or sets the collection of absolute or relative paths to files if the current input DOM element
                has the type attribute with the 'file' value.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IInputElement" /> has already been disposed.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="value" /> is null, empty, or contains only blank characters. </exception>
            <value>
                The collection of absolute or relative paths to files if the current input DOM element
                has the type attribute with the <c>'file'</c> value. If the element has no files selected, this will be an empty
                string.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IInputElement.IsCheckBox">
            <summary>
                Indicates whether the DOM element's type attribute has the 'checkbox' value.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IInputElement" /> has already been disposed.</exception>
            <value>
                <c>true</c> if the DOM element's type attribute has the 'checkbox' value. When the
                return value is true, the checked state of the DOM element can be retrieved or changed via the
                <see cref="P:DotNetBrowser.Dom.IInputElement.Checked" /> property.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IInputElement.IsEmailField">
            <summary>
                Indicates whether the DOM element's type attribute has the 'email' value.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IInputElement" /> has already been disposed.</exception>
            <value><c>true</c> if the DOM element's type attribute has the 'email' value.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.IInputElement.IsFile">
            <summary>
                Indicates whether the DOM element's type attribute has the 'file' value.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IInputElement" /> has already been disposed.</exception>
            <value><c>true</c> if the DOM element's type attribute has the 'file' value.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.IInputElement.IsMultipleFile">
            <summary>
                Indicates whether the DOM element has both the type attribute with the
                'file' value, and the  multiple attribute, for example: <c>&lt;input type="file" multiple&gt;</c>
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IInputElement" /> has already been disposed.</exception>
            <value>
                <c>true</c> if the DOM element has both the type attribute with the
                'file' value, and the  multiple attribute.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IInputElement.IsPasswordField">
            <summary>
                Indicates whether the DOM element's type attribute has the 'password' value.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IInputElement" /> has already been disposed.</exception>
            <value>
                <c>true</c> if the DOM element's type attribute has the 'password' value.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IInputElement.IsRadioButton">
            <summary>
                Indicates whether the DOM element's type attribute has the 'radio' value.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IInputElement" /> has already been disposed.</exception>
            <value><c>true</c> if the DOM element's type attribute has the 'radio' value.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.IInputElement.IsText">
            <summary>
                Indicates if this input element is a text field and
                the type attribute value of the input HTML element is 'number'.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IInputElement" /> has already been disposed.</exception>
            <value>
                <c>true</c> when <see cref="P:DotNetBrowser.Dom.IInputElement.IsTextField" /> returns true and
                the type attribute value of the input HTML element is 'number'.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.IInputElement.IsTextField">
            <summary>
                Indicates if the DOM element's type attribute has the <c>'text'</c> value.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IInputElement" /> has already been disposed.</exception>
            <value><c>true</c> if the DOM element's type attribute has the 'text' value.</value>
        </member>
        <member name="T:DotNetBrowser.Dom.INode">
            <inheritdoc cref="T:DotNetBrowser.Dom.Events.IEventTarget" />
            <summary>
                A single HTML DOM node in the document tree. All
                DOM objects implement the INode interface.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.INode.Children">
            <summary>
                Gets the collection of the child nodes. Modifying this collection will lead to the DOM tree modification.
            </summary>
            <value>The collection of the child nodes.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.INode.Document">
            <summary>
                Gets the document instance containing this node.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
            <value>The document instance containing this node.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.INode.Frame">
            <summary>
                Gets the frame containing this node.
            </summary>
            <value>The frame containing this node.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.INode.NextSibling">
            <summary>
                Gets the next sibling node in the document tree.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
            <value>The next sibling node in the document tree if it exists, otherwise returns <c>null</c>.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.INode.NodeName">
            <summary>
                Gets the name of this node, depending on its <see cref="T:DotNetBrowser.Dom.NodeType" />.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
            <value>The name of the node.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.INode.NodeValue">
            <summary>
                Gets the value of this node, depending on its <see cref="T:DotNetBrowser.Dom.NodeType" />.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
            <value>The value of the node.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.INode.Parent">
            <summary>
                Gets the parent node.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
            <value> The parent node, if it exists, otherwise returns <c>null</c></value>
        </member>
        <member name="P:DotNetBrowser.Dom.INode.PreviousSibling">
            <summary>
                Gets the previous sibling node in the document tree.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
            <value>
                The previous sibling node in the document tree if such node
                exists, otherwise returns <c>null</c>
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.INode.TextContent">
            <summary>
                Gets or sets the text content of the node and its descendants.
            </summary>
            <exception cref="T:System.ArgumentException">The <paramref name="value" /> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
            <remarks>
                <para>
                    Setting this property on a node removes all of its children and replaces them with a single text node with the
                    given value.
                </para>
                <para>
                    The property value depends on the type of the node, whhich can be checked via the <see cref="P:DotNetBrowser.Dom.INode.Type" />
                    property.
                </para>
                <para>
                    The property value is an empty string if the element is a document, a document type, or a notation.
                </para>
                <para>
                    If the node is a CDATA section, a comment, a processing instruction, or a text node, this method returns
                    the text inside this node (the <see cref="P:DotNetBrowser.Dom.INode.NodeValue" />).
                </para>
                <para>
                    For other node types, this method returns the concatenation of the TextContent attribute value
                    of every child node, excluding comments and processing instruction nodes. This is an empty string if the
                    node has no children.
                </para>
                <para>
                    Differences from InnerText:
                    <ul>
                        <li>
                            The TextContent property gets the content of all elements, including &lt;script&gt; and &lt;style
                            &gt; elements, and the mostly equivalent <c>InnerText</c> property does not.
                        </li>
                        <li>
                            <c>InnerText</c> is also aware of style and will not return the text of hidden elements, whereas
                            TextContent
                            will.
                        </li>
                        <li>As <c>InnerText</c> is aware of CSS styling, it will trigger a reflow, whereas TextContent will not.</li>
                    </ul>
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Dom.INode.Type">
            <summary>
                Gets the type of this node.
            </summary>
            <value>The type of this node.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.INode.XPath">
            <summary>
                Gets an XPath for the current Node.
            </summary>
            <value>The XPath for the current Node or an empty string if such XPath is not available.</value>
        </member>
        <member name="M:DotNetBrowser.Dom.INode.Click">
            <summary>
                Simulates click on the current Node.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.INode.CompareDocumentPosition(DotNetBrowser.Dom.INode)">
            <summary>
                Compares position of the current node against another node in a DOM tree.
            </summary>
            <param name="otherNode">The node to be compared to the current node</param>
            <returns>
                The document position of the node specified by the <paramref name="otherNode" /> parameter
                relates to the position of the current node.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.INode.Evaluate(System.String,DotNetBrowser.Dom.XPath.XPathResultType)">
            <summary>
                Evaluates an XPath expression.
            </summary>
            <param name="expression">a string representing the XPath to be evaluated. Cannot be null or empty string.</param>
            <param name="type">type of result XPathResult to return. See <see cref="T:DotNetBrowser.Dom.XPath.XPathResultType" /></param>
            <returns>
                The <see cref="T:DotNetBrowser.Dom.XPath.IXPathResult" /> object of the type specified in the <paramref name="type" /> parameter. The return
                value will
                be always a valid <see cref="T:DotNetBrowser.Dom.XPath.IXPathResult" /> object.
            </returns>
            <exception cref="T:System.ArgumentException">
                The <paramref name="expression" /> is null, empty, or contains blank characters only.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Dom.XPath.XPathException">The XPath evaluation error occurs.</exception>
        </member>
        <member name="T:DotNetBrowser.Dom.INodeCollection">
            <summary>
                Represents a collection of the DOM nodes.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Dom.INodeCollection.Append(DotNetBrowser.Dom.INode)">
            <summary>
                Appends a node as the last item of the collection. The new node could be an existing node in the document,
                or a new node. If the node is existing node, it will be moved to new location
                in the document.
            </summary>
            <param name="node">the node to append.</param>
            <returns><c>true</c> if the node was successfully appended, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="node" /> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.INodeCollection.AsReadOnly">
            <summary>
                Returns the snapshot of the items in the collection as a read-only list.
            </summary>
            <returns>the snapshot of the items in the collection as a read-only list.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.INodeCollection.Insert(DotNetBrowser.Dom.INode,DotNetBrowser.Dom.INode)">
            <summary>
                Inserts a new <paramref name="node" /> before an existing <paramref name="beforeNode" />.
            </summary>
            <param name="node">The node to insert.</param>
            <param name="beforeNode">The node before which the node will be inserted.</param>
            <returns><c>true</c> if node was successfully inserted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentException">
                The <paramref name="node" /> or <paramref name="beforeNode" /> is null.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
            <remarks>
                The <paramref name="node" /> could be an existing
                node in the document, or you can create and insert a new node. If the node is an existing node,
                it will be moved to new location in the document.
            </remarks>
        </member>
        <member name="M:DotNetBrowser.Dom.INodeCollection.Remove(DotNetBrowser.Dom.INode)">
            <summary>
                Removes a node from the collection.
            </summary>
            <param name="node">The node to remove.</param>
            <returns><c>true</c> if the node was successfully removed from the collection.</returns>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="node" /> is null.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.INodeCollection.Replace(DotNetBrowser.Dom.INode,DotNetBrowser.Dom.INode)">
            <summary>
                Replaces an existing child node with a new node. The new node could be an existing node in the document,
                or you can create a new node. If the <paramref name="newNode" /> is an existing node, it will be moved to new
                location in the document.
            </summary>
            <param name="newNode">the new node for replacement.</param>
            <param name="oldNode">the existing node, which will be replaced by <paramref name="newNode" />.</param>
            <returns><c>true</c> if the <paramref name="oldNode" /> was successfully replaced with the <paramref name="newNode" />.</returns>
            <exception cref="T:System.ArgumentException">
                The <paramref name="newNode" /> or the <paramref name="oldNode" /> is null.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.INode" /> has already been disposed.</exception>
            <remarks>The old node could be used for inserting/appending it into the document later.</remarks>
        </member>
        <member name="T:DotNetBrowser.Dom.IOptionElement">
            <summary>
                Represents the DOM HTML <c>&lt;option&gt;</c> element.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.IOptionElement.Selected">
            <summary>
                Gets or sets the state of the option element.
            </summary>
            <returns>
                <c>true</c> if option element is selected, <c>false</c> otherwise.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.IOptionElement" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Dom.ISearchContext">
            <summary>
                The base interface for search that is implemented by the DOM objects that provide
                search mechanisms.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Dom.ISearchContext.GetElementByClassName(System.String)">
            <summary>
                Finds the first <see cref="T:DotNetBrowser.Dom.IElement" /> object in the current search context by the given
                <paramref name="className" />.
            </summary>
            <param name="className">The class attribute of the HTML element.</param>
            <returns>
                The first <see cref="T:DotNetBrowser.Dom.IElement" /> object found in the current search context
                by the given <paramref name="className" /> or <c>null</c> if no elements were found.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="className" /> is null, empty or contains only blank characters.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.ISearchContext" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.ISearchContext.GetElementByCssSelector(System.String)">
            <summary>
                Finds the first <see cref="T:DotNetBrowser.Dom.IElement" /> object in the current search context by the given CSS selector.
            </summary>
            <param name="cssSelector">The CSS selector.</param>
            <returns>
                The first <see cref="T:DotNetBrowser.Dom.IElement" /> object found in the current search context
                by the given CSS selector or <c>null</c> if no elements were found.
            </returns>
            <exception cref="T:System.ArgumentException">
                The <paramref name="cssSelector" /> is null, empty or contains only blank
                characters.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.ISearchContext" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.ISearchContext.GetElementById(System.String)">
            <summary>
                Finds the first <see cref="T:DotNetBrowser.Dom.IElement" /> object in the current search context by the given <paramref name="id" />.
            </summary>
            <param name="id">a string that represents the id attribute of the HTML element.</param>
            <returns>
                The first <see cref="T:DotNetBrowser.Dom.IElement" /> object found in the current search context
                by the given <paramref name="id" /> or <c>null</c> if no elements were found.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="id" /> is null, empty or contains only blank characters.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.ISearchContext" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.ISearchContext.GetElementByName(System.String)">
            <summary>
                Finds the first <see cref="T:DotNetBrowser.Dom.IElement" /> object in the current search context by the given <paramref name="name" />.
            </summary>
            <param name="name">The <c>name</c> attribute of the HTML element.</param>
            <returns>
                The first <see cref="T:DotNetBrowser.Dom.IElement" /> object found in the current search context
                by the given <paramref name="name" /> or  <c>null</c> if no elements were found.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> is null, empty or contains only blank characters.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.ISearchContext" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.ISearchContext.GetElementByTagName(System.String)">
            <summary>
                Finds the first <see cref="T:DotNetBrowser.Dom.IElement" /> object in the current search context by the given tag name.
            </summary>
            <param name="tagName">The tag name of the HTML element.</param>
            <returns>
                the first <see cref="T:DotNetBrowser.Dom.IElement" /> object found in the current search context
                by the given tag name or <c>null</c> if no elements were found.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="tagName" /> is null, empty or contains only blank characters.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.ISearchContext" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.ISearchContext.GetElementsByClassName(System.String)">
            <summary>
                Finds all <see cref="T:DotNetBrowser.Dom.IElement" /> objects in the current search context by the given <paramref name="className" />.
            </summary>
            <param name="className">The <c>class</c> attribute of the HTML element.</param>
            <returns>
                A collection of the <see cref="T:DotNetBrowser.Dom.IElement" /> objects found in the current search context
                by the given <paramref name="className" /> or an empty collection if no elements were found.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="className" /> is null, empty or contains only blank characters.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.ISearchContext" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.ISearchContext.GetElementsByCssSelector(System.String)">
            <summary>
                Finds all <see cref="T:DotNetBrowser.Dom.IElement" /> objects in the current search context by the given
                <paramref name="cssSelector" />.
            </summary>
            <param name="cssSelector">The CSS selector.</param>
            <returns>
                A collection of the <see cref="T:DotNetBrowser.Dom.IElement" /> objects found in the current search context
                by the given <paramref name="cssSelector" /> or an empty collection if no elements were found.
            </returns>
            <exception cref="T:System.ArgumentException">
                The <paramref name="cssSelector" /> is null, empty or contains only blank
                characters.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.ISearchContext" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.ISearchContext.GetElementsByName(System.String)">
            <summary>
                Finds all <see cref="T:DotNetBrowser.Dom.IElement" /> objects in the current search context by the given <c>name</c>.
            </summary>
            <param name="name">The <c>name</c> attribute of the HTML element.</param>
            <returns>
                a collection of the <see cref="T:DotNetBrowser.Dom.IElement" /> objects found in the current search context
                by the given <c>name</c> or an empty collection if no elements were found.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> is null, empty or contains only blank characters.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.ISearchContext" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Dom.ISearchContext.GetElementsByTagName(System.String)">
            <summary>
                Finds all <see cref="T:DotNetBrowser.Dom.IElement" /> objects in the current search context by the given tag name.
            </summary>
            <param name="tagName">The tag name of the HTML element.</param>
            <returns>
                The collection of the <see cref="T:DotNetBrowser.Dom.IElement" /> objects found in the current search context
                by the given tag name or an empty collection if no elements were found.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="tagName" /> is null, empty or contains only blank characters.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.ISearchContext" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Dom.ISelectElement">
            <summary>
                Represents DOM HTML <c>&lt;select&gt;</c> element.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.ISelectElement.Multiple">
            <summary>
                Enables or disables selecting multiple options in the list.
            </summary>
            <value>
                <c>true</c> if multiple options can be selected,
                <c>false</c> if only one option can be selected at a time.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.ISelectElement" /> has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Dom.ISelectElement.Options">
            <summary>
                Gets the collection of <c>&lt;option&gt;</c> elements contained by this <c>&lt;select&gt;</c> element.
            </summary>
            <value>The collection of <c>&lt;option&gt;</c> elements.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Dom.ISelectElement" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Dom.ITextAreaElement">
            <summary>
                Represents DOM HTML <c>&lt;textarea&gt;</c> element.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Dom.NodeType">
            <summary>
                Represents the node types that can be used to distinguish different kind of nodes
                (such as an HTML element, text, attribute) from each other.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.Unknown">
            <summary>
                Unknown node type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.ElementNode">
            <summary>
                An element node, such as `&lt;p&gt;` or `&lt;div&gt;`.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.AttributeNode">
            <summary>
                An attribute of the HTML element.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.TextNode">
            <summary>
                The actual text of the HTML element or the attribute.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.CDataSectionNode">
            <summary>
                A <c>[CDATA]</c> section.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.EntityReferenceNode">
            <summary>
                An XML entity reference node.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.EntityNode">
            <summary>
                An XML <c>&lt;!ENTITY ...&gt;</c> node.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.ProcessingInstructionsNode">
            <summary>
                A <c>ProcessingInstruction</c> of an XML document such as <c>&lt;?xml-stylesheet ... ?&gt;</c>
                declaration.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.CommentNode">
            <summary>
                The content between between the <c>&lt;!--</c> and <c>--&gt;</c> statements.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.DocumentNode">
            <summary>
                The document node.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.DocumentTypeNode">
            <summary>
                The document type node. For example, <c>&lt;!DOCTYPE html&gt;</c> for HTML5 documents.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.DocumentFragmentNode">
            <summary>
                A segment of the document structure.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.NotationNode">
            <summary>
                An XML <c>&lt;!NOTATION ...&gt;</c> node.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.XPathNamespaceNode">
            <summary>
                An XPath namespace node.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.NodeType.ShadowRootNode">
            <summary>
                A shadow root node.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Dom.PointInspection">
            <summary>
                Provides information about a DOM node at the specified point inside the loaded document.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.PointInspection.AbsoluteImageUrl">
            <summary>
                Gets the absolute URL of the image located at the point.
            </summary>
            <value>
                The absolute URL of the image located at the point or an empty string if there
                is no image at the point.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.PointInspection.AbsoluteLinkUrl">
            <summary>
                Gets the absolute URL of the link DOM element at the specified point.
                Returns an empty string if there is no link at the point.
            </summary>
            <value>
                The absolute URL of the link DOM element at the specified point or
                an empty string if there is no link at the point.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.PointInspection.LocalPoint">
            <summary>
                Gets the coordinates of the point relative to the node.
            </summary>
            <value>The coordinates of the point relative to the node.</value>
        </member>
        <member name="P:DotNetBrowser.Dom.PointInspection.Node">
            <summary>
                Gets the node at the specified point.
            </summary>
            <value>
                The node at the specified point or null if there
                is no node at the point.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.PointInspection.UrlNode">
            <summary>
                Gets the link node when a link is located at the point.
            </summary>
            <value>
                The link node when a link is located at the point
                or null if there is no link node at the point.
            </value>
        </member>
        <member name="T:DotNetBrowser.Dom.XPath.IXPathResult">
            <summary>
                Represents the result of the XPath expression evaluation.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Dom.XPath.IXPathResult.Bool">
            <summary>
                Gets the boolean value of the evaluation result.
            </summary>
            <value>
                The bool value of the evaluation result.
                If evaluation result type is not boolean, then returns null.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.XPath.IXPathResult.Iterator">
            <summary>
                Gets the iterator which allows requesting the
                items from the Chromium engine during the iterating.
            </summary>
            <value>
                The iterator which allows requesting the
                items from the Chromium engine during the iterating.
                If evaluation result type is not an ordered or
                unordered node iterator, then returns null.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.XPath.IXPathResult.Node">
            <summary>
                Gets the DOM node returned as the result of evaluation.
            </summary>
            <value>
                The DOM node returned as the result of evaluation.
                If evaluation result type is not first ordered or
                any unordered node, then returns null.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.XPath.IXPathResult.NodesSnapshot">
            <summary>
                Gets the snapshot collection of the DOM nodes.
                If evaluation result type is not ordered or
                unordered node iterator then returns null.
            </summary>
            <value>
                The snapshot collection of the DOM nodes.
                If evaluation result type is not an ordered or
                unordered node iterator, then returns null.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.XPath.IXPathResult.Numeric">
            <summary>
                Gets the numeric value of the evaluation result.
            </summary>
            <value>
                The numeric value of the evaluation result.
                If evaluation result type is not numeric, then returns null.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.XPath.IXPathResult.String">
            <summary>
                Gets the string value of the evaluation result.
            </summary>
            <value>
                The string value of the evaluation result.
                If evaluation result type is not a string, then returns null.
            </value>
        </member>
        <member name="P:DotNetBrowser.Dom.XPath.IXPathResult.Type">
            <summary>
                Gets the result type.
            </summary>
            <value>The type of this <see cref="T:DotNetBrowser.Dom.XPath.IXPathResult" />.</value>
        </member>
        <member name="T:DotNetBrowser.Dom.XPath.XPathException">
            <summary>
                This exception is thrown if XPath evaluation error occurs.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Dom.XPath.XPathException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:DotNetBrowser.Dom.XPath.XPathException" /> class with a specified error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:DotNetBrowser.Dom.XPath.XPathResultType">
            <summary>
                Represents the XPath result types.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.XPath.XPathResultType.Unspecified">
            <summary>
                The result type is not set. Possibly, the evaluation error occurred.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.XPath.XPathResultType.Any">
            <summary>
                The result type is not set. In this case the type is a natural type of the evaluation result.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.XPath.XPathResultType.Number">
            <summary>
                The result contains a single number.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.XPath.XPathResultType.String">
            <summary>
                The result contains a single string.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.XPath.XPathResultType.Boolean">
            <summary>
                The result contains a single boolean value.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.XPath.XPathResultType.UnorderedNodeIterator">
            <summary>
                The result represents a set of all nodes matching the XPath expression.
                The order of nodes in the result is not defined.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.XPath.XPathResultType.OrderedNodeIterator">
            <summary>
                The result represents a set of all nodes matching the XPath expression.
                The nodes in the result are in the same order that they appear in the document.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.XPath.XPathResultType.UnorderedNodeSnapshot">
            <summary>
                The result represents the snapshots of all nodes matching the XPath expression.
                The order of the nodes in the result is not defined.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.XPath.XPathResultType.OrderedNodeSnapshot">
            <summary>
                The result represents the snapshots of all nodes matching the XPath expression.
                The nodes in the result are in the same order that they appear in the document.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.XPath.XPathResultType.AnyUnorderedNode">
            <summary>
                The result represents a single node matching the XPath expression.
                The node is not necessarily the first node in the document that matches the expression.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Dom.XPath.XPathResultType.FirstOrderedNode">
            <summary>
                The result represents the first node in the document matching the XPath expression.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Downloads.DownloadInfo">
            <summary>
                The general information about the download.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Downloads.DownloadInfo.MimeType">
            <summary>
                Gets the MIME type of this download.
            </summary>
            <value>The MIME type of this download.</value>
        </member>
        <member name="P:DotNetBrowser.Downloads.DownloadInfo.SuggestedFileName">
            <summary>
                Gets the suggested file name.
            </summary>
            <value>The suggested file name.</value>
        </member>
        <member name="P:DotNetBrowser.Downloads.DownloadInfo.Url">
            <summary>
                Gets the URL of this download.
            </summary>
            <value>The URL of this download.</value>
        </member>
        <member name="T:DotNetBrowser.Downloads.DownloadState">
            <summary>
                The download state.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.DownloadState.InProgress">
            <summary>
                The download is in progress.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.DownloadState.Complete">
            <summary>
                The download is completely finished.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.DownloadState.Cancelled">
            <summary>
                The download has been cancelled.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.DownloadState.Interrupted">
            <summary>
                The download has been interrupted.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Downloads.Events.CanceledEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Downloads.IDownload.Canceled" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Downloads.Events.DownloadEventArgs">
            <summary>
                The base class for <see cref="T:DotNetBrowser.Downloads.IDownload" /> events.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Downloads.Events.DownloadEventArgs.Download">
            <summary>
                Gets the download instance which is the source of this event.
            </summary>
            <value>The download instance which is the source of this event.</value>
        </member>
        <member name="T:DotNetBrowser.Downloads.Events.DownloadInterruptionReason">
            <summary>
                Possible download interruption reason.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.Unknown">
            <summary>
                There is no interruption reason.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileFailed">
            <summary>
                Generic file operation failure.
                "File Error".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileAccessDenied">
            <summary>
                The file cannot be accessed due to security restrictions.
                "Access Denied".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileNoSpace">
            <summary>
                There is not enough room on the drive.
                "Disk Full".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileNameTooLong">
            <summary>
                The directory or file name is too long.
                "Path Too Long".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileTooLarge">
            <summary>
                The file is too large for the file system to handle.
                "File Too Large".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileVirusInfected">
            <summary>
                The file contains a virus.
                "Virus".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileTransientError">
            <summary>
                The file was in use.
                Too many files are opened at once.
                We have run out of memory.
                "Temporary Problem".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileBlocked">
            <summary>
                The file was blocked due to local policy.
                "Blocked"
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileSecurityCheckFailed">
            <summary>
                An attempt to check the safety of the download failed due to unexpected
                reasons. See http:///crbug.com/153212.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileTooShort">
            <summary>
                An attempt was made to seek past the end of a file in opening
                a file (as part of resuming a previously interrupted download).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileHashMismatch">
            <summary>
                The partial file didn't match the expected hash.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.FileSameAsSource">
            <summary>
                The source and the target of the download were the same
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.NetworkFailed">
            <summary>
                Generic network failure.
                "Network Error".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.NetworkTimeout">
            <summary>
                The network operation timed out.
                "Operation Timed Out".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.NetworkDisconnected">
            <summary>
                The network connection has been lost.
                "Connection Lost".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.NetworkServerDown">
            <summary>
                The server has gone down.
                "Server Down".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.NetworkInvalidRequest">
            <summary>
                The network request was invalid. This may be due to the original URL or a
                redirected URL:
                - Having an unsupported scheme.
                - Being an invalid URL.
                - Being disallowed by policy.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.ServerFailed">
            <summary>
                The server indicates that the operation has failed (generic).
                "Server Error".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.ServerNoRange">
            <summary>
                The server does not support range requests.
                Internal use only:  must restart from the beginning.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.ServerBadContent">
            <summary>
                The server does not have the requested data.
                "Unable to get file".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.ServerUnauthorized">
            <summary>
                Server didn't authorize access to resource.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.ServerCertProblem">
            <summary>
                Server certificate problem.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.ServerForbidden">
            <summary>
                Server access forbidden.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.ServerUnreachable">
            <summary>
                Unexpected server response. This might indicate that the responding server
                may not be the intended server.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.ServerContentLengthMismatch">
            <summary>
                The server sent fewer bytes than the content-length header. It may indicate
                that the connection was closed prematurely, or the Content-Length header was
                invalid. The download is only interrupted if strong validators are present.
                Otherwise, it is treated as finished.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.UserCanceled">
            <summary>
                The user canceled the download.
                "Canceled".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.UserShutdown">
            <summary>
                The user shut down the browser.
                Internal use only:  resume pending downloads if possible.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Downloads.Events.DownloadInterruptionReason.Crash">
            <summary>
                The browser crashed.
                Internal use only:  resume pending downloads if possible.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Downloads.Events.FinishedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Downloads.IDownload.Finished" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Downloads.Events.InterruptedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Downloads.IDownload.Interrupted" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Downloads.Events.InterruptedEventArgs.InterruptionReason">
            <summary>
                Gets the possible download interruption reason.
            </summary>
            <value>The download interruption reason.</value>
        </member>
        <member name="T:DotNetBrowser.Downloads.Events.PausedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Downloads.IDownload.Paused" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Downloads.Events.UpdatedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Downloads.IDownload.Updated" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Downloads.Events.UpdatedEventArgs.CurrentSpeed">
            <summary>
                Gets the estimated download speed.
            </summary>
            <value>The estimated speed in bytes per second.</value>
        </member>
        <member name="P:DotNetBrowser.Downloads.Events.UpdatedEventArgs.Progress">
            <summary>
                Gets the rough percent complete.
            </summary>
            <value>
                Rough percent complete. If the download size is not known, this value will be equal to -1.
            </value>
        </member>
        <member name="P:DotNetBrowser.Downloads.Events.UpdatedEventArgs.ReceivedBytes">
            <summary>
                Gets the number or received (downloaded) bytes.
            </summary>
            <value>
                The number or received (downloaded) bytes. The received bytes
                are always less than total bytes.
            </value>
        </member>
        <member name="P:DotNetBrowser.Downloads.Events.UpdatedEventArgs.TotalBytes">
            <summary>
                Gets the total size of the file.
            </summary>
            <value> The total size of the file in bytes.</value>
        </member>
        <member name="T:DotNetBrowser.Downloads.Handlers.StartDownloadParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.IBrowser.StartDownloadHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Downloads.Handlers.StartDownloadParameters.Download">
            <summary>
                Gets the download which is about to be started.
            </summary>
            <value>The download which is about to be started.</value>
        </member>
        <member name="T:DotNetBrowser.Downloads.Handlers.StartDownloadResponse">
            <summary>
                A response to the <see cref="P:DotNetBrowser.Browser.IBrowser.StartDownloadHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Downloads.Handlers.StartDownloadResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Downloads.Handlers.StartDownloadResponse" /> that notifies the engine that the file download should be canceled.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Downloads.Handlers.StartDownloadResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.StartDownloadHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Downloads.Handlers.StartDownloadResponse.DownloadTo(System.String)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Downloads.Handlers.StartDownloadResponse" /> that notifies the engine that the file should be downloaded into a
                specific
                location.
            </summary>
            <param name="filePath">The absolute path to store the downloaded file.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Downloads.Handlers.StartDownloadResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Browser.IBrowser.StartDownloadHandler" /> implementation.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="filePath" /> is null, empty, or contains only blank characters.</exception>
        </member>
        <member name="T:DotNetBrowser.Downloads.IDownload">
            <summary>
                Represents a download.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Downloads.IDownload.Browser">
            <summary>
                Gets the browser that initiated this download.
            </summary>
            <value>
                The browser that initiated this download. Can be <c>null</c> if no
                <see cref="T:DotNetBrowser.Browser.IBrowser" /> is associated with this download.
            </value>
        </member>
        <member name="P:DotNetBrowser.Downloads.IDownload.Info">
            <summary>
                Gets the additional information about this download.
            </summary>
            <value>The additional information about this download.</value>
        </member>
        <member name="P:DotNetBrowser.Downloads.IDownload.IsPaused">
            <summary>
                Indicates whether this download is paused.
            </summary>
            <value><c>true</c> if the download is paused, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Downloads.IDownload" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Downloads.IDownload.State">
            <summary>
                Gets the current download state.
            </summary>
            <value>The current download state.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Downloads.IDownload" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="E:DotNetBrowser.Downloads.IDownload.Updated">
            <summary>
                Occurs when the download state was updated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Downloads.IDownload" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Downloads.IDownload.Canceled">
            <summary>
                Occurs when the download was canceled.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Downloads.IDownload" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Downloads.IDownload.Interrupted">
            <summary>
                Occurs when the download was interrupted.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Downloads.IDownload" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Downloads.IDownload.Finished">
            <summary>
                Occurs when the download was finished.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Downloads.IDownload" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Downloads.IDownload.Paused">
            <summary>
                Occurs when the download was paused.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Downloads.IDownload" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Downloads.IDownload.Cancel">
            <summary>
                Cancels this download. Will have no effect when the download is already cancelled.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Downloads.IDownload" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Downloads.IDownload.Pause">
            <summary>
                Pauses this download. Will have no effect when the download is already paused.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Downloads.IDownload" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Downloads.IDownload.Resume">
            <summary>
                Resumes this download. Will have no effect when the download is not paused.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Downloads.IDownload" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Downloads.IDownloads">
            <summary>
                A service that can be used to work with the downloads.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Downloads.IDownloads.Engine">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.</value>
        </member>
        <member name="P:DotNetBrowser.Downloads.IDownloads.Items">
            <summary>
                Gets an immutable collection of all download items including already completed downloads during this session and
                the active
                downloads.
            </summary>
            <value>
                The collection of all download items including already completed downloads during this session and the active
                downloads.
            </value>
        </member>
        <member name="T:DotNetBrowser.Engine.BinariesExtractionOptions">
            <summary>
                The options that are used to configure the Chromium binaries extraction process.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Engine.BinariesExtractionOptions.AdditionalBinariesSearchPath">
            <summary>
                Gets the additional custom path to search for an assembly containing compatible Chromium binaries.
            </summary>
            <value>The additional custom path to search for an assembly containing compatible Chromium binaries.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.BinariesExtractionOptions.CheckLastModificationDate">
            <summary>
                Indicates whether it is necessary to check the last modification date during binaries verification.
            </summary>
            <value><c>true</c> if the last modification date should be checked, <c>false</c> otherwise.</value>
        </member>
        <member name="M:DotNetBrowser.Engine.BinariesExtractionOptions.#ctor(System.Boolean,System.String)">
            <summary>
                Creates and initializes an instance of <see cref="T:DotNetBrowser.Engine.BinariesExtractionOptions" />.
            </summary>
            <param name="checkLastModificationDate">
                Specifies whether it is necessary to check the last modification date during
                binaries verification.
            </param>
            <param name="additionalBinariesSearchPath">
                The additional custom path to search for an assembly containing compatible
                Chromium binaries.
            </param>
        </member>
        <member name="T:DotNetBrowser.Engine.ChromiumBinariesMissingException">
            <summary>
                Thrown when the engine initialization fails due to missing compatible Chromium binaries.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Engine.ChromiumBinariesMissingException.#ctor(System.String)">
            <summary>
                Initializes a new instance with the specified <paramref name="message" />.
            </summary>
            <param name="message">The detailed message.</param>
        </member>
        <member name="T:DotNetBrowser.Engine.ConnectionClosedException">
            <summary>
                The exception thrown when the connection to the Chromium engine appears to be closed.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Engine.EngineInitializationException">
            <summary>
                The base class for those exceptions that can be thrown during <see cref="T:DotNetBrowser.Engine.IEngine" /> initialization.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Engine.EngineInitializationException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:DotNetBrowser.Engine.EngineInitializationException" /> with the specified
                <paramref name="message" />.
            </summary>
            <param name="message">The detail message.</param>
        </member>
        <member name="T:DotNetBrowser.Engine.EngineOptions">
            <summary>
                The options that are used to configure <see cref="T:DotNetBrowser.Engine.IEngine" /> instances.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.BinariesExtractionOptions">
            <summary>
                Gets the options that are used to configure the Chromium binaries extraction process.
            </summary>
            <value>The options that are used to configure the Chromium binaries extraction process.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.ChromiumDirectory">
            <summary>
                Gets the absolute path to the directory where the Chromium binaries are located.
            </summary>
            <value>
                The absolute path to the directory where the Chromium binaries are located or an empty
                string if it was not set.
            </value>
            <remarks>
                <para>
                    If the directory contains the Chromium binaries, the library will check them and make
                    sure that they are compatible with the current library version. If the directory does not
                    contain the Chromium binaries, or the binaries aren't compatible with the current library
                    version, the library will search for the binaries inside the assemblies from the application
                    references and working directory and extract them into the given directory programmatically.
                    It might take some time to extract the Chromium binaries from a JAR archive. The time depends on the hardware
                    (CPU and SSD/HDD) performance.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.ChromiumSwitches">
            <summary>
                Gets an immutable collection of the Chromium switches that will be passed to the Chromium Main
                process.
            </summary>
            <value>
                An immutable collection of the Chromium switches that will be passed to the Chromium Main
                process.
            </value>
            <remarks>
                <para>
                    The library does not support all the possible Chromium switches, so there is no guarantee
                    that the passed switches will work. The switches from this list will overwrite the
                    corresponding options configured through the <see cref="T:DotNetBrowser.Engine.EngineOptions.Builder" />.
                </para>
                <para>
                    For example, if you configure the remote debugging port using the<see cref="P:DotNetBrowser.Engine.EngineOptions.RemoteDebuggingPort" />
                    property and then add the <c>--remote-debugging-port</c> switch using the
                    <see cref="P:DotNetBrowser.Engine.EngineOptions.ChromiumSwitches" /> property, then the port from the switch will
                    be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.CrashDumpDirectory">
            <summary>
                Gets the path that will be used to store the automatically generated Chromium crash dumps.
            </summary>
            <value>The path that will be used to store the automatically generated Chromium crash dumps.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.DiskCacheSize">
            <summary>
                Gets the disk cache size.
            </summary>
            <value>The disk cache size in bytes.</value>
            <remarks>
                If the disk cache size was not set, then it will be calculated automatically. The size
                depends on the available disk space in the volume where the disk cache is located.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.GoogleApiKey">
            <summary>
                Gets the Google API key.
            </summary>
            <value>The Google API key.</value>
            <remarks>
                <para>
                    Some Chromium features such as Geolocation, Spelling, Speech, etc. use Google APIs, and
                    to access those APIs, an API Key, OAuth 2.0 client ID, and client secret are required.
                    Setting up API keys is optional. If you do not do it, the specific APIs using Google services
                    won't work.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.GoogleDefaultClientId">
            <summary>
                Gets the Google client ID.
            </summary>
            <value>The Google client ID.</value>
            <remarks>
                <para>
                    Some Chromium features such as Geolocation, Spelling, Speech, etc. use Google APIs, and
                    to access those APIs, an API Key, OAuth 2.0 client ID, and client secret are required.
                    Setting up API keys is optional. If you do not do it, the specific APIs using Google services
                    won't work.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.GoogleDefaultClientSecret">
            <summary>
                Gets the Google client secret.
            </summary>
            <value>The Google client secret.</value>
            <remarks>
                <para>
                    Some Chromium features such as Geolocation, Spelling, Speech, etc. use Google APIs, and
                    to access those APIs, an API Key, OAuth 2.0 client ID, and client secret are required.
                    Setting up API keys is optional. If you do not do it, the specific APIs using Google services
                    won't work.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.IsAutoplayEnabled">
            <summary>
                Indicates whether video playback will automatically start after page loading.
            </summary>
            <value><c>true</c> if autoplay is enabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.IsFileAccessFromFilesAllowed">
            <summary>
                Indicates whether file access from files is allowed.
            </summary>
            <value><c>true</c> if the file access from files is allowed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.IsGoogleTrafficDisabled">
            <summary>
                Indicates whether Chromium services that cause additional traffic are disabled.
            </summary>
            <value><c>true</c> if additional traffic is disabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.IsGpuDisabled">
            <summary>
                Indicates whether GPU is disabled.
            </summary>
            <value><c>true</c> if GPU is disabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.IsIncognitoEnabled">
            <summary>
                Indicates whether the incognito mode for the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance is enabled.
            </summary>
            <value><c>true</c> if the incognito mode is enabled, <c>false</c> otherwise.</value>
            <remarks>
                In the incognito mode the user data such as browsing history, cookies, site data, and the
                information entered in forms are stored in memory and released once you close the <c>Engine</c>.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.IsSandboxDisabled">
            <summary>
                Indicates whether the sandbox is disabled.
            </summary>
            <value><c>true</c> if the sandbox is disabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.IsTouchMenuDisabled">
            <summary>
                Indicates whether touch popup menu is disabled.
            </summary>
            <value><c>true</c> if the touch popup menu is disabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.IsWebSecurityDisabled">
            <summary>
                Indicates whether the same-origin policy is disabled.
            </summary>
            <value><c>true</c> if the same-origin policy is disabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Language">
            <summary>
                Gets the Chromium language that is used on the default error pages and message dialogs.
            </summary>
            <value>The Chromium language.</value>
            <remarks>
                <para>
                    By default, the language is dynamically configured according to the default locale of the
                    application. If the list of supported languages does not contain the language obtained from
                    the application locale, then the US English language is used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.LicenseKey">
            <summary>
                Gets the license key.
            </summary>
            <value>The license key.</value>
            <remarks>
                The license key can be set via adding the "dotnetbrowser.license" file as embedded resource or individually
                for every <see cref="T:DotNetBrowser.Engine.IEngine" /> using the <see cref="P:DotNetBrowser.Engine.EngineOptions.LicenseKey" /> property.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.PasswordStore">
            <summary>
                Gets the password store type which specifies the
                storage backend should be used to encrypt cookies.
            </summary>
            <value> The password store type.</value>
            <remarks>
                If the password store type was not set, then the encryption storage backend is chosen by
                Chromium engine automatically.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.ProprietaryFeatures">
            <summary>
                Gets the proprietary features enabled for the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance.
            </summary>
            <value>The proprietary features enabled for the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.RemoteDebuggingPort">
            <summary>
                Gets the remote debugging port.
            </summary>
            <value>The remote debugging port.</value>
            <remarks>
                <para>
                    This option enables remote debugging over HTTP at the specific port. When remote
                    debugging is enabled, you can navigate to the <c>http://localhost:&lt;port&gt;</c> address from
                    another <c>Browser</c> instance or from the Google Chrome browser and debug the loaded web
                    pages using Chrome DevTools. If you use Google Chrome browser for remote debugging, its
                    version must be equal to the Chromium engine version that is used in DotNetBrowser.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.RenderingMode">
            <summary>
                Gets the rendering mode indicating how the content of the web pages will be rendered.
            </summary>
            <value>The rendering mode.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Schemes">
            <summary>
                Gets the readonly dictionary of the schemes that will be intercepted.
            </summary>
            <value>The readonly dictionary of the schemes that will be intercepted.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.UserAgent">
            <summary>
                Gets the custom user agent string that is used to override the default user agent for the
                <see cref="T:DotNetBrowser.Engine.IEngine" />.
            </summary>
            <value>The custom user agent string.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.UserDataDirectory">
            <summary>
                Gets an absolute path to the directory where the user data is stored.
            </summary>
            <value>An absolute path to the directory where the user data is stored.</value>
            <remarks>
                <para>
                    The user data directory stores the data such as cache, cookies, history, GPU cache, local
                    storage, visited links, web data, spell checking dictionary files, etc.
                </para>
                <para>
                    <b>Important</b>: the user data directory cannot be used at the same time by multiple <see cref="T:DotNetBrowser.Engine.IEngine" />
                    instances running in a single or different applications.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.ChromiumProcessName">
            <summary>
                Gets the name of the native Chromium process used by DotNetBrowser.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Engine.EngineOptions.IsProprietaryFeatureEnabled(DotNetBrowser.Engine.ProprietaryFeatures)">
            <summary>
                Checks whether the given proprietary features are enabled.
            </summary>
            <param name="proprietaryFeatures">the features to check.</param>
            <returns>true if the feature is enabled, false otherwise.</returns>
        </member>
        <member name="T:DotNetBrowser.Engine.EngineOptions.Builder">
            <summary>
                A builder class to construct engine options.
            </summary>
            <remarks>
                Each of the properties modifies the state of the builder. Builders are not thread-safe and should
                not be used concurrently from multiple threads without external synchronization.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.AutoplayEnabled">
            <summary>
                Enables or disables automatic video playback after page loading.
            </summary>
            <value><c>true</c> if autoplay is enabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.BinariesExtractionOptions">
            <summary>
                Gets or sets the options that are used to configure the Chromium binaries extraction process.
            </summary>
            <value>The options that are used to configure the Chromium binaries extraction process.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.ChromiumDirectory">
            <summary>
                Gets or sets the absolute path to the directory where Chromium binaries are located or the empty
                string if it was not set.
            </summary>
            <value>
                The absolute path to the directory where Chromium binaries are located or the empty
                string if it was not set.
            </value>
            <remarks>
                <para>
                    If the directory contains the Chromium binaries, the library will check them and make
                    sure that they are compatible with the current library version. If the directory does not
                    contain the Chromium binaries, or the binaries aren't compatible with the current library
                    version, the library will search for the binaries inside the assemblies from the application
                    references and working directory and extract them into the given directory programmatically.
                    It might take some time to extract the Chromium binaries from a JAR archive. The time depends on the hardware
                    (CPU and SSD/HDD) performance.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.ChromiumSwitches">
            <summary>
                Gets a set of the Chromium switches that will be passed to the Chromium Main
                process.
            </summary>
            <value>
                A set of the Chromium switches that will be passed to the Chromium Main
                process.
            </value>
            <remarks>
                <para>
                    The library does not support all the possible Chromium switches, so there is no guarantee
                    that the passed switches will work. The switches from this list will overwrite the
                    corresponding options configured through the <see cref="T:DotNetBrowser.Engine.EngineOptions.Builder" />.
                </para>
                <para>
                    For example, if you configure the remote debugging port using the<see cref="P:DotNetBrowser.Engine.EngineOptions.Builder.RemoteDebuggingPort" />
                    property and then add the <c>--remote-debugging-port</c> switch using the
                    <see cref="P:DotNetBrowser.Engine.EngineOptions.Builder.ChromiumSwitches" /> property, then the port from the switch will
                    be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.CrashDumpDirectory">
            <summary>
                Gets or sets the path that will be used to store automatically generated Chromium crash dumps.
            </summary>
            <value>The path that will be used to store automatically generated Chromium crash dumps.</value>
            <remarks>
                If this property is set to null, the default path will be used. If this property is set to an empty string,
                crash dump generation will be disabled.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.DiskCacheSize">
            <summary>
                Gets or sets the disk cache size.
            </summary>
            <value>The disk cache size in bytes.</value>
            <remarks>
                If the disk cache size was not set, then it will be calculated automatically. The size
                depends on the available disk space in the volume where the disk cache is located.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.FileAccessFromFilesAllowed">
            <summary>
                Allows or disallows the file access from files.
            </summary>
            <value><c>true</c> if the file access is allowed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.GoogleApiKey">
            <summary>
                Gets or sets the Google API key.
            </summary>
            <value>The Google API key.</value>
            <remarks>
                <para>
                    Some Chromium features such as Geolocation, Spelling, Speech, etc. use Google APIs, and
                    to access those APIs, an API Key, OAuth 2.0 client ID, and client secret are required.
                    Setting up API keys is optional. If you do not do it, the specific APIs using Google services
                    won't work.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.GoogleDefaultClientId">
            <summary>
                Gets or sets the Google client ID.
            </summary>
            <value>The Google client ID.</value>
            <remarks>
                <para>
                    Some Chromium features such as Geolocation, Spelling, Speech, etc. use Google APIs, and
                    to access those APIs, an API Key, OAuth 2.0 client ID, and client secret are required.
                    Setting up API keys is optional. If you do not do it, the specific APIs using Google services
                    won't work.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.GoogleDefaultClientSecret">
            <summary>
                Gets or sets the Google client secret.
            </summary>
            <value>The Google client secret.</value>
            <remarks>
                <para>
                    Some Chromium features such as Geolocation, Spelling, Speech, etc. use Google APIs, and
                    to access those APIs, an API Key, OAuth 2.0 client ID, and client secret are required.
                    Setting up API keys is optional. If you do not do it, the specific APIs using Google services
                    won't work.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.GoogleTrafficDisabled">
            <summary>
                Disables Chromium services that cause additional traffic, such as Google Cloud Messaging,
                Translate Ranker, Extensions Updater, Safe Browsing, etc. These services are related to
                the features that are not currently supported in DotNetBrowser.This option does not affect
                the supported features, such as SpellChecker or Widevine.
            </summary>
            <value><c>true</c> if additional traffic is disabled, <c>false</c> otherwise.</value>
            <remarks>
                <para>
                    By default, Chromium services that cause additional traffic are enabled.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.GpuDisabled">
            <summary>
                Disables or enables GPU.
            </summary>
            <value><c>true</c> if the GPU is disabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.IncognitoEnabled">
            <summary>
                Enables or disables the incognito mode for the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance.
            </summary>
            <value><c>true</c> if the incognito mode is enabled, <c>false</c> otherwise.</value>
            <remarks>
                In the incognito mode the user data such as browsing history, cookies, site data, and the
                information entered in forms are stored in memory and released once you close the <c>Engine</c>.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.Language">
            <summary>
                Gets or sets the Chromium language that is used on the default error pages and message dialogs.
            </summary>
            <value>The Chromium language.</value>
            <remarks>
                <para>
                    By default, the language is dynamically configured according to the default locale of the
                    application. If the list of supported languages does not contain the language obtained from
                    the application locale, then the US English language is used. This property allows you
                    to override the default behavior and configure the Chromium engine with the given language.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.LicenseKey">
            <summary>
                Gets or sets the license key.
            </summary>
            <value>The license key.</value>
            <remarks>
                The license key can be set via adding the "dotnetbrowser.license" file as embedded resource or individually
                for every <see cref="T:DotNetBrowser.Engine.IEngine" /> using the <see cref="P:DotNetBrowser.Engine.EngineOptions.Builder.LicenseKey" /> property.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.PasswordStore">
            <summary>
                Gets or sets the password store type which specifies the
                storage backend should be used to encrypt cookies.
            </summary>
            <value>The password store type.</value>
            <remarks>
                If the password store type was not set, then the encryption storage backend is chosen by
                Chromium engine automatically.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.ProprietaryFeatures">
            <summary>
                Gets or sets the proprietary features enabled for the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance.
                By default, all the proprietary features are disabled.
            </summary>
            <value>The proprietary features enabled for the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.RemoteDebuggingPort">
            <summary>
                Gets or sets the remote debugging port.
            </summary>
            <value>The remote debugging port.</value>
            <remarks>
                <para>
                    This option enables remote debugging over HTTP at the specific port. When remote
                    debugging is enabled, you can navigate to the <c>http://localhost:&lt;port&gt;</c> address from
                    another <c>Browser</c> instance or from the Google Chrome browser and debug the loaded web
                    pages using Chrome DevTools. If you use Google Chrome browser for remote debugging, its
                    version must be equal to the Chromium engine version that is used in DotNetBrowser.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.RenderingMode">
            <summary>
                Gets or sets the rendering mode indicating how the content of the web pages will be rendered.
            </summary>
            <value>The rendering mode.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.SandboxDisabled">
            <summary>
                Enables or disables the sandbox.
            </summary>
            <value><c>true</c> if the sandbox is disabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.Schemes">
            <summary>
                Gets the dictionary of the schemes that will be intercepted.
            </summary>
            <value>The dictionary of the schemes that will be intercepted.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.TouchMenuDisabled">
            <summary>
                Enables or disables the touch popup menu.
            </summary>
            <value><c>true</c> if the touch popup menu is disabled, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.UserAgent">
            <summary>
                Gets or sets the custom user agent string that is used to override the default user agent for the
                <see cref="T:DotNetBrowser.Engine.IEngine" />.
            </summary>
            <value>The custom user agent string.</value>
            <remarks>This property has the same effect as adding the <c>--user-agent</c> switch.</remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.UserDataDirectory">
            <summary>
                Gets or sets an absolute path to the directory where the user data is stored.
            </summary>
            <value>An absolute path to the directory where the user data is stored.</value>
            <remarks>
                <para>
                    The user data directory stores the data such as cache, cookies, history, GPU cache, local
                    storage, visited links, web data, spell checking dictionary files, etc.
                </para>
                <para>
                    <b>Important</b>: the user data directory cannot be used at the same time by multiple <see cref="T:DotNetBrowser.Engine.IEngine" />
                    instances running in a single or different applications.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Engine.EngineOptions.Builder.WebSecurityDisabled">
            <summary>
                Enables or disables the same-origin policy.
            </summary>
            <value><c>true</c> if the same-origin policy is disabled, <c>false</c> otherwise.</value>
        </member>
        <member name="M:DotNetBrowser.Engine.EngineOptions.Builder.Build">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Engine.EngineOptions" /> instance.
            </summary>
            <returns>new <see cref="T:DotNetBrowser.Engine.EngineOptions" /> instance initialized according to the current builder state.</returns>
        </member>
        <member name="T:DotNetBrowser.Engine.Events.EngineDisposedEventArgs">
            <summary>
                The event arguments for the event indicating that the <see cref="T:DotNetBrowser.Engine.IEngine" /> has been disposed.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Engine.Events.EngineDisposedEventArgs.Engine">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance that has been disposed.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance that has been disposed.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.Events.EngineDisposedEventArgs.ExitCode">
            <summary>
                Gets the exit code of the main Chromium process that has been terminated.
            </summary>
            <value>
                The exit code of the main Chromium process that has been terminated.
                If this code is non-zero, the process terminated unexpectedly due to the
                crash.
            </value>
        </member>
        <member name="T:DotNetBrowser.Engine.IEngine">
            <summary>
                Provides access to the Chromium engine functionality.
            </summary>
            <remarks>
                <para>
                    To perform operations with the engine, a license key is required. The license key represents
                    a string that can be set via the <c>dotnetbrowser.license</c> file or individually for every
                    <c>IEngine</c> using the <see cref="P:DotNetBrowser.Engine.EngineOptions.LicenseKey">LicenseKey</see> property. If you
                    set the license key via configuring the license file, then please make sure that you set it
                    before creating an <c>IEngine</c> instance.
                </para>
                <para>
                    The Chromium engine is running in a separate native process. Communication between the native
                    and .NET process is done through the Inter-Process Communication (IPC) layer that allows
                    transferring data between two processes on a local machine.
                </para>
                <para>
                    The native process allocates memory and system resources that must be released. So, when the
                    engine is no longer needed, it must be disposed through the <see cref="M:System.IDisposable.Dispose" /> method to
                    shutdown the native process and free all the allocated memory and system resources. For example:
                </para>
                <code>
                     IEngine engine = EngineFactory.Create(engineOptions);
                     //...
                     engine.Dispose();
                 </code>
                <para>
                    Any attempt to use an already disposed engine or any of its services  will lead to the
                    <see cref="T:System.InvalidOperationException" />.
                </para>
                <para>
                    To get notifications that the <c>IEngine</c> instance has been disposed subscribe to the
                    following event:
                </para>
                <code>
                     engine.Disposed += (s, e) => {
                     // The engine has been disposed or unexpectedly crashed.
                     });
                 </code>
                <para>To get notifications that the <c>IEngine</c> instance has been unexpectedly crashed use:</para>
                <code>
                     engine.Disposed += (s, e) => {
                         long exitCode = e.ExitCode;
                         // The engine has been crashed if this exit code is non-zero.
                     });
                 </code>
                <example>
                    <code source="../DotNetBrowser.Core.Test/EngineServiceTest.cs" region="EngineFactory.Create Sample"
                        lang="C#"
                        title="Create IEngine" />
                </example>
            </remarks>
            <inheritdoc cref="T:DotNetBrowser.IAutoDisposable`1" />
            <inheritdoc cref="T:System.IDisposable" />
        </member>
        <member name="P:DotNetBrowser.Engine.IEngine.CookieStore">
            <summary>
                Gets the cookie service that allows managing cookies.
            </summary>
            <value> The cookie service that allows managing cookies.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.IEngine.Downloads">
            <summary>
                Gets the service that allows managing downloads.
            </summary>
            <value>The service that allows managing downloads.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.IEngine.HttpCache">
            <summary>
                Gets the HTTP cache service.
            </summary>
            <value>The HTTP cache service.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.IEngine.MediaDevices">
            <summary>
                Gets the service that allows managing media stream devices.
            </summary>
            <value>The service that allows managing media stream devices.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.IEngine.Network">
            <summary>
                Gets the service that allows working with network.
            </summary>
            <value>The service that allows working with network.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.IEngine.Options">
            <summary>
                Gets the options that were used to initialize this <see cref="T:DotNetBrowser.Engine.IEngine" />.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Engine.EngineOptions" /> that were used to initialize this <see cref="T:DotNetBrowser.Engine.IEngine" />.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.IEngine.Permissions">
            <summary>
                Gets the service that allows managing permissions.
            </summary>
            <value>The service that allows managing permissions.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.IEngine.Plugins">
            <summary>
                Gets the service that allows configuring plugins.
            </summary>
            <value>The service that allows configuring plugins.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.IEngine.Proxy">
            <summary>
                Gets the service that allows working with proxy.
            </summary>
            <value>The service that allows working with proxy. </value>
        </member>
        <member name="P:DotNetBrowser.Engine.IEngine.SpellChecker">
            <summary>
                Gets the service that allows working with spell checking functionality.
            </summary>
            <value>The service that allows working with spell checking functionality.</value>
        </member>
        <member name="P:DotNetBrowser.Engine.IEngine.ZoomLevels">
            <summary>
                Gets the service that allows working with zoom.
            </summary>
            <value>The service that allows working with zoom.</value>
        </member>
        <member name="M:DotNetBrowser.Engine.IEngine.CreateBrowser">
            <summary>
                Creates a new <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance with the initial "about:blank" web page.
            </summary>
            <returns>a new <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance.</returns>
        </member>
        <member name="T:DotNetBrowser.Engine.InvalidLicenseException">
            <summary>
                Thrown when the given license is invalid.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Engine.InvalidLicenseException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Engine.LicenseException">
            <summary>
                The base class for those exceptions that can be thrown during license checking.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Engine.LicenseException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Engine.NoLicenseException">
            <summary>
                Thrown when no license found.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Engine.NoLicenseException.#ctor">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Engine.ProprietaryFeatures">
            <summary>
                The list of supported proprietary features.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Engine.ProprietaryFeatures.None">
            <summary>
                No proprietary features enabled.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Engine.ProprietaryFeatures.H264">
            <summary>
                <para>Represents support of the H.264 codec.</para>
                <para>
                    <b>Important</b>: H.264 codec is a proprietary component. By enabling this codec you
                    state that you are aware that H.264 is a proprietary component and you should have a license
                    in order to use it. For more information, you could contact patent holders: Via Licensing and
                    MPEG LA. TeamDev shall not be responsible for your use of H.264 codec.
                </para>
            </summary>
        </member>
        <member name="F:DotNetBrowser.Engine.ProprietaryFeatures.Aac">
            <summary>
                <para>Represents support of the AAC codec.</para>
                <para>
                    <b>Important</b>: AAC codec is a proprietary component. By enabling this codec you
                    state that you are aware that AAC is a proprietary component and you should have a license
                    in order to use it. For more information, you could contact patent holders: Via Licensing and
                    MPEG LA. TeamDev shall not be responsible for your use of AAC codec.
                </para>
            </summary>
        </member>
        <member name="F:DotNetBrowser.Engine.ProprietaryFeatures.Widevine">
            <summary>
                <para>Represents support of the Widevine DRM decryption.</para>
                <para>
                    <b>Important</b>: Widevine is a Google proprietary component, governed by its own terms
                    of use. For more information, see
                    <a href="https://www.widevine.com/">
                        https://www.widevine.com/
                    </a>
                    . TeamDev shall not be responsible for your use of Widevine.
                </para>
            </summary>
        </member>
        <member name="T:DotNetBrowser.Engine.RenderingMode">
            <summary>
                The supported rendering modes.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Engine.RenderingMode.HardwareAccelerated">
            <summary>
                The engine renders content using GPU and displays it directly on a native surface (window).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Engine.RenderingMode.OffScreen">
            <summary>
                The engine renders content using GPU and copies the pixels to the process memory.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Frames.EditorCommand">
            <summary>
                Provides the supported commands that can be executed in a <see cref="T:DotNetBrowser.Frames.IFrame" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.BackColor(System.String)">
            <summary>
                Returns a command that allows setting the background color for selected text in a WYSIWYG editor.
            </summary>
            <param name="color">the color to set.</param>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
            <exception cref="T:System.ArgumentException">
                Thrown when the <paramref name="color" /> is null, empty or contain only white
                space.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.Bold">
            <summary>
                Returns a command that allows making the selected text bold in a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.Copy">
            <summary>
                Returns a command that allows copying the selected text in the frame.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.Cut">
            <summary>
                Returns a command that allows cutting the selected text in a text field, text area or WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.Delete">
            <summary>
                Returns a command that allows deleting the selected text in a text field, text area or WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.DeleteBackward">
            <summary>
                Returns a command that allows deleting character before the caret position in a text field,
                text area or WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.DeleteForward">
            <summary>
                Returns a command that allows deleting character after the caret position in a text field,
                text area or WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.DeleteToBeginningOfLine">
            <summary>
                Returns a command that allows deleting character from the caret position to the beginning of
                line in a text field, text area or WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.DeleteWordBackward">
            <summary>
                Returns a command that allows deleting a word before the caret position in a text field,
                text area or WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.DeleteWordForward">
            <summary>
                Returns a command that allows deleting a word after the caret position in a text field,
                text area or WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.FindText(System.String)">
            <summary>
                Returns a command that allows searching for the given <paramref name="text" /> occurrence from the
                current caret position in the frame. If match found, this command will select it and scroll
                down to make it visible, if needed.
            </summary>
            <param name="text">the text to search.</param>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
            <exception cref="T:System.ArgumentException">
                Thrown when the <paramref name="text" /> is null, empty or contain only white
                space.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.FontName(System.String)">
            <summary>
                Returns a command that allows setting the given <paramref name="fontName" /> for the selected text in a WYSIWYG
                editor.
            </summary>
            <param name="fontName">the font name to set.</param>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
            <exception cref="T:System.ArgumentException">
                Thrown when the <paramref name="fontName" /> is null, empty or contain only white
                space.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.FontSize(System.Int32)">
            <summary>
                Returns a command that allows setting the given <paramref name="fontSize" /> for the selected text in a WYSIWYG
                editor.
            </summary>
            <param name="fontSize">the font size to set.</param>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="fontSize" /> is less or equal to zero.</exception>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.ForeColor(System.String)">
            <summary>
                Returns a command that allows setting the given foreground <paramref name="color" /> for the selected
                text in a WYSIWYG editor.
            </summary>
            <param name="color">the color to set.</param>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
            <exception cref="T:System.ArgumentException">
                Thrown when the <paramref name="color" /> is null, empty or contain only white
                space.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.IgnoreSpelling">
            <summary>
                Returns a command that allows disabling the spelling mistakes highlighting in a text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.InsertHtml(System.String)">
            <summary>
                Returns a command that allows inserting the given <paramref name="html" /> content in a WYSIWYG editor.
            </summary>
            <param name="html">the html content to insert.</param>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
            <exception cref="T:System.ArgumentException">
                Thrown when the <paramref name="html" /> is null, empty or contain only white
                space.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.InsertImage(System.String)">
            <summary>
                Returns a command that allows inserting an image with the given <paramref name="source" /> in a WYSIWYG editor.
                If the <paramref name="source" /> points to an invalid location, then image won't be inserted.
            </summary>
            <param name="source">the value of the 'src' attribute of the IMG tag</param>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
            <exception cref="T:System.ArgumentException">
                Thrown when the <paramref name="source" /> is null, empty or contain only white
                space.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.InsertNewLine">
            <summary>
                Returns a command that allows inserting a new line in a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.InsertParagraph">
            <summary>
                Inserts new paragraph in a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.InsertTab">
            <summary>
                Returns a command that allows inserting a tab character in a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.InsertText(System.String)">
            <summary>
                Returns a command that allows inserting the given <paramref name="text" /> content in a WYSIWYG editor or a text
                field.
            </summary>
            <param name="text">the text to insert.</param>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
            <exception cref="T:System.ArgumentException">
                Thrown when the <paramref name="text" /> is null, empty or contain only white
                space.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.Italic">
            <summary>
                Returns a command that allows making the selected text italic in a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.MovePageDown">
            <summary>
                Returns a command that allows moving the caret position at one page down in a text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.MovePageUp">
            <summary>
                Returns a command that allows moving the caret position at one page up in a text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.MoveToBeginningOfLine">
            <summary>
                Returns a command that allows moving a word to the beginning of line in a text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.MoveToBeginningOfLineAndModifySelection">
            <summary>
                Returns a command that allows moving a word to the beginning of line and modifying selection
                in a text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.MoveToEndOfLine">
            <summary>
                Returns a command that allows moving a word to the end of line in a text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.MoveToEndOfLineAndModifySelection">
            <summary>
                Returns a command that allows moving a word to the end of line and modifying selection in a
                text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.MoveWordLeft">
            <summary>
                Returns a command that allows moving a word left in a text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.MoveWordLeftAndModifySelection">
            <summary>
                Returns a command that allows moving a word left and modifying selection in a text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.MoveWordRight">
            <summary>
                Returns a command that allows moving a word right in a text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.MoveWordRightAndModifySelection">
            <summary>
                Returns a command that allows moving a word right and modifying selection in a text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.Paste">
            <summary>
                Returns a command that allows pasting content of the clipboard in a text field, text area or
                a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.Redo">
            <summary>
                Returns a command that allows reversing the last <see cref="M:DotNetBrowser.Frames.EditorCommand.Undo" /> action.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.ScrollLineDown">
            <summary>
                Returns a command that allows scrolling one line down.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.ScrollLineUp">
            <summary>
                Returns a command that allows scrolling one line up.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.ScrollPageBackward">
            <summary>
                Returns a command that allows scrolling a page backward.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.ScrollPageForward">
            <summary>
                Returns a command that allows scrolling a page forward.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.ScrollToBeginningOfDocument">
            <summary>
                Returns a command that allows scrolling content to the beginning of the document in the frame.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.ScrollToEndOfDocument">
            <summary>
                Returns a command that allows scrolling content to the end of the document in the frame.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.SelectAll">
            <summary>
                Returns a command that allows selecting all text in the frame or the currently focused text
                field, text area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.SelectLine">
            <summary>
                Returns a command that allows selecting a line at the caret position in a text area or a
                WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.SelectParagraph">
            <summary>
                Returns a command that allows selecting the whole paragraph at the caret position in a text
                area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.SelectSentence">
            <summary>
                Returns a command that allows selecting the whole sentence at the caret position in a text
                area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.SelectWord">
            <summary>
                Returns a command that allows selecting the word at the caret position in a text field, text
                area or a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.ToggleBold">
            <summary>
                Returns a command that allows toggling bold style for the selected text in a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.ToggleItalic">
            <summary>
                Returns a command that allows toggling italic style for the selected text in a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.ToggleUnderline">
            <summary>
                Returns a command that allows toggling underline style for the selected text in a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.Underline">
            <summary>
                Returns a command that allows underlying the selected text in a WYSIWYG editor.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.Undo">
            <summary>
                Returns a command that allows reversing the last action.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Frames.EditorCommand.Unselect">
            <summary>
                Returns a command that allows clearing the current selection in a frame.
            </summary>
            <returns>The <see cref="T:DotNetBrowser.Frames.EditorCommand" /> instance.</returns>
        </member>
        <member name="T:DotNetBrowser.Frames.IFrame">
            <summary>
                Represents a frame in the browser.
                Each web page loaded in the browser has a main(top-level) frame. The frame itself may have child
                frames. When a web page is unloaded, its frame and all child frames are closed automatically.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IFrame.Browser">
            <summary>
                The <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with this frame.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IFrame.Children">
            <summary>
                The collection of the child frames.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IFrame.Document">
            <summary>
                The <see cref="T:DotNetBrowser.Dom.IDocument" /> that can be used to work with DOM of the frame. Can be null if the frame doesn't have
                a document.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IFrame.Html">
            <summary>
                The HTML content of the frame. Can be an empty string
                if the frame doesn't have a content or its content is empty.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IFrame.IsMain">
            <summary>
                Indicates whether the frame is a main (top-level) frame in the browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IFrame.LocalStorage">
            <summary>
                The <c>localStorage</c> instance of this frame.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IFrame.Name">
            <summary>
                The name of the frame. Can be an empty string if the frame doesn't have a name.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IFrame.Parent">
            <summary>
                The parent frame.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IFrame.SelectedHtml">
            <summary>
                The HTML representation of the selected content in the frame. Can be an empty string if there's no selection.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IFrame.SelectedText">
            <summary>
                The text representation of the selected content in the frame. Can be an empty string if there's no selection.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IFrame.SessionStorage">
            <summary>
                The <c>sessionStorage</c> instance of this frame.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.Execute(DotNetBrowser.Frames.EditorCommand)">
            <summary>
                Executes the given <paramref name="command" /> in the frame.
                Before executing the command, it's recommended to check whether it can be executed or not
                using the <see cref="M:DotNetBrowser.Frames.IFrame.IsCommandEnabled(DotNetBrowser.Frames.EditorCommand)" /> method.
            </summary>
            <param name="command">The command to execute. Cannot be null.</param>
            <returns>true if the command has been executed successfully.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.ExecuteJavaScript``1(System.String,System.Boolean)">
            <summary>
                Asynchronously executes JavaScript code using the current context and
                converts the execution result to the specified .NET type.
            </summary>
            <typeparam name="T">.NET type of the result</typeparam>
            <param name="javaScript">The JavaScript code.</param>
            <param name="userGesture">Indicates whether JavaScript is initiated by a user gesture.</param>
            <returns>The task that can be used to wait for completion and obtain the result of the JavaScript execution.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
            <exception cref="T:System.ArgumentException">
                The <paramref name="javaScript" /> is null, empty, or contains only blank
                characters.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.ExecuteJavaScript(System.String,System.Boolean)">
            <summary>
                Asynchronously executes JavaScript code using the current context.
            </summary>
            <param name="javaScript">The JavaScript code to execute.</param>
            <param name="userGesture">Indicates whether JavaScript is initiated by a user gesture.</param>
            <returns>The task that can be used to wait for completion and obtain the result of the JavaScript execution.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
            <exception cref="T:System.ArgumentException">
                The <paramref name="javaScript" /> is null, empty, or contains only blank
                characters.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.Inspect(DotNetBrowser.Geometry.Point)">
            <summary>
                Inspects the given <paramref name="location" /> in the frame and returns the result of inspection.
            </summary>
            <param name="location">A point in the frame's view. Cannot be null.</param>
            <returns>The result of inspection that contains the details about the DOM node at the given location.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
            <exception cref="T:System.ArgumentException">
                The <paramref name="location" /> is null.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.Inspect(System.Int32,System.Int32)">
            <summary>
                Inspects the given location in the frame and returns the result of inspection.
            </summary>
            <param name="x">a horizontal coordinate on the web page</param>
            <param name="y">a vertical coordinate on the web page</param>
            <returns>The result of inspection that contains the details about the DOM node at the given location.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.IsCommandEnabled(DotNetBrowser.Frames.EditorCommand)">
            <summary>
                Indicates if the command with the given <paramref name="command" /> can be executed in the frame.
                Some commands can be executed only under certain conditions.
                For example, the <see cref="M:DotNetBrowser.Frames.EditorCommand.InsertText(System.String)" /> command can be executed only if there's a focused text
                field in the frame.
            </summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the command is enabled and can be executed.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
            <exception cref="T:System.ArgumentException">
                The <paramref name="command" /> is null.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.LoadData(DotNetBrowser.Frames.LoadDataParameters)">
            <summary>
                Navigates the frame to the resource that may represent different content described by the given
                <paramref name="parameters" />.
            </summary>
            <param name="parameters">
                parameters such as text of the content to load, its text encoding, mime type, etc. Cannot be
                null.
            </param>
            <returns>
                A task that represents the asynchronous loading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the loading operation has been completed, stopped or failed.
                The task throws a <exception cref="T:System.TimeoutException" />
                if the loading operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="parameters" /> is null.</exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.LoadHtml(System.String)">
            <summary>
                Navigates the frame to the resource that represents HTML document with the given <paramref name="html" /> content.
            </summary>
            <param name="html">
                The HTML content of the resource to load. Cannot be null, empty or contain only
                blank characters.
            </param>
            <returns>
                A task that represents the asynchronous loading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the loading operation has been completed, stopped or failed.
                The task throws a <exception cref="T:System.TimeoutException" />
                if the loading operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ArgumentException">
                thrown when <paramref name="html" />is null, empty or contain only blank
                characters.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.LoadHtml(DotNetBrowser.Frames.LoadHtmlParameters)">
            <summary>
                Navigates the frame to the resource that represents HTML document described by the given
                <paramref name="parameters" />.
            </summary>
            <param name="parameters">parameters such as HTML and the base URL of the document to load. Cannot be null.</param>
            <returns>
                A task that represents the asynchronous loading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the loading operation has been completed, stopped or failed.
                The task throws a <exception cref="T:System.TimeoutException" />
                if the loading operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ArgumentNullException">thrown when <paramref name="parameters" /> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.LoadUrl(System.String)">
            <summary>
                Navigates the frame to a resource identified by the given <paramref name="url" />.
            </summary>
            <param name="url">The URL of the resource to load. Cannot be null, empty or contain only white space.</param>
            <returns>
                A task that represents the asynchronous loading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the loading operation has been completed, stopped or failed.
                The task throws a <exception cref="T:System.TimeoutException" />
                if the loading operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ArgumentException">thrown when <paramref name="url" />is null, empty or contain only white space.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.LoadUrl(System.String,System.TimeSpan)">
            <summary>
                Navigates the frame to a resource identified by the given <paramref name="url" />.
            </summary>
            <param name="url">The URL of the resource to load. Cannot be null, empty or contain only white space.</param>
            <param name="timeout">The timeout.</param>
            <returns>
                A task that represents the asynchronous loading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the loading operation has been completed, stopped or failed.
                The task throws a  <exception cref="T:System.TimeoutException" />
                if the loading operation hasn't been completed within the specified
                <paramref name="timeout" />.
            </returns>
            <exception cref="T:System.ArgumentException">thrown when <paramref name="url" />is null, empty or contain only white space.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IFrame.Print">
            <summary>
                Requests printing of the currently loaded web page in this frame.
            </summary>
            <remarks>
                <para>
                    The printing should be allowed in the <see cref="P:DotNetBrowser.Browser.IBrowser.RequestPrintHandler" />, in other case, it will be
                    canceled.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IFrame" /> object has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">
                The print operation failed. This can happen when the frame itself does not exist anymore.
            </exception>
        </member>
        <member name="T:DotNetBrowser.Frames.IWebStorage">
            <summary>
                <para>An HTML WebStorage.</para>
                <para>
                    Provides access to the session storage or local storage for a particular document on the loaded
                    web page. Allows you to add, modify, or delete the stored items.
                </para>
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.IWebStorage.Count">
            <summary>
                Gets the number of the key/value pairs in the storage.
            </summary>
            <value>The number of the key/value pairs in the storage.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IWebStorage" /> object has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Frames.WebStorageException">The <see cref="T:DotNetBrowser.Frames.IWebStorage" /> operation has failed.</exception>
        </member>
        <member name="P:DotNetBrowser.Frames.IWebStorage.Item(System.String)">
            <summary>
                Gets or sets the value associated with the given <paramref name="key" />. The setter adds the item with the
                specified <paramref name="key" /> and
                <paramref name="value" /> to the storage, or updates it if the item with the given <paramref name="key" /> already
                exists.
            </summary>
            <param name="key">The key name of the item to retrieve the value of. Can be empty or blank.</param>
            <value>The value associated with the given <paramref name="key" /></value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IWebStorage" /> object has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Frames.WebStorageException">The <see cref="T:DotNetBrowser.Frames.IWebStorage" /> operation has failed.</exception>
        </member>
        <member name="P:DotNetBrowser.Frames.IWebStorage.Keys">
            <summary>
                Gets a list of the web storage keys.
            </summary>
            <value>A readonly list of the web storage keys.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IWebStorage" /> object has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IWebStorage.Clear">
            <summary>
                Removes all the items from the storage.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IWebStorage" /> object has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Frames.WebStorageException">The <see cref="T:DotNetBrowser.Frames.IWebStorage" /> operation has failed.</exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IWebStorage.Contains(System.String)">
            <summary>
                Checks if the specified key is present in the storage.
            </summary>
            <param name="key">the key name to check. Can be empty or blank.</param>
            <returns>
                <c>true</c> if the storage contains an item with the specified <paramref name="key" />,
                otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IWebStorage" /> object has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Frames.WebStorageException">The <see cref="T:DotNetBrowser.Frames.IWebStorage" /> operation has failed.</exception>
        </member>
        <member name="M:DotNetBrowser.Frames.IWebStorage.Remove(System.String)">
            <summary>
                Removes the item with the specified <paramref name="key" /> from the storage. Does nothing if there is no
                item with the specified <paramref name="key" /> in the storage.
            </summary>
            <param name="key">the key name of the item to remove. Can be empty or blank.</param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Frames.IWebStorage" /> object has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Frames.WebStorageException">The <see cref="T:DotNetBrowser.Frames.IWebStorage" /> operation has failed.</exception>
        </member>
        <member name="T:DotNetBrowser.Frames.LoadDataParameters">
            <summary>
                The parameters of the <see cref="M:DotNetBrowser.Frames.IFrame.LoadData(DotNetBrowser.Frames.LoadDataParameters)" /> request.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.LoadDataParameters.BaseUrl">
            <summary>
                Gets or sets the URL that will be used to resolve links with a relative path in the HTML document.
                This property is used only for HTML data with the "text/html" mime type.
            </summary>
            <value>The URL that will be used to resolve links with a relative path in the HTML document.</value>
        </member>
        <member name="P:DotNetBrowser.Frames.LoadDataParameters.Data">
            <summary>
                Gets the data to load.
            </summary>
            <value>The data to load.</value>
        </member>
        <member name="P:DotNetBrowser.Frames.LoadDataParameters.MimeType">
            <summary>
                Gets or sets the data MIME type.
            </summary>
            <value>The data MIME type.</value>
        </member>
        <member name="P:DotNetBrowser.Frames.LoadDataParameters.Replace">
            <summary>
                Enables or disables replacing the current history item.
            </summary>
            <value>
                If set to <c>true</c>, the data will be loaded as a normal navigation and the current history item
                should be replaced.
            </value>
        </member>
        <member name="P:DotNetBrowser.Frames.LoadDataParameters.TextEncoding">
            <summary>
                Gets or sets the data encoding.
            </summary>
            <value>The text data encoding, e.g. "UTF-8", "ISO-8859-1", etc.</value>
        </member>
        <member name="M:DotNetBrowser.Frames.LoadDataParameters.#ctor(System.String)">
            <summary>
                Initializes a <see cref="T:DotNetBrowser.Frames.LoadDataParameters" /> instance with the specified <paramref name="data" />.
            </summary>
            <param name="data">The data to load.</param>
            <exception cref="T:System.ArgumentException">
                The <paramref name="data" /> is null, empty or contain only white
                space.
            </exception>
        </member>
        <member name="T:DotNetBrowser.Frames.LoadHtmlParameters">
            <summary>
                The parameters of the load HTML request.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Frames.LoadHtmlParameters.BaseUrl">
            <summary>
                Gets or sets the URL that will be used to resolve links with a relative path in the HTML document.
                This property is used only for HTML data with the "text/html" mime type.
            </summary>
            <value>The URL that will be used to resolve links with a relative path in the HTML document.</value>
        </member>
        <member name="P:DotNetBrowser.Frames.LoadHtmlParameters.Html">
            <summary>
                Gets the text of the HTML content to load.
            </summary>
            <value>The text of the HTML content to load.</value>
        </member>
        <member name="P:DotNetBrowser.Frames.LoadHtmlParameters.Replace">
            <summary>
                Enables or disables replacing the current history item.
            </summary>
            <value>
                If set to <c>true</c>, the data will be loaded as a normal navigation and the current history item
                should be replaced.
            </value>
        </member>
        <member name="M:DotNetBrowser.Frames.LoadHtmlParameters.#ctor(System.String)">
            <summary>
                Initializes a <see cref="T:DotNetBrowser.Frames.LoadHtmlParameters" /> instance with the specified <paramref name="html" />.
            </summary>
            <param name="html">The text of the HTML content to load.</param>
            <exception cref="T:System.ArgumentException">
                The <paramref name="html" /> is null, empty or contains only white
                space.
            </exception>
        </member>
        <member name="T:DotNetBrowser.Frames.WebStorageException">
            <summary>
                Thrown by <see cref="T:DotNetBrowser.Frames.IWebStorage" /> properties and  methods to indicate that the requested operation failed. This
                is a superclass of the exceptions that can be thrown during working with <see cref="T:DotNetBrowser.Frames.IWebStorage" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Frames.WebStorageException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Frames.WebStorageOverflowException">
            <summary>
                Thrown by <see cref="T:DotNetBrowser.Frames.IWebStorage" /> indexer if the new value size exceeds the
                available space in the storage.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Frames.WebStorageOverflowException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Frames.WebStorageSecurityException">
            <summary>
                Thrown by <see cref="T:DotNetBrowser.Frames.IWebStorage" /> methods if the access to the web storage is forbidden for the
                current document.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Frames.WebStorageSecurityException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Geometry.Point">
            <summary>
                Represents a pair of numbers that in general are used to define coordinates in the
                two-dimensional space.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Geometry.Point.Empty">
            <summary>
                An empty <c>Point</c> that has x and y values set to zero.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Geometry.Point.X">
            <summary>
                Gets the horizontal coordinate.
            </summary>
            <value>The horizontal coordinate.</value>
        </member>
        <member name="P:DotNetBrowser.Geometry.Point.Y">
            <summary>
                Gets the vertical coordinate.
            </summary>
            <value>The vertical coordinate.</value>
        </member>
        <member name="M:DotNetBrowser.Geometry.Point.#ctor(System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:DotNetBrowser.Geometry.Point" /> class with the specified <paramref name="x" /> and
                <paramref name="y" /> coordinates.
            </summary>
            <param name="x">The horizontal coordinate.</param>
            <param name="y">The vertical coordinate.</param>
        </member>
        <member name="M:DotNetBrowser.Geometry.Point.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Geometry.Point.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Geometry.Rectangle">
            <summary>
                Represents a rectangle described by the location and dimensions.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Geometry.Rectangle.IsEmpty">
            <summary>
                Indicates whether all numeric properties of this Rectangle have values of zero.
            </summary>
            <value><c>true</c> if all numeric properties of this Rectangle have values of zero.</value>
        </member>
        <member name="P:DotNetBrowser.Geometry.Rectangle.Origin">
            <summary>
                Gets the top-left corner coordinate of the rectangle.
            </summary>
            <value>The top-left corner coordinate of the rectangle.</value>
        </member>
        <member name="P:DotNetBrowser.Geometry.Rectangle.Size">
            <summary>
                Gets the rectangle dimensions.
            </summary>
            <value>The rectangle dimensions.</value>
        </member>
        <member name="M:DotNetBrowser.Geometry.Rectangle.#ctor(DotNetBrowser.Geometry.Point,DotNetBrowser.Geometry.Size)">
            <summary>
                Initializes a new instance of the <see cref="T:DotNetBrowser.Geometry.Rectangle" /> class with the specified <paramref name="origin" /> and
                <paramref name="size" />.
            </summary>
            <param name="origin">The top-left corner coordinate of the rectangle.</param>
            <param name="size">The rectangle dimensions.</param>
        </member>
        <member name="M:DotNetBrowser.Geometry.Rectangle.#ctor(System.Int32,System.Int32,System.UInt32,System.UInt32)">
            <summary>
                Initializes a new instance of the <see cref="T:DotNetBrowser.Geometry.Rectangle" /> class with the specified parameters.
            </summary>
            <param name="x">The top-left corner X coordinate of the rectangle.</param>
            <param name="y">The top-left corner Y coordinate of the rectangle.</param>
            <param name="width">The rectangle width.</param>
            <param name="height">The rectangle height.</param>
        </member>
        <member name="M:DotNetBrowser.Geometry.Rectangle.Contains(DotNetBrowser.Geometry.Point)">
            <summary>
                Checks whether the rectangle contains the specified point.
            </summary>
            <param name="point"> the <see cref="T:DotNetBrowser.Geometry.Point" /> instance to check.</param>
            <returns>true if the rectangle contains this point; false otherwise.</returns>
        </member>
        <member name="M:DotNetBrowser.Geometry.Rectangle.Contains(DotNetBrowser.Geometry.Rectangle)">
            <summary>
                Checks whether the rectangle contains the specified rectangle.
            </summary>
            <param name="other"> the <see cref="T:DotNetBrowser.Geometry.Rectangle" /> instance to check.</param>
            <returns>true if the rectangle contains the other rectangle; false otherwise.</returns>
        </member>
        <member name="M:DotNetBrowser.Geometry.Rectangle.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Geometry.Rectangle.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Geometry.Size">
            <summary>
                Represents a pair of numbers that in general are used to define dimensions in the
                two-dimensional space.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Geometry.Size.Empty">
            <summary>
                An empty <c>Size</c> that has x and y values set to zero.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Geometry.Size.Height">
            <summary>
                Gets the vertical dimension.
            </summary>
            <value>The vertical dimension.</value>
        </member>
        <member name="P:DotNetBrowser.Geometry.Size.IsEmpty">
            <summary>
                Indicates whether width and height of this Size have values of zero.
            </summary>
            <value><c>true</c> if width and height of this Size have values of zero.</value>
        </member>
        <member name="P:DotNetBrowser.Geometry.Size.Width">
            <summary>
                Gets the horizontal dimension.
            </summary>
            <value>The horizontal dimension.</value>
        </member>
        <member name="M:DotNetBrowser.Geometry.Size.#ctor(System.UInt32,System.UInt32)">
            <summary>
                Initializes a new instance of the <see cref="T:DotNetBrowser.Geometry.Size" /> class with the specified <paramref name="width" /> and
                <paramref name="height" />.
            </summary>
            <param name="width">the horizontal dimension. Cannot be negative.</param>
            <param name="height">the vertical dimension. Cannot be negative.</param>
        </member>
        <member name="M:DotNetBrowser.Geometry.Size.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Geometry.Size.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Geometry.Size.Equals(DotNetBrowser.Geometry.Size)">
            <summary>Determines whether the specified <c>Size</c> object is equal to the current object.</summary>
            <param name="other">The <c>Size</c> object to compare with the current object.</param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="T:DotNetBrowser.Handlers.Handler`2">
            <summary>
                The default implementation of the <see cref="T:DotNetBrowser.Handlers.IHandler`2" /> interface.
            </summary>
            <typeparam name="TParameters">The handler parameters type.</typeparam>
            <typeparam name="TResponse">The response type.</typeparam>
        </member>
        <member name="M:DotNetBrowser.Handlers.Handler`2.#ctor(System.Func{`0,`1})">
            <summary>
                Initializes an instance of the <see cref="T:DotNetBrowser.Handlers.Handler`2" /> class.
            </summary>
            <param name="func">The function that must be executed when the <see cref="M:DotNetBrowser.Handlers.Handler`2.Handle(`0)" /> method is called.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="func" /> is null.</exception>
        </member>
        <member name="M:DotNetBrowser.Handlers.Handler`2.Handle(`0)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Handlers.Handler`2.op_Implicit(System.Func{`0,`1})~DotNetBrowser.Handlers.Handler{`0,`1}">
            <summary>
                The cast operator that can be used to cast <see cref="T:System.Func`2" /> to <see cref="T:DotNetBrowser.Handlers.Handler`2" />
            </summary>
            <param name="func">The <see cref="T:System.Func`2" /> to cast from.</param>
            <returns> The corresponding <see cref="T:DotNetBrowser.Handlers.Handler`2" /> instance. </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="func" /> is null.</exception>
        </member>
        <member name="T:DotNetBrowser.Handlers.AsyncHandler`2">
            <summary>
                The default implementation of the <see cref="T:DotNetBrowser.Handlers.IHandler`2" /> interface.
            </summary>
            <typeparam name="TParameters">The handler parameters type.</typeparam>
            <typeparam name="TResponse">The result type.</typeparam>
        </member>
        <member name="M:DotNetBrowser.Handlers.AsyncHandler`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}})">
            <summary>
                Initializes an instance of the <see cref="T:DotNetBrowser.Handlers.AsyncHandler`2" /> class.
            </summary>
            <param name="func">The function that must be executed when the <see cref="M:DotNetBrowser.Handlers.AsyncHandler`2.Handle(`0)" /> method is called.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="func" /> is null.</exception>
        </member>
        <member name="M:DotNetBrowser.Handlers.AsyncHandler`2.Handle(`0)">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Handlers.Handler`1">
            <summary>
                The default implementation of the <see cref="T:DotNetBrowser.Handlers.IHandler`1" /> interface.
            </summary>
            <typeparam name="TParameters">The handler parameters type.</typeparam>
        </member>
        <member name="M:DotNetBrowser.Handlers.Handler`1.#ctor(System.Action{`0})">
            <summary>
                Initializes an instance of the <see cref="T:DotNetBrowser.Handlers.Handler`1" /> class.
            </summary>
            <param name="func">The function that must be executed when the <see cref="M:DotNetBrowser.Handlers.Handler`1.Handle(`0)" /> method is called.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="func" /> is null.</exception>
        </member>
        <member name="M:DotNetBrowser.Handlers.Handler`1.Handle(`0)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Handlers.Handler`1.op_Implicit(System.Action{`0})~DotNetBrowser.Handlers.Handler{`0}">
            <summary>
                The cast operator that can be used to cast <see cref="T:System.Action`1" /> to <see cref="T:DotNetBrowser.Handlers.Handler`1" />
            </summary>
            <param name="value">The <see cref="T:System.Action`1" /> to cast from.</param>
            <returns> The corresponding <see cref="T:DotNetBrowser.Handlers.Handler`1" /> instance. </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="value" /> is null.</exception>
        </member>
        <member name="T:DotNetBrowser.Handlers.IHandler`2">
            <summary>
                The common interface for all handlers.
            </summary>
            <typeparam name="TParameters">The handler parameters type.</typeparam>
            <typeparam name="TResponse">The result type.</typeparam>
        </member>
        <member name="M:DotNetBrowser.Handlers.IHandler`2.Handle(`0)">
            <summary>
                This method is called when the Chromium callback needs a response that may be
                determined based on the provided parameters.
            </summary>
            <param name="parameters">The handler parameters.</param>
            <returns>
                An object that represents the response that should be
                determined based on the provided parameters.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Handlers.IHandler`1">
            <summary>
                The common interface for all handlers that must be executed synchronously, but do not have to return a value.
            </summary>
            <typeparam name="TParameters">The handler parameters type.</typeparam>
        </member>
        <member name="M:DotNetBrowser.Handlers.IHandler`1.Handle(`0)">
            <summary>
                This method is called when the Chromium callback should be handled synchronously.
                In a number of cases, the Chromium engine will be blocked until this method returns.
            </summary>
            <param name="parameters">The handler parameters.</param>
        </member>
        <member name="T:DotNetBrowser.IAutoDisposable">
            <summary>
                Represents the object which can be disposed by itself (without the explicit Dispose method call).
            </summary>
        </member>
        <member name="P:DotNetBrowser.IAutoDisposable.IsDisposed">
            <summary>
                Indicates if the object is already disposed.
            </summary>
            <value>
                <c>true</c> if the object is already disposed and no longer access to the members allowed.
                The access attempt may cause <see cref="T:System.ObjectDisposedException" /> or an unexpected behaviour.
            </value>
        </member>
        <member name="E:DotNetBrowser.IAutoDisposable.Disposed">
            <summary>
                Occurs when the object has been disposed.
            </summary>
        </member>
        <member name="T:DotNetBrowser.IAutoDisposable`1">
            <inheritdoc />
            <summary>
                Represents the object which can be disposed by itself (without the explicit Dispose method call).
            </summary>
            <typeparam name="TArgs">
                The type of the event arguments for the <see cref="E:DotNetBrowser.IAutoDisposable`1.Disposed" />
                event.
            </typeparam>
        </member>
        <member name="E:DotNetBrowser.IAutoDisposable`1.Disposed">
            <summary>
                Occurs when the object has been disposed.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.DragDropEventArgs">
            <summary>
                A common class that is extended by all drag &amp; drop events.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DragDropEventArgs.Location">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DragDropEventArgs.LocationOnScreen">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.DragEndedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.DragAndDrop.Events.IDragEndedEventArgs" />
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DragEndedEventArgs.Operation">
            <summary>
                The drag&amp;drop operation that has ended.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.DragEnteredEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.DragAndDrop.Events.IDragEnteredEventArgs" />
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DragEnteredEventArgs.AllowedOperations">
            <summary>
                The allowed drag&amp;drop operations.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DragEnteredEventArgs.DropData">
            <summary>
                The drag&amp;drop data accociated with this event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.DraggedOverEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.DragAndDrop.Events.IDraggedOverEventArgs" />
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DraggedOverEventArgs.AllowedOperations">
            <summary>
                The allowed drag&amp;drop operations.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.DragLeavedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.DragAndDrop.Events.IDragLeavedEventArgs" />
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.DragOperation">
            <summary>
                The possible drag operations.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.DragAndDrop.Events.DragOperation.Unspecified">
            <summary>
                Reserved value.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.DragAndDrop.Events.DragOperation.None">
            <summary>
                No operation.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.DragAndDrop.Events.DragOperation.Copy">
            <summary>
                Copy operation.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.DragAndDrop.Events.DragOperation.Link">
            <summary>
                Link operation.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.DragAndDrop.Events.DragOperation.Generic">
            <summary>
                Generic drag operation.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.DragAndDrop.Events.DragOperation.Private">
            <summary>
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.DragAndDrop.Events.DragOperation.Move">
            <summary>
                Move operation.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.DragAndDrop.Events.DragOperation.Delete">
            <summary>
                Delete operation.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.DropData">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.Files">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.Html">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.HtmlBaseUrl">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.Text">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.Url">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.UrlTitle">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.DropData.Builder">
            <summary>
                A builder of <see cref="T:DotNetBrowser.Input.DragAndDrop.Events.DropData" />
            </summary>
            <remarks>
                <para>
                    Each of the property setters modifies the state of the builder.
                    Builders are not thread-safe and should not be used concurrently from
                    multiple threads without external synchronization.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.Builder.Files">
            <summary>
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.Builder.Html">
            <summary>
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.Builder.HtmlBaseUrl">
            <summary>
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.Builder.Text">
            <summary>
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.Builder.Url">
            <summary>
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DropData.Builder.UrlTitle">
            <summary>
            </summary>
        </member>
        <member name="M:DotNetBrowser.Input.DragAndDrop.Events.DropData.Builder.Build">
            <summary>
                Creates and returns a new instance of <see cref="T:DotNetBrowser.Input.DragAndDrop.Events.DropData" /> from the current state of this builder.
            </summary>
            <returns>a new instance of <see cref="T:DotNetBrowser.Input.DragAndDrop.Events.DropData" /> </returns>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.DroppedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.DragAndDrop.Events.IDroppedEventArgs" />
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.DroppedEventArgs.DropData">
            <summary>
                The drag&amp;drop data accociated with this event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.IDragDropEventArgs">
            <summary>
                A common interface that is extended by all drag &amp; drop events.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDragDropEventArgs.Location">
            <summary>
                The mouse position relative to the bounds of the browser instance.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDragDropEventArgs.LocationOnScreen">
            <summary>
                The mouse position relative to the bounds of the screen.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.IDragEndedEventArgs">
            <summary>
                The drag end event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDragEndedEventArgs.Operation">
            <summary>
                The drag&amp;drop operation that has ended.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.IDragEnteredEventArgs">
            <summary>
                The drag enter event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDragEnteredEventArgs.AllowedOperations">
            <summary>
                The allowed drag&amp;drop operations.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDragEnteredEventArgs.DropData">
            <summary>
                The drag&amp;drop data accociated with this event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.IDraggedOverEventArgs">
            <summary>
                The drag over event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDraggedOverEventArgs.AllowedOperations">
            <summary>
                The allowed drag&amp;drop operations.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.IDragLeavedEventArgs">
            <summary>
                The drag leave event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.IDropData">
            <summary>
                Represents the dragged/dropped data.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDropData.Files">
            <summary>
                The dragged/dropped files.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDropData.Html">
            <summary>
                The dragged/dropped HTML.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDropData.HtmlBaseUrl">
            <summary>
                The base URL of the dragged/dropped HTML.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDropData.Text">
            <summary>
                The dragged/dropped text.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDropData.Url">
            <summary>
                The dragged/dropped URL.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDropData.UrlTitle">
            <summary>
                The title of the dragged/dropped URL.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Events.IDroppedEventArgs">
            <summary>
                The drop event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Events.IDroppedEventArgs.DropData">
            <summary>
                The drag&amp;drop data accociated with this event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Handlers.DragAndDropParameters">
            <summary>
                The base class for all <see cref="T:DotNetBrowser.Input.DragAndDrop.IDragAndDrop" /> handlers parameters.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Handlers.DragAndDropParameters.DragAndDrop">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Input.DragAndDrop.IDragAndDrop" /> instance the handler is associated with.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Input.DragAndDrop.IDragAndDrop" /> instance the handler is associated with.</value>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Handlers.DragAndDropParameters.Event">
            <summary>
                Gets the drag and drop event.
            </summary>
            <value>The drag and drop event.</value>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Handlers.DragEvent">
            <summary>
                Represents drag and drop event and provides access to the event data.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Handlers.DragEvent.DataObject">
            <summary>
                Gets the Windows-specific representation of the drop data.
            </summary>
            <value>The IDataObject instance or null if the Windows-specific representation is not available.</value>
            <remarks>
                This functionality is available for .NET Framework on Windows only when the "--enable-com-in-drag-drop" Chromium
                switch is specified.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Handlers.DragEvent.DropData">
            <summary>
                Gets the general representation  of the drop data.
            </summary>
            <value>The drop data.</value>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Handlers.DragEvent.Location">
            <summary>
                Gets the location of the mouse cursor in the browser's coordinate system at the time the
                event occurred.
            </summary>
            <value>The location of the mouse cursor.</value>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.Handlers.DragEvent.ScreenLocation">
            <summary>
                Gets the location of the mouse cursor in the screen's coordinate system at the time the
                event occurred.
            </summary>
            <value>The location of the mouse cursor.</value>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Handlers.DropParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Input.DragAndDrop.IDragAndDrop.DropHandler" />.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.Handlers.EnterDragParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Input.DragAndDrop.IDragAndDrop.EnterDragHandler" />.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.IDragAndDrop">
            <summary>
                The drag and drop functionality of the browser.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.IDragAndDrop.DropHandler">
            <summary>
                Gets or sets a handler that is used when the input system reports an underlying drop event with the browser as the
                drag target.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Input.DragAndDrop.IDragAndDrop" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    <b>Important:</b> the engine will be blocked until the <c>Handle()</c> method returns.
                    It is not allowed to invoke any engine methods in the scope of this handler implementation.
                </para>
                <para>
                    The parameters are valid only in the scope of the <c>Handle()</c> method and become invalid when this
                    method returns.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.IDragAndDrop.Enabled">
            <summary>
                Enables or disables the drag and drop functionality in the browser.
            </summary>
            <value><c>true</c> if loading images automatically is allowed, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Input.DragAndDrop.IDragAndDrop" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.IDragAndDrop.EnterDragHandler">
            <summary>
                Gets or sets a handler that is used when the input system reports an underlying drag enter event with the browser
                as the
                drag target.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Input.DragAndDrop.IDragAndDrop" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
            <remarks>
                <para>
                    <b>Important:</b> the engine will be blocked until the <c>Handle()</c> method returns.
                    It is not allowed to invoke any engine methods in the scope of this handler implementation.
                </para>
                <para>
                    The parameters are valid only in the scope of the <c>Handle()</c> method and become invalid when this
                    method returns.
                </para>
            </remarks>
        </member>
        <member name="T:DotNetBrowser.Input.DragAndDrop.IDragDrop">
            <summary>
                A service that can be used for working with drag and drop events.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.IDragDrop.DragEnded">
            <summary>
                The drag end event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.IDragDrop.DragEntered">
            <summary>
                The drag entered event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.IDragDrop.DraggedOver">
            <summary>
                The drag over event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.IDragDrop.DragLeaved">
            <summary>
                The drag leave event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.DragAndDrop.IDragDrop.Dropped">
            <summary>
                The drop event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.IInputEvent`2">
            <summary>
                An input event. It is possible to raise this input event and dispatch it to the currently loaded web page.
            </summary>
            <typeparam name="TIInputEventArgs">The input event arguments interface.</typeparam>
            <typeparam name="TInputEventArgs">The input event arguments.</typeparam>
        </member>
        <member name="M:DotNetBrowser.Input.IInputEvent`2.Raise(`1)">
            <summary>
                Raises and dispatches the event to the currently loaded web page. It does nothing if the
                browser hasn't loaded any web page.
            </summary>
            <param name="args">The event arguments.</param>
            <exception cref="T:System.ObjectDisposedException">The corresponding browser object has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Input.IInterceptableInputEvent`2">
            <summary>
                An interceptable input event. It is possible to intercept and suppress this input event before it is actually
                processed by the browser.
            </summary>
            <typeparam name="TIInputEventArgs">The input event arguments interface.</typeparam>
            <typeparam name="TInputEventArgs">The input event arguments.</typeparam>
        </member>
        <member name="P:DotNetBrowser.Input.IInterceptableInputEvent`2.Handler">
            <summary>
                Gets or sets the event handler that can be used to intercept and/or suppress this input event.
            </summary>
            <value>The handler that will be used to intercept and/or suppress this input event.</value>
        </member>
        <member name="T:DotNetBrowser.Input.InputEventResponse">
            <summary>
                The response to the input event handlers.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.InputEventResponse.Suppress">
            <summary>
                Suppress this event.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.InputEventResponse.Proceed">
            <summary>
                Allow the browser to process this event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.IKeyCharEventArgs">
            <summary>
                The event arguments for key events which provide a character.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.IKeyCharEventArgs.KeyChar">
            <summary>
                Gets the character associated with this event.
            </summary>
            <value>The character associated with this event.</value>
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.IKeyEventArgs">
            <summary>
                The base interface of all event arguments for the key events.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.IKeyEventArgs.Modifiers">
            <summary>
                Gets the key modifiers.
            </summary>
            <value>The key modifiers.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.IKeyEventArgs.VirtualKey">
            <summary>
                Gets the virtual key code.
            </summary>
            <value>The virtual key code.</value>
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.IKeyModifiers">
            <summary>
                The keyboard modifiers applied.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.IKeyModifiers.AltDown">
            <summary>
                Indicates whether the Alt key is pressed.
            </summary>
            <value><c>true</c> if the modifier key is pressed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.IKeyModifiers.AltGraphDown">
            <summary>
                Indicates whether the Alt Graph/Right Alt key is pressed.
            </summary>
            <value><c>true</c> if the modifier key is pressed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.IKeyModifiers.ControlDown">
            <summary>
                Indicates whether the Ctrl key is pressed.
            </summary>
            <value><c>true</c> if the modifier key is pressed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.IKeyModifiers.MetaDown">
            <summary>
                Indicates whether the Meta key is pressed.
            </summary>
            <value><c>true</c> if the modifier key is pressed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.IKeyModifiers.ShiftDown">
            <summary>
                Indicates whether the Shift key is pressed.
            </summary>
            <value><c>true</c> if the modifier key is pressed, <c>false</c> otherwise.</value>
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.IKeyPressedEventArgs">
            <summary>
                The event arguments for the <see cref="P:DotNetBrowser.Input.Keyboard.IKeyboard.KeyPressed" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.IKeyReleasedEventArgs">
            <summary>
                The event arguments for the <see cref="P:DotNetBrowser.Input.Keyboard.IKeyboard.KeyReleased" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.IKeyTypedEventArgs">
            <summary>
                The event arguments for the <see cref="P:DotNetBrowser.Input.Keyboard.IKeyboard.KeyTyped" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.KeyCharEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Keyboard.Events.IKeyCharEventArgs" />
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.KeyCharEventArgs.KeyChar">
            <summary>
                Gets or sets the character associated with this event.
            </summary>
            <value>The character associated with this event.</value>
        </member>
        <member name="M:DotNetBrowser.Input.Keyboard.Events.KeyCharEventArgs.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Input.Keyboard.Events.KeyCharEventArgs.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Input.Keyboard.Events.KeyCharEventArgs.Equals(DotNetBrowser.Input.Keyboard.Events.KeyCharEventArgs)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="other">The object to compare with the current object. </param>
            <returns>
                <see langword="true" /> if the specified object  is equal to the current object; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.KeyCode">
            <summary>
                The virtual key codes.
            </summary>
            <seealso href="https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes" />
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Unknown">
            <summary>Reserved value.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.LButton">
            <summary>
                The left mouse button (VK_LBUTTON).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.RButton">
            <summary>
                The right mouse button (VK_RBUTTON).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Cancel">
            <summary>
                Control-break processing (VK_CANCEL).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.MButton">
            <summary>
                The middle mouse button (three-button mouse)
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.XButton1">
            <summary>
                The X1 mouse button (VK_XBUTTON1).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.XButton2">
            <summary>
                The X2 mouse button(VK_XBUTTON2).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Back">
            <summary>
                The BACKSPACE key (VK_BACK).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Tab">
            <summary>
                The TAB key (VK_TAB).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Clear">
            <summary>
                The CLEAR key (VK_CLEAR).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Return">
            <summary>
                The ENTER key (VK_RETURN).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Shift">
            <summary>
                The SHIFT key (VK_SHIFT).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Control">
            <summary>
                The CTRL key (VK_CONTROL).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Menu">
            <summary>
                The ALT key (VK_MENU).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Pause">
            <summary>
                The PAUSE key (VK_PAUSE).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Capital">
            <summary>
                The CAPS LOCK key (VK_CAPITAL).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Kana">
            <summary>
                IME Kana mode (VK_KANA).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Hanguel">
            <summary>
                IME Hanguel mode (maintained for compatibility; use <see cref="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Hangul" />).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Hangul">
            <summary>
                IME Hangul mode.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Junja">
            <summary>IME Junja mode.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Final">
            <summary>IME final mode.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Hanja">
            <summary>IME Hanja mode.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Kanji">
            <summary>IME Kanji mode.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Escape">
            <summary>ESC key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Convert">
            <summary>IME convert.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.NonConvert">
            <summary>IME nonconvert.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Accept">
            <summary>IME accept.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.ModeChange">
            <summary>IME mode change request.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Space">
            <summary>The spacebar (VK_SPACE).</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Prior">
            <summary>The PAGE UP key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Next">
            <summary>The PAGE DOWN key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.End">
            <summary>The END key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Home">
            <summary>The HOME key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Left">
            <summary>The LEFT ARROW key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Up">
            <summary>The UP ARROW key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Right">
            <summary>The RIGHT ARROW key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Down">
            <summary>The DOWN ARROW key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Select">
            <summary>The SELECT key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Print">
            <summary>The PRINT key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Execute">
            <summary>The EXECUTE key</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Snapshot">
            <summary>
                The PRINT SCREEN / SysRq key (VK_SNAPSHOT).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Insert">
            <summary>
                The INS key (VK_INSERT).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Delete">
            <summary>
                The DEL key (VK_DELETE).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Help">
            <summary>
                The HELP key (VK_HELP).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Vk0">
            <summary>
                The '0' key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Vk1">
            <summary>The '1' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Vk2">
            <summary>The '2' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Vk3">
            <summary>The '3' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Vk4">
            <summary>The '4' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Vk5">
            <summary>The '5' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Vk6">
            <summary>The '6' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Vk7">
            <summary>The '7' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Vk8">
            <summary>The '8' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Vk9">
            <summary>The '9' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkA">
            <summary>The 'A' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkB">
            <summary>The 'B' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkC">
            <summary>The 'C' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkD">
            <summary>The 'D' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkE">
            <summary>The 'E' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkF">
            <summary>The 'F' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkG">
            <summary>The 'G' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkH">
            <summary>The 'H' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkI">
            <summary>The 'I' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkJ">
            <summary>The 'J' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkK">
            <summary>The 'K' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkL">
            <summary>The 'L' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkM">
            <summary>The 'M' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkN">
            <summary>The 'N' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkO">
            <summary>The 'O' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkP">
            <summary>The 'P' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkQ">
            <summary>The 'Q' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkR">
            <summary>The 'R' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkS">
            <summary>The 'S' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkT">
            <summary>The 'T' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkU">
            <summary>The 'U' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkV">
            <summary>The 'V' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkW">
            <summary>The 'W' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkX">
            <summary>The 'X' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkY">
            <summary>The 'Y' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VkZ">
            <summary>The 'Z' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.LWin">
            <summary>Left Windows key (Natural keyboard).</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.RWin">
            <summary>Right Windows key (Natural keyboard).</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.LCmd">
            <summary>The Command key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.RCmd">
            <summary>The Right Command key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Apps">
            <summary>Applications key (Natural keyboard).</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Sleep">
            <summary>Computer Sleep key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Numpad0">
            <summary>The numeric keypad '0' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Numpad1">
            <summary>The numeric keypad '1' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Numpad2">
            <summary>The numeric keypad '2' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Numpad3">
            <summary>The numeric keypad '3' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Numpad4">
            <summary>The numeric keypad '4' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Numpad5">
            <summary>The numeric keypad '5' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Numpad6">
            <summary>The numeric keypad '6' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Numpad7">
            <summary>The numeric keypad '7' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Numpad8">
            <summary>The numeric keypad '8' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Numpad9">
            <summary>The numeric keypad '9' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Multiply">
            <summary>The multiply key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Add">
            <summary>The add key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Separator">
            <summary>The separator key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Subtract">
            <summary>The subtract key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Decimal">
            <summary>The decimal key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Divide">
            <summary>The divide key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F1">
            <summary>The 'F1' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F2">
            <summary>The 'F2' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F3">
            <summary>The 'F3' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F4">
            <summary>The 'F4' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F5">
            <summary>The 'F5' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F6">
            <summary>The 'F6' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F7">
            <summary>The 'F7' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F8">
            <summary>The 'F8' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F9">
            <summary>The 'F9' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F10">
            <summary>The 'F10' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F11">
            <summary>The 'F11' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F12">
            <summary>The 'F1' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F13">
            <summary>The 'F1' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F14">
            <summary>The 'F14' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F15">
            <summary>The 'F15' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F16">
            <summary>The 'F16' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F17">
            <summary>The 'F17' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F18">
            <summary>The 'F18' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F19">
            <summary>The 'F19' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F20">
            <summary>The 'F20' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F21">
            <summary>The 'F21' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F22">
            <summary>The 'F22' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F23">
            <summary>The 'F23' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.F24">
            <summary>The 'F24' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Numlock">
            <summary>The NUM LOCK key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Scroll">
            <summary>The SCROLL LOCK key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.LShift">
            <summary>The Left SHIFT key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.RShift">
            <summary>The Right SHIFT key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.LControl">
            <summary>The Left CONTROL key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.RControl">
            <summary>The Right CONTROL key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.LMenu">
            <summary>The Left MENU  key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.RMenu">
            <summary>The Right MENU key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Command">
            <summary>The Command key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.BrowserBack">
            <summary>The Browser Back  key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.BrowserForward">
            <summary>The Browser Forward key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.BrowserRefresh">
            <summary>The Browser Refresh key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.BrowserStop">
            <summary>The Browser Stop key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.BrowserSearch">
            <summary>The Browser Search key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.BrowserFavorites">
            <summary>The Browser Favorites key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.BrowserHome">
            <summary>The Browser Start and Home  key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VolumeMute">
            <summary>The Volume Mute key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VolumeDown">
            <summary>The Volume Down key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.VolumeUp">
            <summary>The Volume Up key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.MediaNextTrack">
            <summary>The Next Track key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.MediaPrevTrack">
            <summary>The Previous Track key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.MediaStop">
            <summary>The Stop Media key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.MediaPlayPause">
            <summary>The Play/Pause Media key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.LaunchMail">
            <summary>The Start Mail key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.LaunchMediaSelect">
            <summary>The Select Media key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.LaunchApp1">
            <summary>The Start Application 1 key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.LaunchApp2">
            <summary>The Start Application 2 key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.OemPlus">
            <summary>For any country/region, the '+' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.OemComma">
            <summary>For any country/region, the ',' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.OemMinus">
            <summary>For any country/region, the '-' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.OemPeriod">
            <summary>For any country/region, the '.' key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Oem1">
            <summary>
                Used for miscellaneous characters; it can vary by keyboard.
                For the US standard keyboard, the ';:' key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Oem2">
            <summary>
                Used for miscellaneous characters; it can vary by keyboard.
                For the US standard keyboard, the '[{' key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Oem3">
            <summary>
                Used for miscellaneous characters; it can vary by keyboard.
                For the US standard keyboard, the '[{' key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Oem4">
            <summary>
                Used for miscellaneous characters; it can vary by keyboard.
                For the US standard keyboard, the '[{' key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Oem5">
            <summary>
                Used for miscellaneous characters; it can vary by keyboard.
                For the US standard keyboard, the '\|' key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Oem6">
            <summary>
                Used for miscellaneous characters; it can vary by keyboard.
                For the US standard keyboard, the ']}' key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Oem7">
            <summary>
                Used for miscellaneous characters; it can vary by keyboard.
                For the US standard keyboard, the 'single-quote/double-quote' key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Oem8">
            <summary>Used for miscellaneous characters; it can vary by keyboard.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Oem102">
            <summary>Either the angle bracket key or the backslash key on the RT 102-key keyboard.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Processkey">
            <summary>The IME PROCESS key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Packet">
            <summary>
                Used to pass Unicode characters as if they were keystrokes.
                The VK_PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Attn">
            <summary>The Attn key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Crsel">
            <summary>The CrSel key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Exsel">
            <summary>The ExSel key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Ereof">
            <summary>The Erase EOF key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Play">
            <summary>The Play key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Zoom">
            <summary>The Zoom key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.NoName">
            <summary>Reserved.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.Pa1">
            <summary>The PA1 key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.OemClear">
            <summary>The Clear key.</summary>
        </member>
        <member name="F:DotNetBrowser.Input.Keyboard.Events.KeyCode.DbeAlphanumeric">
            <summary>The DBE_ALPHANUMERIC key.</summary>
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.KeyEventArgs">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.KeyEventArgs.Modifiers">
            <summary>
                Gets or sets the key modifiers.
            </summary>
            <value>The key modifiers.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.KeyEventArgs.VirtualKey">
            <summary>
                Gets or sets the virtual key code.
            </summary>
            <value>The virtual key code.</value>
        </member>
        <member name="M:DotNetBrowser.Input.Keyboard.Events.KeyEventArgs.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Input.Keyboard.Events.KeyEventArgs.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Input.Keyboard.Events.KeyEventArgs.Equals(DotNetBrowser.Input.Keyboard.Events.KeyEventArgs)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="other">The object to compare with the current object. </param>
            <returns>
                <see langword="true" /> if the specified object  is equal to the current object; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.KeyModifiers">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.KeyModifiers.AltDown">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.KeyModifiers.AltGraphDown">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.KeyModifiers.ControlDown">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.KeyModifiers.MetaDown">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.Events.KeyModifiers.ShiftDown">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Input.Keyboard.Events.KeyModifiers.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Input.Keyboard.Events.KeyModifiers.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.KeyPressedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Keyboard.Events.IKeyPressedEventArgs" />
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.KeyReleasedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Keyboard.Events.IKeyReleasedEventArgs" />
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.Events.KeyTypedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Keyboard.Events.IKeyTypedEventArgs" />
        </member>
        <member name="T:DotNetBrowser.Input.Keyboard.IKeyboard">
            <summary>
                A service that can be used for keyboard input simulation and handling.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.IKeyboard.KeyPressed">
            <summary>
                Occurs when a key is pressed for the browser. This corresponds to <c>KeyDown</c> event of WPF and WinForms
                controls.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> object has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.IKeyboard.KeyReleased">
            <summary>
                Occurs when a key is released for the browser. This corresponds to <c>KeyUp</c> event of WPF and WinForms controls.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> object has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Input.Keyboard.IKeyboard.KeyTyped">
            <summary>
                Occurs when a control code, character, space, enter or backspace key is pressed for the browser.
                This corresponds to <c>KeyPress</c> event of WinForms controls.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> object has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.IMouseButtonEventArgs">
            <summary>
                Event arguments for the <see cref="T:DotNetBrowser.Input.Mouse.IMouse" /> events associated with a mouse button.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.IMouseButtonEventArgs.Button">
            <summary>
                Gets the mouse button this event is related to.
            </summary>
            <value>The mouse button this event is related to.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.IMouseButtonEventArgs.ClickCount">
            <summary>
                Gets the count of consecutive clicks that happened in a short amount of time.
            </summary>
            <value>The count of consecutive clicks that happened in a short amount of time.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.IMouseButtonEventArgs.KeyModifiers">
            <summary>
                Gets the keyboard modifiers.
            </summary>
            <value>The keyboard modifiers applied.</value>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.IMouseDraggedEventArgs">
            <summary>
                The event arguments for the <see cref="P:DotNetBrowser.Input.Mouse.IMouse.Dragged" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.IMouseDraggedEventArgs.Button">
            <summary>
                Gets the button that is pressed during the move.
            </summary>
            <value>The button that is pressed during the move.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.IMouseDraggedEventArgs.Modifiers">
            <summary>
                Gets the keyboard modifiers.
            </summary>
            <value>The keyboard modifiers applied.</value>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.IMouseEnteredEventArgs">
            <summary>
                The event arguments for the <see cref="P:DotNetBrowser.Input.Mouse.IMouse.Entered" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.IMouseEventArgs">
            <summary>
                The base interface for all <see cref="T:DotNetBrowser.Input.Mouse.IMouse" /> event arguments.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.IMouseEventArgs.Location">
            <summary>
                Gets the mouse position relative to the bounds of the browser instance.
            </summary>
            <value>The mouse position relative to the bounds of the browser instance.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.IMouseEventArgs.LocationOnScreen">
            <summary>
                Gets the mouse position relative to the bounds of the screen.
            </summary>
            <value>The mouse position relative to the bounds of the screen.</value>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.IMouseExitedEventArgs">
            <summary>
                The event arguments for the <see cref="P:DotNetBrowser.Input.Mouse.IMouse.Exited" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.IMouseMovedEventArgs">
            <summary>
                The event arguments for the <see cref="P:DotNetBrowser.Input.Mouse.IMouse.Moved" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.IMousePressedEventArgs">
            <summary>
                The event arguments for the <see cref="P:DotNetBrowser.Input.Mouse.IMouse.Pressed" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.IMouseReleasedEventArgs">
            <summary>
                The event arguments for the <see cref="P:DotNetBrowser.Input.Mouse.IMouse.Released" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.IMouseWheelMovedEventArgs">
            <summary>
                The event arguments for the <see cref="P:DotNetBrowser.Input.Mouse.IMouse.WheelMoved" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.IMouseWheelMovedEventArgs.DeltaX">
            <summary>
                The amount of units to scroll horizontally.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.IMouseWheelMovedEventArgs.DeltaY">
            <summary>
                The amount of units to scroll vertically.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.IMouseWheelMovedEventArgs.Modifiers">
            <summary>
                The keyboard modifiers applied.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.IMouseWheelMovedEventArgs.ScrollType">
            <summary>
                The scroll type of the event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.MouseButton">
            <summary>
                The mouse buttons.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Mouse.Events.MouseButton.None">
            <summary>
                No button.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Mouse.Events.MouseButton.Left">
            <summary>
                Left (primary) button.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Mouse.Events.MouseButton.Middle">
            <summary>
                Middle button.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Mouse.Events.MouseButton.Right">
            <summary>
                Right (secondary) button.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.MouseButtonEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Mouse.Events.IMouseButtonEventArgs" />
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.MouseButtonEventArgs.Button">
            <summary>
                Gets or sets the mouse button this event is related to.
            </summary>
            <value>The mouse button this event is related to.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.MouseButtonEventArgs.ClickCount">
            <summary>
                Gets or sets the count of consecutive clicks that happened in a short amount of time.
            </summary>
            <value>The count of consecutive clicks that happened in a short amount of time.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.MouseButtonEventArgs.KeyModifiers">
            <summary>
                Gets or sets the keyboard modifiers.
            </summary>
            <value>The keyboard modifiers applied.</value>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.MouseDraggedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Mouse.Events.IMouseDraggedEventArgs" />
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.MouseDraggedEventArgs.Button">
            <summary>
                Gets or sets the button that is pressed during the move.
            </summary>
            <value>The button that is pressed during the move.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.MouseDraggedEventArgs.Modifiers">
            <summary>
                Gets or sets the keyboard modifiers.
            </summary>
            <value>The keyboard modifiers applied.</value>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.MouseEnteredEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Mouse.Events.IMouseEnteredEventArgs" />
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.MouseEventArgs">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.MouseEventArgs.Location">
            <summary>
                Gets or sets the mouse position relative to the bounds of the browser instance.
            </summary>
            <value>The mouse position relative to the bounds of the browser instance.</value>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.MouseEventArgs.LocationOnScreen">
            <summary>
                Gets or sets the mouse position relative to the bounds of the screen.
            </summary>
            <value>The mouse position relative to the bounds of the screen.</value>
        </member>
        <member name="M:DotNetBrowser.Input.Mouse.Events.MouseEventArgs.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Input.Mouse.Events.MouseEventArgs.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Input.Mouse.Events.MouseEventArgs.Equals(DotNetBrowser.Input.Mouse.Events.MouseEventArgs)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="other">The object to compare with the current object. </param>
            <returns>
                <see langword="true" /> if the specified object  is equal to the current object; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.MouseExitedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Mouse.Events.IMouseExitedEventArgs" />
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.MouseMovedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Mouse.Events.IMouseMovedEventArgs" />
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.MousePressedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Mouse.Events.IMousePressedEventArgs" />
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.MouseReleasedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Mouse.Events.IMouseReleasedEventArgs" />
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.MouseScrollType">
            <summary>
                Scroll type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Mouse.Events.MouseScrollType.UnitScroll">
            <summary>
                Defines the scroll by units.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Input.Mouse.Events.MouseScrollType.BlockScroll">
            <summary>
                Defines the scroll by page (block).
            </summary>
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.Events.MouseWheelMovedEventArgs">
            <inheritdoc cref="T:DotNetBrowser.Input.Mouse.Events.IMouseWheelMovedEventArgs" />
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.MouseWheelMovedEventArgs.DeltaX">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.MouseWheelMovedEventArgs.DeltaY">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.MouseWheelMovedEventArgs.Modifiers">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.Events.MouseWheelMovedEventArgs.ScrollType">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Input.Mouse.Events.MouseWheelMovedEventArgs.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Input.Mouse.Events.MouseWheelMovedEventArgs.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Input.Mouse.IMouse">
            <summary>
                A service that can be used for mouse input simulation and handling.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.IMouse.Dragged">
            <summary>
                Occurs when the mouse is dragged over the web page.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> object has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.IMouse.Entered">
            <summary>
                Occurs when the mouse has entered the web page.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> object has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.IMouse.Exited">
            <summary>
                Occurs when the mouse has exited the web page.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> object has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.IMouse.Moved">
            <summary>
                Occurs when the mouse has moved over the web page.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> object has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.IMouse.Pressed">
            <summary>
                Occurs when the mouse button has been pressed on the web page.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> object has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.IMouse.Released">
            <summary>
                Occurs when the mouse button has been released on the web page.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> object has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Input.Mouse.IMouse.WheelMoved">
            <summary>
                Occurs when the mouse wheel has scrolled on the web page.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Browser.IBrowser" /> object has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Js.IJsFunction">
            <summary>
                A JavaScript function that can be passed between .NET and JavaScript as a method
                argument or a return value. The function lifetime is bound to the lifetime of the frame this
                function belongs to. When the owner frame is unloaded, all the JavaScript objects are
                automatically disposed. An attempt to access a disposed JavaScript object will result
                in <see cref="T:System.ObjectDisposedException" />
            </summary>
            <remarks>
                <para> This API is available since DotNetBrowser 2.1.</para>
            </remarks>
        </member>
        <member name="M:DotNetBrowser.Js.IJsFunction.Invoke``1(DotNetBrowser.Js.IJsObject,System.Object[])">
            <summary>
                Executes the function on the given <paramref name="jsObject" /> with the <paramref name="args" />.
                This method blocks current thread execution until the function finishes
                its execution. If the function raises an exception, then a <see cref="T:DotNetBrowser.Js.JsException" /> with an error
                message that describes the reason of the exception will be thrown. Same error message will be
                printed in JavaScript Console.
            </summary>
            <typeparam name="T">The expected type of the result of the JavaScript function execution</typeparam>
            <param name="jsObject">
                .The JavaScript object to invoke this function on. Pass <c>null</c> to invoke
                the function as a global function.
            </param>
            <param name="args">
                The list of input arguments. The following types are supported: <see cref="T:System.Boolean" />,
                <see cref="T:System.Double" />, <see cref="T:System.String" />, <see cref="T:DotNetBrowser.Js.IJsObject" />, or <see cref="T:System.Object" />.
            </param>
            <returns>
                The result of the JavaScript function execution.
            </returns>
            <exception cref="T:DotNetBrowser.Js.JsException">The JavaScript function raised an exception.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsFunction" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="M:DotNetBrowser.Js.IJsFunction.Invoke(DotNetBrowser.Js.IJsObject,System.Object[])">
            <summary>
                Executes the function on the given <paramref name="jsObject" /> with the <paramref name="args" />.
                This method blocks current thread execution until the function finishes
                its execution. If the function raises an exception, then <see cref="T:DotNetBrowser.Js.JsException" /> with an error
                message that describes the reason of the exception will be thrown. Same error message will be
                printed in JavaScript Console.
            </summary>
            <param name="jsObject">
                .The JavaScript object to invoke this function on. Pass <c>null</c> to invoke
                the function as a global function.
            </param>
            <param name="args">
                The list of input arguments. The following types are supported: <see cref="T:System.Boolean" />,
                <see cref="T:System.Double" />, <see cref="T:System.String" />, <see cref="T:DotNetBrowser.Js.IJsObject" />, or <see cref="T:System.Object" />.
            </param>
            <returns>
                The result of the JavaScript function execution.
            </returns>
            <exception cref="T:DotNetBrowser.Js.JsException">The JavaScript function raised an exception.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsFunction" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="T:DotNetBrowser.Js.IJsObject">
            <summary>
                Represents a JavaScript object. Provides access to the object's properties and functions.
                The JavaScript object is alive until its JavaScript execution context exist. Once execution context
                is disposed, all JavaScript objects available in the scope of this context will be automatically disposed.
                If you try to access already disposed object, you will get an <see cref="T:System.ObjectDisposedException" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Js.IJsObject.Frame">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Frames.IFrame" /> instance this JavaScript object is bound to.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Frames.IFrame" /> instance this JavaScript object is bound to.</value>
        </member>
        <member name="P:DotNetBrowser.Js.IJsObject.Properties">
            <summary>
                Gets the object properties as a live collection.
                Modifying this collection will lead to updating the object properties.
            </summary>
            <value>The object properties as a live collection.</value>
        </member>
        <member name="M:DotNetBrowser.Js.IJsObject.Invoke``1(System.String,System.Object[])">
            <summary>
                Executes the function with the given <paramref name="methodName" /> and the <paramref name="args" /> in the
                JavaScript object. This method blocks current thread execution until the function finishes
                its execution. If the function raises an exception, then a <see cref="T:DotNetBrowser.Js.JsException" /> with an error
                message that describes the reason of the exception will be thrown. Same error message will be
                printed in JavaScript Console.
            </summary>
            <typeparam name="T">The expected type of the result of the JavaScript function execution</typeparam>
            <param name="methodName">The function name.</param>
            <param name="args">
                the list of input arguments. The following types are supported: <see cref="T:System.Boolean" />,
                <see cref="T:System.Double" />, <see cref="T:System.String" />, <see cref="T:DotNetBrowser.Js.IJsObject" />, or <see cref="T:System.Object" />.
            </param>
            <returns>
                The result of the JavaScript function execution.
            </returns>
            <exception cref="T:DotNetBrowser.Js.JsException">The JavaScript function raised an exception.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsObject" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="M:DotNetBrowser.Js.IJsObject.Invoke(System.String,System.Object[])">
            <summary>
                Executes the function with the given <paramref name="methodName" /> and the <paramref name="args" />  in the
                JavaScript object. This method blocks current thread execution until the function finishes
                its execution. If the function raises an exception, then <see cref="T:DotNetBrowser.Js.JsException" /> with an error
                message that describes the reason of the exception will be thrown. Same error message will be
                printed in JavaScript Console.
            </summary>
            <param name="methodName">The function name.</param>
            <param name="args">
                the list of input arguments. The following types are supported: <see cref="T:System.Boolean" />,
                <see cref="T:System.Double" />, <see cref="T:System.String" />, <see cref="T:DotNetBrowser.Js.IJsObject" />, or <see cref="T:System.Object" />.
            </param>
            <returns>
                The result of the JavaScript function execution.
            </returns>
            <exception cref="T:DotNetBrowser.Js.JsException">The JavaScript function raised an exception.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsObject" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="T:DotNetBrowser.Js.IJsObjectPropertyCollection">
            <summary>
                The JavaScript object properties.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Js.IJsObjectPropertyCollection.Item(System.String)">
            <summary>
                Gets or sets a property with the specified name in the current JavaScript object.
                The <paramref name="name" /> parameter represents JavaScript object's property name.
            </summary>
            <param name="name">The name of the property. Cannot be null or empty.</param>
            <param name="value">
                The value associated with the specified <paramref name="name" />.
                The value can be one of the following types: string, bool, int, long, short, byte, double, float, object, delegate.
                Cannot be null or IJsObject from a different frame.
            </param>
            <value>The value associated with the specified name.</value>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> is null, empty, or contains only blank characters.</exception>
            <exception cref="T:System.ArgumentException">
                The <paramref name="value" /> is an IJsObject with
                a different JavaScript context.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsObject" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Js.IJsObjectPropertyCollection.Item(System.UInt32)">
            <summary>
                Gets or sets a property with the specified index in the current JavaScript object.
                The <paramref name="index" /> parameter represents JavaScript object's property index.
            </summary>
            <param name="index">The index of the property. Cannot be null or empty.</param>
            <param name="value">
                The value associated with the specified <paramref name="index" />.
                The value can be one of the following types: string, bool, int, long, short, byte, double, float, object, delegate.
                Cannot be null or IJsObject from a different frame.
            </param>
            <value>The value associated with the specified name.</value>
            <exception cref="T:System.ArgumentException">
                The <paramref name="value" /> is an IJsObject with
                a different JavaScript context.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsObject" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Js.IJsObjectPropertyCollection.Names">
            <summary>
                Gets a collection containing the names of the properties of this object, including properties
                from prototype objects.
            </summary>
            <value>
                The collection containing the names of the properties of this object, including properties
                from prototype objects.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsObject" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Js.IJsObjectPropertyCollection.OwnPropertyNames">
            <summary>
                Gets a collection containing the names of the properties of this object, excluding properties
                from prototype objects.
            </summary>
            <value>
                The collection containing the names of the properties of this object, excluding properties
                from prototype objects.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsObject" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="M:DotNetBrowser.Js.IJsObjectPropertyCollection.Contains(System.String)">
            <summary>
                Checks whether the JavaScript object has a property or function with the specified <paramref name="name" />.
            </summary>
            <param name="name">The name of the property or function.</param>
            <returns><c>true</c> if the object has a property or function with the specified <paramref name="name" />.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsObject" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="M:DotNetBrowser.Js.IJsObjectPropertyCollection.Contains(System.UInt32)">
            <summary>
                Checks whether the JavaScript object has a property with the specified <paramref name="index" />.
            </summary>
            <param name="index">The index of the property.</param>
            <returns><c>true</c> if the object has a property with the given <paramref name="index" />.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsObject" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="M:DotNetBrowser.Js.IJsObjectPropertyCollection.Remove(System.String)">
            <summary>
                Removes a property with the specified <paramref name="name" /> from the JavaScript object.
                Once you remove the property, it will not be available in the current JavaScript object anymore.
            </summary>
            <param name="name">The name of the property or function.</param>
            <returns><c>true</c> if the property was successfully removed.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsObject" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="M:DotNetBrowser.Js.IJsObjectPropertyCollection.Remove(System.UInt32)">
            <summary>
                Removes a property with the specified <paramref name="index" /> in the JavaScript object.
                Once you remove the property, it will not be available in the current JavaScript object anymore.
            </summary>
            <param name="index">The index of the property or function.</param>
            <returns><c>true</c> if the property was successfully removed.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Js.IJsObject" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="T:DotNetBrowser.Js.JsException">
            <summary>
                Thrown when an exception is raised in JavaScript.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Js.JsException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Js.JsonExtensions">
            <summary>
                Contains methods for working with JSON strings
            </summary>
        </member>
        <member name="M:DotNetBrowser.Js.JsonExtensions.ParseJsonString``1(DotNetBrowser.Frames.IFrame,System.String)">
            <summary>
                Creates an object that represents the result of parsing the given string in JSON format.
            </summary>
            <typeparam name="T">
                The expected result type. The following types are supported: <see cref="T:System.Boolean" />,
                <see cref="T:System.Double" />, <see cref="T:System.String" />, <see cref="T:DotNetBrowser.Js.IJsObject" />, or <see cref="T:System.Object" />.
            </typeparam>
            <param name="frame"> The frame to use for conversion.</param>
            <param name="jsonString">A string in JSON format.</param>
            <returns>
                The result of parsing. Can be <c>null</c> if the result of parsing is <c>null</c>.
                For example, when the given JSON string is "null", then the method returns <c>null</c>
            </returns>
            <exception cref="T:DotNetBrowser.Js.JsException">
                The given JSON string object cannot be parsed.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Js.JsonExtensions.ParseJsonString(DotNetBrowser.Frames.IFrame,System.String)">
            <summary>
                Creates an object that represents the result of parsing the given string in JSON format.
            </summary>
            <param name="frame"> The frame to use for conversion.</param>
            <param name="jsonString">A string in JSON format.</param>
            <returns>
                The result of parsing. Can be <c>null</c> if the result of parsing is <c>null</c>.
                For example, when the given JSON string is "null", then the method returns <c>null</c>
            </returns>
            <exception cref="T:DotNetBrowser.Js.JsException">
                The given JSON string object cannot be parsed.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Js.JsonExtensions.ToJsonString(DotNetBrowser.Js.IJsObject)">
            <summary>
                Converts the given JavaScript object into a JSON string.
            </summary>
            <param name="jsObject">The JavaScript object to convert.</param>
            <returns>A JSON representation of the given JavaScript object.</returns>
            <exception cref="T:DotNetBrowser.Js.JsException">
                The given JavaScript object cannot be converted to a JSON string.
                For example, a circular reference was found in the given JavaScript object.
            </exception>
        </member>
        <member name="T:DotNetBrowser.Media.Events.AudioEventArgs">
            <summary>
                The base class for <see cref="T:DotNetBrowser.Media.IAudio" /> related events.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Media.Events.AudioEventArgs.Audio">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Media.IAudio" /> instance that initiated this event.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Media.IAudio" /> instance that initiated this event.</value>
        </member>
        <member name="T:DotNetBrowser.Media.Events.AudioPlaybackStartedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Media.IAudio.AudioPlaybackStarted" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Media.Events.AudioPlaybackStoppedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Media.IAudio.AudioPlaybackStopped" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Media.Handlers.SelectMediaDeviceParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Media.IMediaDevices.SelectMediaDeviceHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Media.Handlers.SelectMediaDeviceParameters.Devices">
            <summary>
                Gets the collection of the available media stream devices of the requested <see cref="P:DotNetBrowser.Media.Handlers.SelectMediaDeviceParameters.Type" />.
            </summary>
            <value>
                The collection of the available media stream devices of the requested <see cref="P:DotNetBrowser.Media.Handlers.SelectMediaDeviceParameters.Type" />.
                If there are no media stream devices available, this will be an empty collection.
            </value>
        </member>
        <member name="P:DotNetBrowser.Media.Handlers.SelectMediaDeviceParameters.MediaDevices">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Media.IMediaDevices" /> instance associated with the handler.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Media.IMediaDevices" /> instance associated with the handler.</value>
        </member>
        <member name="P:DotNetBrowser.Media.Handlers.SelectMediaDeviceParameters.Type">
            <summary>
                Get the type of the requested media stream.
            </summary>
            <value>The type of the requested media stream.</value>
        </member>
        <member name="T:DotNetBrowser.Media.Handlers.SelectMediaDeviceResponse">
            <summary>
                A response to the <see cref="P:DotNetBrowser.Media.IMediaDevices.SelectMediaDeviceHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Media.Handlers.SelectMediaDeviceResponse.Select(DotNetBrowser.Media.MediaDevice)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Media.Handlers.SelectMediaDeviceResponse" /> that notifies the engine that the given media input device
                should be used.
            </summary>
            <param name="defaultDevice">
                The media device to use. Must be the one from the list of the media input devices
                received from the <see cref="P:DotNetBrowser.Media.Handlers.SelectMediaDeviceParameters.Devices" />. If an invalid device
                is passed through this method, the first device from the list of media devices will be
                used.
            </param>
            <returns>
                The <see cref="T:DotNetBrowser.Media.Handlers.SelectMediaDeviceResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Media.IMediaDevices.SelectMediaDeviceHandler" />.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Media.IAudio">
            <summary>
                Allows controlling audio on the loaded web page and receive notifications when audio has been
                started or stopped playing.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Media.IAudio.Browser">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with this object.</value>
        </member>
        <member name="P:DotNetBrowser.Media.IAudio.IsPlaying">
            <summary>
                Indicates if the audio is currently playing on the loaded web page.
            </summary>
            <value><c>true</c> when audio is currently playing, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Media.IAudio" /> has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Media.IAudio.Muted">
            <summary>
                Mutes or unmutes all audio output for this Browser instance.
            </summary>
            <value><c>true</c> when audio output must be muted, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Media.IAudio" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Media.IAudio.AudioPlaybackStarted">
            <summary>
                Occurs when an audio has been started playing on the web page.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Media.IAudio" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Media.IAudio.AudioPlaybackStopped">
            <summary>
                Occurs when an audio has been stopped playing on the web page.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Media.IAudio" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Media.IMediaDevices">
            <summary>
                An engine service that allows accessing all the available media input devices.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Media.IMediaDevices.AudioCaptureDevices">
            <summary>
                Gets a collection of the available audio capture devices.
            </summary>
            <value>The collection of the available audio capture devices.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Media.IMediaDevices" /> has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Media.IMediaDevices.Engine">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.</value>
        </member>
        <member name="P:DotNetBrowser.Media.IMediaDevices.SelectMediaDeviceHandler">
            <summary>
                Gets or sets a handler that is used when the web page asks which media input device should be used.
            </summary>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Media.Handlers.SelectMediaDeviceResponse.Select(DotNetBrowser.Media.MediaDevice)" /> to select a specific media input device.
                </para>
                <para>
                    If there are no media input devices of the requested type (e.g. there are no video input
                    devices), then the callback <b>will not be invoked</b>).
                </para>
                <para><b>Important:</b> the engine will be blocked until you return control from the callback.</para>
                <para>
                    If the callback throws an exception or the returned media device is not the one from the
                    <see cref="P:DotNetBrowser.Media.Handlers.SelectMediaDeviceParameters.Devices" />, the system default media input device will be used.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Media.IMediaDevices" /> has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Media.IMediaDevices.VideoCaptureDevices">
            <summary>
                Gets a collection of the available video capture devices.
            </summary>
            <value>The collection of the available video capture devices.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Media.IMediaDevices" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Media.MediaDevice">
            <summary>
                The details of the media input device (audio/video).
            </summary>
        </member>
        <member name="P:DotNetBrowser.Media.MediaDevice.Id">
            <summary>
                Gets the device's unique ID.
            </summary>
            <value>The device's unique ID.</value>
        </member>
        <member name="P:DotNetBrowser.Media.MediaDevice.Name">
            <summary>
                Gets the device's "friendly" name.
            </summary>
            <value>
                The device's "friendly" name or an empty string when there's no device name.
                This device name is not guaranteed to be unique.
            </value>
        </member>
        <member name="P:DotNetBrowser.Media.MediaDevice.Type">
            <summary>
                Gets the device's type.
            </summary>
            <value>The device's type.</value>
        </member>
        <member name="T:DotNetBrowser.Media.MediaDeviceType">
            <summary>
                The media device types.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaDeviceType.Unrecognized">
            <summary>
                The media device type is not recognized.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaDeviceType.Unspecified">
            <summary>
                The media device type is not specified.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaDeviceType.AudioDevice">
            <summary>
                An audio device.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaDeviceType.VideoDevice">
            <summary>
                A video device.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Media.MediaType">
            <summary>
                List of the known media types. It's used in <see cref="T:DotNetBrowser.Browser.Handlers.ShowContextMenuParameters" />.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaType.Unrecognized">
            <summary>
                The media type is not recognized.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaType.Unspecified">
            <summary>
                Unspecified node.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaType.None">
            <summary>
                No special node is in context.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaType.Image">
            <summary>
                An image node is selected.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaType.Video">
            <summary>
                A video node is selected.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaType.Audio">
            <summary>
                An audio node is selected.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaType.Canvas">
            <summary>
                A canvas node is selected.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaType.File">
            <summary>
                A file node is selected.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Media.MediaType.Plugin">
            <summary>
                A plugin node is selected.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Navigation.Events.FrameDocumentLoadFinishedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Navigation.INavigation.FrameDocumentLoadFinished" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Navigation.Events.FrameLoadFailedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Navigation.INavigation.FrameLoadFailed" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.FrameLoadFailedEventArgs.ErrorCode">
            <summary>
                Gets the network error code which is one from the <see cref="T:DotNetBrowser.Net.NetError" /> enumeration.
            </summary>
            <value>The network error code which is one from the <see cref="T:DotNetBrowser.Net.NetError" /> enumeration.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.FrameLoadFailedEventArgs.ValidatedUrl">
            <summary>
                Gets the URL address which is failed to load.
            </summary>
            <value>The URL address which is failed to load.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.Events.FrameLoadFinishedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Navigation.INavigation.FrameLoadFinished" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.FrameLoadFinishedEventArgs.ValidatedUrl">
            <summary>
                Gets the URL address which is finished loading.
            </summary>
            <value>The URL address which is finished loading.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.Events.FrameNavigationEventArgs">
            <summary>
                The base class for all the <see cref="T:DotNetBrowser.Navigation.INavigation" /> event arguments containing
                <see cref="T:DotNetBrowser.Frames.IFrame" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.FrameNavigationEventArgs.Frame">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Frames.IFrame" /> instance associated with the event.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Frames.IFrame" /> instance associated with the event.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.Events.LoadFinishedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Navigation.INavigation.LoadFinished" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Navigation.Events.LoadStartedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Navigation.INavigation.LoadStarted" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Navigation.Events.NavigationEventArgs">
            <summary>
                The base class for <see cref="T:DotNetBrowser.Navigation.INavigation" /> event arguments.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationEventArgs.Browser">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with the event.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with the event.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationEventArgs.Navigation">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Navigation.INavigation" /> instance associated with the event.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Navigation.INavigation" /> instance associated with the event.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.Events.NavigationFinishedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Navigation.INavigation.NavigationFinished" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationFinishedEventArgs.ErrorCode">
            <summary>
                Gets the navigation error code.
            </summary>
            <value>
                The navigation error code. In case the navigation has failed, contains the error code of the
                network error.
            </value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationFinishedEventArgs.HasCommitted">
            <summary>
                Indicates whether the navigation has committed.
            </summary>
            <value><c>true</c> if the navigation has committed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationFinishedEventArgs.IsErrorPage">
            <summary>
                Indicates whether the navigation resulted in an error page.
            </summary>
            <value><c>true</c> if the navigation resulted in an error page, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationFinishedEventArgs.IsSameDocument">
            <summary>
                Indicates whether the navigation has been performed in the scope of the same document.
            </summary>
            <value><c>true</c> if the navigation has been performed in the scope of the same document, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationFinishedEventArgs.Url">
            <summary>
                Gets the navigation URL.
            </summary>
            <value>The navigation URL.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationFinishedEventArgs.WasServerRedirect">
            <summary>
                Indicates whether the navigation has encountered a server redirect.
            </summary>
            <value><c>true</c> if the navigation has encountered a server redirect, <c>false</c> otherwise.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.Events.NavigationRedirectedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Navigation.INavigation.NavigationRedirected" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationRedirectedEventArgs.Url">
            <summary>
                Gets the destination URL for the navigation redirect.
            </summary>
            <value>The destination URL for the navigation redirect.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.Events.NavigationStartedEventArgs">
            <summary>
                The event arguments for the <see cref="E:DotNetBrowser.Navigation.INavigation.NavigationStarted" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationStartedEventArgs.IsMainFrame">
            <summary>
                Indicates whether the navigation is started in the main frame.
            </summary>
            <value><c>true</c> if the navigation is started in the main frame, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationStartedEventArgs.IsSameDocument">
            <summary>
                Indicates whether the navigation will be performed in the scope of the same document.
            </summary>
            <value><c>true</c> if the navigation will be performed in the scope of the same document, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Events.NavigationStartedEventArgs.Url">
            <summary>
                Gets the URL of the navigation.
            </summary>
            <value>The navigation URL.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.Events.NavigationStoppedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Navigation.INavigation.NavigationStopped" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Navigation.Handlers.NavigationParameters">
            <summary>
                The base class for all <see cref="T:DotNetBrowser.Navigation.INavigation" /> handlers parameters.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.NavigationParameters.Navigation">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Navigation.INavigation" /> instance the handler is associated with.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Navigation.INavigation" /> instance the handler is associated with.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Navigation.INavigation.ShowHttpErrorPageHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageParameters.HttpStatus">
            <summary>
                Gets the HTTP status code of the request.
            </summary>
            <value>The HTTP status code of the request.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageParameters.Url">
            <summary>
                Gets the URL of the unreachable navigation request.
            </summary>
            <value>The URL of the unreachable navigation request.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse">
            <summary>
                A response to the <see cref="P:DotNetBrowser.Navigation.INavigation.ShowHttpErrorPageHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse.ErrorHtml">
            <summary>
                Gets the HTML of the custom error page.
            </summary>
            <value>The HTML of the custom error page. If null, the default error page will be displayed.</value>
        </member>
        <member name="M:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse.Show(System.String)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse" /> that notifies the browser that it should display an error page
                with the specified <paramref name="errorHtml" />.
            </summary>
            <param name="errorHtml"> The HTML code of the error page to display.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Navigation.INavigation.ShowHttpErrorPageHandler" /> implementation.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="errorHtml" /> is null, empty, or contains only white space.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse.ShowDefault">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse" /> that notifies the browser that it should display
                the default error page.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Navigation.INavigation.ShowHttpErrorPageHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Navigation.Handlers.ShowNetErrorPageParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Navigation.INavigation.ShowNetErrorPageHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.ShowNetErrorPageParameters.NetError">
            <summary>
                Gets the URL request error code.
            </summary>
            <value>
                The URL request error code. In case the request has failed, contains the error code
                of the network. Otherwise, has the default <see cref="F:DotNetBrowser.Net.NetError.Undefined" /> value.
            </value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.ShowNetErrorPageParameters.Url">
            <summary>
                Gets the URL of the unreachable navigation request.
            </summary>
            <value>The URL of the unreachable navigation request.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.Handlers.ShowNetErrorPageResponse">
            <summary>
                A response to the <see cref="P:DotNetBrowser.Navigation.INavigation.ShowNetErrorPageHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.ShowNetErrorPageResponse.ErrorHtml">
            <summary>
                Gets the HTML of the custom error page.
            </summary>
            <value>The HTML of the custom error page. If null, the default error page will be displayed.</value>
        </member>
        <member name="M:DotNetBrowser.Navigation.Handlers.ShowNetErrorPageResponse.Show(System.String)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Navigation.Handlers.ShowNetErrorPageResponse" /> that notifies the browser that it should display an error page
                with the specified <paramref name="errorHtml" />.
            </summary>
            <param name="errorHtml"> The HTML code of the error page to display.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Navigation.Handlers.ShowNetErrorPageResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Navigation.INavigation.ShowNetErrorPageHandler" /> implementation.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="errorHtml" /> is null, empty, or contains only white space.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.Handlers.ShowNetErrorPageResponse.ShowDefault">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Navigation.Handlers.ShowNetErrorPageResponse" /> that notifies the browser that it should display
                the default error page.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Navigation.Handlers.ShowNetErrorPageResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Navigation.INavigation.ShowNetErrorPageHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Navigation.Handlers.StartNavigationParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Navigation.INavigation.StartNavigationHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.StartNavigationParameters.HasUserGesture">
            <summary>
                Indicates whether the navigation was initiated by a user gesture.
            </summary>
            <value><c>true</c> if the navigation was initiated by a user gesture, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.StartNavigationParameters.IsExternalProtocol">
            <summary>
                Indicates whether the target URL cannot be handled by the browser's internal protocol
                handlers.
            </summary>
            <value>
                <c>true</c> if the target URL cannot be handled by the browser's internal protocol
                handlers, <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.StartNavigationParameters.IsMainFrame">
            <summary>
                Indicates whether the navigation request URL belongs to a main frame.
            </summary>
            <value><c>true</c> if the navigation request URL belongs to a main frame, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.StartNavigationParameters.IsPost">
            <summary>
                Indicates whether the navigation is done using HTTP POST method.
            </summary>
            <value><c>true</c> if the navigation is done using HTTP POST method, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.StartNavigationParameters.IsRedirect">
            <summary>
                Indicates whether it's a redirect.
            </summary>
            <value><c>true</c> if the navigation is a redirect, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.Handlers.StartNavigationParameters.Url">
            <summary>
                Gets the URL of the resource that will be loaded.
            </summary>
            <value>The URL of the resource that will be loaded.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.Handlers.StartNavigationResponse">
            <summary>
                A response to the <see cref="P:DotNetBrowser.Navigation.INavigation.StartNavigationHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Navigation.Handlers.StartNavigationResponse.Ignore">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Navigation.Handlers.StartNavigationResponse" /> that notifies the browser that the load request should be ignored.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Navigation.Handlers.StartNavigationResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Navigation.INavigation.StartNavigationHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Navigation.Handlers.StartNavigationResponse.Start">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Navigation.Handlers.StartNavigationResponse" /> that notifies the browser that it should continue loading the URL.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Navigation.Handlers.StartNavigationResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Navigation.INavigation.StartNavigationHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Navigation.INavigation">
            <summary>
                Allows loading resources in the browser instance and working with the navigation history.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigation.Browser">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with this object.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigation.CurrentEntry">
            <summary>
                Gets the current navigation item in the back-forward list.
            </summary>
            <value>The current navigation item in the back-forward list or null if the list is empty.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigation.CurrentIndex">
            <summary>
                Gets the index of the current navigation item in the back-forward list.
            </summary>
            <value>The index of the current item in the back-forward list or -1 if the list is empty.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigation.EntryCount">
            <summary>
                Gets the number of items in the back-forward list.
            </summary>
            <value></value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigation.ShowHttpErrorPageHandler">
            <summary>
                Gets or sets a handler that is used when the engine is about to display an error web page because the web
                server sends an empty HTTP response with the HTTP status code that represents an error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
            <remarks>
                <para>
                    Use <see cref="M:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse.Show(System.String)" /> to show the custom error page with the given HTML.
                </para>
                <para>
                    Use <see cref="M:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse.ShowDefault" /> to display the default Chromium error page.
                </para>
                <para>
                    <b>Important:</b> the engine will be blocked until the <c>Handle()</c> method returns.
                    It is not allowed to invoke any engine methods
                    in the scope of this handler implementation.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigation.ShowNetErrorPageHandler">
            <summary>
                Gets or sets a handler that is used when the engine is about to display a network error web page because the
                required web resource cannot be loaded because of a network error.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
            <remarks>
                <para>
                    Use <see cref="M:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse.Show(System.String)" /> to show the custom network error page with the given HTML.
                </para>
                <para>
                    Use <see cref="M:DotNetBrowser.Navigation.Handlers.ShowHttpErrorPageResponse.ShowDefault" /> to display the default Chromium network error page.
                </para>
                <para>
                    <b>Important:</b> the engine will be blocked until the <c>Handle()</c> method returns.
                    It is not allowed to invoke any engine methods
                    in the scope of this handler implementation.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigation.StartNavigationHandler">
            <summary>
                Gets or sets a handler that is used before the browser starts navigation to a resource.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
            <remarks>
                <para>
                    Use <see cref="M:DotNetBrowser.Navigation.Handlers.StartNavigationResponse.Start" /> to allow navigation start.
                </para>
                <para>
                    Use <see cref="M:DotNetBrowser.Navigation.Handlers.StartNavigationResponse.Ignore" /> to ignore navigation request.
                </para>
                <para>
                    <b>Important:</b> the browser will be blocked until the <c>Handle()</c> method returns.
                    It is not allowed to invoke any browser methods in the scope of this handler implementation.
                </para>
            </remarks>
        </member>
        <member name="E:DotNetBrowser.Navigation.INavigation.LoadStarted">
            <summary>
                Occurs when the content loading has been started.
                This event corresponds to the moment when the spinner of the tab starts spinning.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Navigation.INavigation.LoadFinished">
            <summary>
                Occurs when the content loading has been finished. This event corresponds to the
                moment when the spinner of the tab stops spinning.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Navigation.INavigation.NavigationStarted">
            <summary>
                Occurs when the navigation has been started. This is also fired by same-document navigations,
                such as fragment navigations or pushState/replaceState, which will not result in a
                document change. To filter these out, use the <see cref="P:DotNetBrowser.Navigation.Events.NavigationStartedEventArgs.IsSameDocument" /> property.
                <para>
                    Note that more than one navigation can be ongoing in the same frame at the same time(including
                    the main frame). Also, there is no guarantee that the <see cref="E:DotNetBrowser.Navigation.INavigation.NavigationFinished" /> will be fired for
                    any particular navigation before this event is called on the next.
                </para>
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Navigation.INavigation.NavigationFinished">
            <summary>
                Occurs when the navigation has been finished. This happens when a navigation is
                committed, aborted, or replaced by a new one.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Navigation.INavigation.NavigationStopped">
            <summary>
                Occurs when the navigation has been stopped.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Navigation.INavigation.NavigationRedirected">
            <summary>
                Occurs when the navigation has encountered a server redirect.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Navigation.INavigation.FrameDocumentLoadFinished">
            <summary>
                Occurs when the document loading in the given <see cref="T:DotNetBrowser.Frames.IFrame" /> has been finished. At this point,
                deferred scripts were executed, and content scripts marked "document_end" get injected into the
                <see cref="T:DotNetBrowser.Frames.IFrame" />.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Navigation.INavigation.FrameLoadFinished">
            <summary>
                Occurs when the content of the <see cref="T:DotNetBrowser.Frames.IFrame" /> has been loaded completely.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Navigation.INavigation.FrameLoadFailed">
            <summary>
                Occurs when the content load was failed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.CanGoBack">
            <summary>
                Checks whether the previous location can be loaded.
            </summary>
            <returns><c>true</c> if the previous location in the back-forward list can be loaded.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.CanGoForward">
            <summary>
                Checks whether the next location can be loaded.
            </summary>
            <returns><c>true</c> if the next location in the back-forward list can be loaded.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.EntryAt(System.Int32)">
            <summary>
                Returns an <see cref="T:DotNetBrowser.Navigation.INavigationEntry" /> instance for the given <c>index</c>
                in the back-forward list.
            </summary>
            <param name="index">The location of the item to return in the back-forward list.</param>
            <returns>The navigation entry that corresponds to the index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The <paramref name="index" /> is less than 0 or more than the number of items in the
                back-forward list.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.GoBack">
            <summary>
                Loads the previous location in the back-forward list. It does nothing if there's no previous location in the list.
            </summary>
            <returns>
                A task that represents the asynchronous navigation operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the navigation operation has been completed, stopped or failed.
                The task can throw <exception cref="T:System.TimeoutException" />
                if the navigation operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.GoForward">
            <summary>
                Loads the next location in the back-forward list. It does nothing if there's no next location in the list.
            </summary>
            <returns>
                A task that represents the asynchronous navigation operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the navigation operation has been completed, stopped or failed.
                The task can throw <exception cref="T:System.TimeoutException" />
                if the navigation operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.GoTo(System.Int32)">
            <summary>
                Navigates to a specific location at the given <paramref name="index" /> in the back-forward list.
            </summary>
            <param name="index">
                The location of the item to load in the back-forward list.
                Cannot be negative or more than the number of items in the back-forward list.
            </param>
            <returns>
                A task that represents the asynchronous navigation operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the navigation operation has been completed, stopped or failed.
                The task can throw <exception cref="T:System.TimeoutException" />
                if the navigation operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The <paramref name="index" /> is less than 0 or more than the
                number of items in the back-forward list.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.LoadUrl(System.String)">
            <summary>
                Navigates to a resource identified by a URL.
            </summary>
            <param name="url">The URL of the resource to load. Cannot be null, empty or contain only white space.</param>
            <returns>
                A task that represents the asynchronous loading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the loading operation has been completed, stopped or failed.
                The task can throw <exception cref="T:System.TimeoutException" />
                if the loading operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="url" />is null, empty or contain only white space.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.LoadUrl(System.String,System.TimeSpan)">
            <summary>
                Navigates to a resource identified by a URL, with the specified <paramref name="timeout" />.
            </summary>
            <param name="url">The URL of the resource to load. Cannot be null, empty or contain only white space.</param>
            <param name="timeout">The timeout for the loading operation.</param>
            <returns>
                A task that represents the asynchronous loading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the loading operation has been completed, stopped or failed.
                The task can throw <exception cref="T:System.TimeoutException" />
                if the loading operation hasn't been completed within a <paramref name="timeout" />.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="url" /> is null, empty or contain only white space.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.LoadUrl(DotNetBrowser.Navigation.LoadUrlParameters)">
            <summary>
                Navigates to a resource identified by the specified <paramref name="parameters" />
            </summary>
            <param name="parameters">The parameters such as URL, POST data, and HTTP headers.</param>
            <returns>
                A task that represents the asynchronous loading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the loading operation has been completed, stopped or failed.
                The task can throw <exception cref="T:System.TimeoutException" />
                if the loading operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="parameters" /> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.LoadUrl(DotNetBrowser.Navigation.LoadUrlParameters,System.TimeSpan)">
            <summary>
                Navigates to a resource identified by the given <see cref="T:DotNetBrowser.Navigation.LoadUrlParameters" />, with the specified timout.
            </summary>
            <param name="parameters">The parameters such as URL, POST data, and HTTP headers.</param>
            <param name="timeout">The timeout for the loading operation.</param>
            <returns>
                A task that represents the asynchronous loading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the loading operation has been completed, stopped or failed.
                The task can throw <exception cref="T:System.TimeoutException" />
                if the loading operation hasn't been completed within a <paramref name="timeout" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="parameters" /> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.Reload">
            <summary>
                Reloads the currently loaded web page.
            </summary>
            <returns>
                A task that represents the asynchronous reloading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the reloading operation has been completed, stopped or failed.
                The task can throw <exception cref="T:System.TimeoutException" />
                if the reloading operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.ReloadAndCheckForRepost">
            <summary>
                Reloads the currently loaded web page.
                If the current web page has POST data, the user will be
                asked to confirm that he really wants to reload the page.
            </summary>
            <returns>
                A task that represents the asynchronous reloading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the reloading operation has been completed, stopped or failed.
                The task can throw <exception cref="T:System.TimeoutException" />
                if the reloading operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.ReloadIgnoringCache">
            <summary>
                Reloads the currently loaded web page ignoring the cached data.
            </summary>
            <returns>
                A task that represents the asynchronous reloading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the reloading operation has been completed, stopped or failed.
                The task can throw <exception cref="T:System.TimeoutException" />
                if the reloading operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.ReloadIgnoringCacheAndCheckForRepost">
            <summary>
                Reloads the currently loaded web page ignoring the cached data.
                If the current web page has POST data, the user will be
                asked to confirm that he really wants to reload the page.
            </summary>
            <returns>
                A task that represents the asynchronous reloading operation.
                The <see cref="T:DotNetBrowser.Navigation.LoadResult" /> indicates if the reloading operation has been completed, stopped or failed.
                The task can throw <exception cref="T:System.TimeoutException" />
                if the reloading operation hasn't been completed within a default timeout (100 seconds).
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.RemoveEntryAt(System.Int32)">
            <summary>
                Removes the item at the given <paramref name="index" /> from the back-forward list
                and returns true if it was removed successfully.
            </summary>
            <param name="index">
                The location of the item to remove in the back-forward list.
                Cannot be negative, point to the current item, or more than the number of items in the back-forward list.
            </param>
            <returns>returns true if the item was removed successfully.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The <paramref name="index" /> is less than 0 or more than the
                number of items in the back-forward list.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Navigation.INavigation.Stop">
            <summary>
                Cancels any pending navigation or download operation and stops any dynamic page
                elements, such as background sounds and animations.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Navigation.INavigation" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Navigation.INavigationEntry">
            <summary>
                The navigation history entry.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigationEntry.HttpStatusCode">
            <summary>
                Gets the status code of the last known successful navigation.
            </summary>
            <value>The status code of the last known successful navigation.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigationEntry.OriginalRequestUrl">
            <summary>
                Gets the URL that caused this entry to be created.
            </summary>
            <value>The URL that caused this entry to be created.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigationEntry.PageType">
            <summary>
                Gets the page type that tells if this entry is for an interstitial or error page.
            </summary>
            <value>The page type that tells if this entry is for an interstitial or error page.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigationEntry.Timestamp">
            <summary>
                Gets the time at which the last known local navigation was completed.
            </summary>
            <value>
                The time at which the last known local navigation was completed. A navigation can be completed
                more than once if the page is reloaded.
            </value>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigationEntry.Title">
            <summary>
                Gets the title as set by the page. This value is empty if there is no title set.
            </summary>
            <value>The title as set by the page. This value is empty if there is no title set.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.INavigationEntry.Url">
            <summary>
                Gets the actual URL of the web page.
            </summary>
            <value>The actual URL of the web page.</value>
        </member>
        <member name="T:DotNetBrowser.Navigation.LoadResult">
            <summary>
                The loading result.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Navigation.LoadResult.Completed">
            <summary>
                The page loading has completed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Navigation.LoadResult.Failed">
            <summary>
                The page loading has failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Navigation.LoadResult.Stopped">
            <summary>
                The page loading has stopped.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Navigation.LoadUrlParameters">
            <summary>
                The parameters of the load url request.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Navigation.LoadUrlParameters.HttpHeaders">
            <summary>
                Gets or sets the HTTP headers that will be sent with the request.
            </summary>
            <value>The HTTP headers that will be sent with the request. Cannot be null or contain null items.</value>
            <exception cref="T:System.ArgumentException">The <paramref name="value" /> is null or contains null items.</exception>
        </member>
        <member name="P:DotNetBrowser.Navigation.LoadUrlParameters.PostData">
            <summary>
                Gets or sets the POST data that will be sent with the request.
            </summary>
            <value>The POST data that will be sent with the request.</value>
        </member>
        <member name="P:DotNetBrowser.Navigation.LoadUrlParameters.Url">
            <summary>
                Gets the URL of the resource to load.
            </summary>
            <value>The URL of the resource to load.</value>
        </member>
        <member name="M:DotNetBrowser.Navigation.LoadUrlParameters.#ctor(System.String)">
            <summary>
                Initializes a new instance of <see cref="T:DotNetBrowser.Navigation.LoadUrlParameters" /> with the specified <paramref name="url" />.
            </summary>
            <param name="url">The URL of the resource to load.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="url" /> is null, empty or contain only white space.</exception>
        </member>
        <member name="T:DotNetBrowser.Navigation.PageType">
            <summary>
                Represents a navigation page type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Navigation.PageType.Normal">
            <summary>
                Normal page.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Navigation.PageType.Error">
            <summary>
                Error page.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Navigation.PageType.Interstitial">
            <summary>
                Interstitial page.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.BytesData">
            <summary>
                The upload data as bytes.
                Can be empty if the form doesn't contain any data.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.BytesData.Data">
            <summary>
                The upload data as a read-only list.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.BytesData.#ctor(System.Byte[])">
            <summary>
                Creates a new instance containing the specified data.
            </summary>
            <param name="data"> The upload data as a byte array.</param>
        </member>
        <member name="M:DotNetBrowser.Net.BytesData.op_Implicit(System.Byte[])~DotNetBrowser.Net.BytesData">
            <summary>
                Converts the specified data to a new instance of <see cref="T:DotNetBrowser.Net.BytesData" />.
            </summary>
            <param name="data"> The upload data as a byte array.</param>
            <returns>The new <see cref="T:DotNetBrowser.Net.BytesData"/> instance. </returns>
        </member>
        <member name="T:DotNetBrowser.Net.Certificates.Certificate">
            <summary>
                Provides information about the digital certificate. This certificate represents a X.509 certificate,
                which consists of a particular identity or end-entity certificate, such as an server
                identity or a client public key certificate, and zero or more intermediate certificates.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.CaFingerPrint">
            <summary>
                The CA Fingerprint of certificate.
            </summary>
            <value>A string containing the CaFingerPrint.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.Expired">
            <summary>
                Indicates whether the certificate has already expired.
            </summary>
            <value><c>false</c> if the certificate is not expired, otherwise - <c>true</c>.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.ExtendedKeyUsages">
            <summary>
                A collection of extended key usages. This collection can be empty if the
                extended key usages info was not extracted from certificate because of corrupt data.
            </summary>
            <value>The collection of `ExtendedKeyUsage`.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.Fingerprint">
            <summary>
                A certificate fingerprint. Can be an empty string if the fingerprint was not extracted
                from certificate because of corrupt data.
            </summary>
            <value>A string containing the fingerprint.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.Issuer">
            <summary>
                The Issuer entity of certificate. Can be null if the issuer was not extracted
                from certificate because of corrupt certificate data.
            </summary>
            <value>a string containing the Issuer.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.IssuerName">
            <summary>
                The name of the issuer of the certificate.
            </summary>
            <value>a string containing the IssuerName.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.KeyUsages">
            <summary>
                The key usages as a combination of flags. Can be null if the key usages info
                was not extracted from the certificate because of corrupt data.
            </summary>
            <value>returns the key usages as a combination of flags.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.NotAfter">
            <summary>
                The DateTime that describes until what time the certificate is valid.
            </summary>
            <value>Returns the time until what the certificate is valid as DataTime object</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.NotBefore">
            <summary>
                The DateTime starting from the certificate is valid.
            </summary>
            <value>Returns the time from what the certificate is valid as DataTime object</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.SerialNumber">
            <summary>
                The serial number of certificate. Can be an empty string if the serial
                number was not extracted from certificate because of corrupt data.
            </summary>
            <value>A string containing the SerialNumber.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.Subject">
            <summary>
                The Subject entity of certificate. Can be null if the subject
                was not extracted from certificate data because of corrupt certificate data.
            </summary>
            <value>A string containing the Subject.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.SubjectName">
            <summary>
                The name of the subject of the certificate. For HTTPS server certificates, this
                represents the web server. The common name of the subject should match the host name of the web server.
            </summary>
            <value>A string containing the SubjectName.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.X509Certificate">
            <summary>
                The X509Certificate that provides access to all certificate information.
                Can be null if the information was not extracted because of corrupt certificate data.
            </summary>
            <value>The X.509 certificate as an X509Certificate object.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Certificates.Certificate.X509Certificate2">
            <summary>
                The X509Certificate2 that provides access to all certificate information.
                Can be null if the information was not extracted because of corrupt certificate data.
            </summary>
            <value>returns a X.509Certificate as an X509Certificate object.</value>
        </member>
        <member name="M:DotNetBrowser.Net.Certificates.Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
                Constructs a new Certificate instance from an X509Certificate.
            </summary>
            <exception cref="T:System.ArgumentException">when value is null.</exception>
            <param name="certificate">the certificate.</param>
        </member>
        <member name="M:DotNetBrowser.Net.Certificates.Certificate.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Net.Certificates.CertificateVerificationStatus">
            <summary>
                The status that indicates result of SSL certificate verification
                by default Chromium certificate verifier.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.CommonNameInvalid">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.DateInvalid">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.AuthorityInvalid">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.NoRevocationMechanism">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.UnableToCheckRevocation">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.Revoked">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.Invalid">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.WeakSignatureAlgorithm">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.NonUniqueName">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.WeakKey">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.PinnedKeyMissing">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.NameConstraintViolation">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.ValidityTooLong">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.IsEv">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.RevCheckingEnabled">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.Sha1SignaturePresent">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.CtComplianceFailed">
            <summary />
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.CertificateVerificationStatus.CertificateTransparencyRequired">
            <summary />
        </member>
        <member name="T:DotNetBrowser.Net.Certificates.ExtendedKeyUsage">
            <summary>
                Defines how the certificate key can be used.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.ExtendedKeyUsage.ServerAuth">
            <summary>
                Gets the key can be used for TLS WWW server authentication.
            </summary>
            <value>The key can be used for TLS WWW server authentication.</value>
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.ExtendedKeyUsage.ClientAuth">
            <summary>
                Gets the key can be used for TLS WWW client authentication.
            </summary>
            <value>The key can be used for TLS WWW client authentication.</value>
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.ExtendedKeyUsage.CodeSigning">
            <summary>
                Gets the key can be used for signing of downloadable executable code.
            </summary>
            <value>The key can be used for signing of downloadable executable code.</value>
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.ExtendedKeyUsage.EmailProtection">
            <summary>
                Gets the key can be used for email protection.
            </summary>
            <value>The key can be used for email protection.</value>
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.ExtendedKeyUsage.TimeStamping">
            <summary>
                Gets the key can be used for binding the hash of an object to a time.
            </summary>
            <value>The key can be used for binding the hash of an object to a time.</value>
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.ExtendedKeyUsage.OcspSigning">
            <summary>
                Gets the key can be used for signing OCSP responses.
            </summary>
            <value>The key can be used for signing OCSP responses.</value>
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.ExtendedKeyUsage.IpsecEndSystem">
            <summary>
                Gets the key can be used for IP security end system.
            </summary>
            <value>The key can be used for IP security end system.</value>
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.ExtendedKeyUsage.IpsecTunnel">
            <summary>
                Gets the key can be used for IP security tunnel termination.
            </summary>
            <value>The key can be used for IP security tunnel termination.</value>
        </member>
        <member name="F:DotNetBrowser.Net.Certificates.ExtendedKeyUsage.IpsecUser">
            <summary>
                Gets the key can be used for IP security user.
            </summary>
            <value>The key can be used for IP security user.</value>
        </member>
        <member name="M:DotNetBrowser.Net.Certificates.ExtendedKeyUsage.op_Explicit(System.String)~DotNetBrowser.Net.Certificates.ExtendedKeyUsage">
            <summary>
                Creates the ExtendedKeysUsage instance from string representation
            </summary>
            <param name="str">string representation</param>
            <returns>a corresponding <see cref="T:DotNetBrowser.Net.Certificates.ExtendedKeyUsage" /> instance.</returns>
        </member>
        <member name="T:DotNetBrowser.Net.Events.NetworkEventArgs">
            <summary>
                The base class for <see cref="T:DotNetBrowser.Net.INetwork" /> event arguments.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Events.NetworkEventArgs.UrlRequest">
            <summary>
                The URL request received from the Chromium engine.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.Events.PacScriptErrorEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Net.INetwork.PacScriptErrorOccurred" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Events.PacScriptErrorEventArgs.ErrorText">
            <summary>
                Gets the ErrorText.
            </summary>
            <value>The error text.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Events.PacScriptErrorEventArgs.LineNumber">
            <summary>
                Gets the LineNumber which contains the error.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="T:DotNetBrowser.Net.Events.RedirectResponseCodeReceivedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Net.INetwork.RedirectResponseCodeReceived" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Events.RedirectResponseCodeReceivedEventArgs.NewUrl">
            <summary>
                Gets the new URL.
            </summary>
            <value>A string containing the new Url.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Events.RedirectResponseCodeReceivedEventArgs.ResponseCode">
            <summary>
                Gets the HTTP response code (e.g., 200, 404, and so on).
            </summary>
            <value>An integer that represents the response code.</value>
        </member>
        <member name="T:DotNetBrowser.Net.Events.RequestCompletedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Net.INetwork.RequestCompleted" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Events.RequestCompletedEventArgs.ErrorCode">
            <summary>
                Gets the URL request error code. In case the request has failed, contains the error code
                of the network. Otherwise, has the default <see cref="F:DotNetBrowser.Net.NetError.Undefined" /> value.
            </summary>
            <value>The URL request error code.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Events.RequestCompletedEventArgs.IsCached">
            <summary>
                Indicates if the response has been taken from cache.
            </summary>
            <value><c>true</c> if the response has been taken from cache, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Events.RequestCompletedEventArgs.ResponseCode">
            <summary>
                Gets the response code of the current URL request (e.g., 200, 404, and so on).
            </summary>
            <value>
                The response code of the current URL request
                or 0 if the request has been failed or canceled.
            </value>
        </member>
        <member name="P:DotNetBrowser.Net.Events.RequestCompletedEventArgs.Status">
            <summary>
                Gets the status of the current URL request.
            </summary>
            <value>The status of the current URL request.</value>
        </member>
        <member name="T:DotNetBrowser.Net.Events.RequestDestroyedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Net.INetwork.RequestDestroyed" /> event.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.Events.ResponseBytesReceivedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Net.INetwork.ResponseBytesReceived" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Events.ResponseBytesReceivedEventArgs.Data">
            <summary>
                Gets the received part of HTTP response body.
            </summary>
            <value>An array of bytes containing the Data.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Events.ResponseBytesReceivedEventArgs.MimeType">
            <summary>
                Gets the MIME type from the headers.
            </summary>
            <value>The MIME type from the headers.</value>
        </member>
        <member name="T:DotNetBrowser.Net.Events.ResponseStartedEventArgs">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Net.INetwork.ResponseStarted" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Events.ResponseStartedEventArgs.ResponseCode">
            <summary>
                Gets the response code of the current URL request (e.g., 200, 404, and so on).
                Returns 0 if the request has been failed or canceled.
            </summary>
            <value>
                The response code of the current URL request (e.g., 200, 404, and so on).
                Returns 0 if the request has been failed or canceled.
            </value>
        </member>
        <member name="T:DotNetBrowser.Net.FileValue">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Net.FileValue.Bytes">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Net.FileValue.ContentType">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Net.FileValue.FileName">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Net.FileValue.FilePath">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Net.FileValue.#ctor(System.String,DotNetBrowser.Net.MimeType,System.String)">
            <summary>
                Constructor for FileValue.
            </summary>
            <param name="fileName">The file name. Cannot be empty.</param>
            <param name="contentType">
                A string representing the content type determined by the file extension. Equals
                `application/octet-stream` when there's no MIME type associated with the file extension.
            </param>
            <param name="filePath">The file path. Cannot be empty.</param>
            <exception cref="T:System.ArgumentException">
                when file name or path is null or empty.
            </exception>
        </member>
        <member name="M:DotNetBrowser.Net.FileValue.#ctor(System.String,DotNetBrowser.Net.MimeType,System.Byte[])">
            <summary>
                Constructor for FileValue.
            </summary>
            <param name="fileName">The file name. Cannot be empty.</param>
            <param name="contentType">
                A string representing the content type determined by the file extension. Equals
                `application/octet-stream` when there's no MIME type associated with the file extension.
            </param>
            <param name="bytes">The byte sequence representing the file upload data segment.</param>
            <exception cref="T:System.ArgumentException">
                when file name is null or empty.
                when bytes array is null.
            </exception>
        </member>
        <member name="T:DotNetBrowser.Net.FormData">
            <summary>
                The list of key-value pairs each representing a segment of a form data.
                Can be empty if the form doesn't contain any data.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.FormData.Data">
            <summary>
                The key-value pairs that represent segments of the form data.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.FormData.#ctor(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
                Creates a new instance containing the specified key-value pairs.
            </summary>
            <param name="data"> The key-value pairs that represent segments of the form data.</param>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.AuthenticateParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Net.INetwork.AuthenticateHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.AuthenticateParameters.Host">
            <summary>
                Gets the host of the service issuing the authentication challenge.
            </summary>
            <value>The host of the service issuing the authentication challenge.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.AuthenticateParameters.IsProxy">
            <summary>
                Indicates whether this authentication challenge came from a server or a proxy.
            </summary>
            <value><c>true</c> if this authentication challenge came from a server or a proxy, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.AuthenticateParameters.Port">
            <summary>
                Gets the port of the service issuing the authentication challenge.
            </summary>
            <value>The port of the service issuing the authentication challenge.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.AuthenticateParameters.Realm">
            <summary>
                Gets the realm of the authentication challenge. This method can return empty string.
            </summary>
            <value>The realm of the authentication challenge. Can be null or empty string.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.AuthenticateParameters.Scheme">
            <summary>
                Gets the authentication scheme used, such as "basic" or "digest". In case of FTP server, this method returns empty
                string.
            </summary>
            <value>The authentication scheme used, such as "basic" or "digest".</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.AuthenticateParameters.Url">
            <summary>
                Gets the URL of a web page that causes authentication.
            </summary>
            <value>The URL of a web page that causes authentication.</value>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.AuthenticateParameters.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.AuthenticateResponse">
            <summary>
                A response for the <see cref="P:DotNetBrowser.Net.INetwork.AuthenticateHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.AuthenticateResponse.Password">
            <summary>
                Gets the password that will be used for authenticating on a server or a proxy.
            </summary>
            <value>The </value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.AuthenticateResponse.Username">
            <summary>
                Gets the username that will be used for authenticating on a server or a proxy.
            </summary>
            <value>The username that will be used for authenticating on a server or a proxy.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.AuthenticateResponse.Status">
            <summary>
                Gets the authentication status.
            </summary>
            <value>The authentication status.</value>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.AuthenticateResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.AuthenticateResponse" /> that cancels authentication process.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.AuthenticateResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.AuthenticateHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.AuthenticateResponse.Continue(System.String,System.String)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.AuthenticateResponse" /> that continues authentication
                process with the specified credentials.
            </summary>
            <param name="username">Username used for authentication</param>
            <param name="password">Password used for authentication</param>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.AuthenticateResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.AuthenticateHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.AuthenticationStatus">
            <summary>
                Represents authentication status
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.AuthenticationStatus.Continue">
            <summary>
                Authentication must be continued.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.AuthenticationStatus.Cancel">
            <summary>
                Authentication must be canceled.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.CanAccessFileParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Net.INetwork.CanAccessFileHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.CanAccessFileParameters.AbsolutePath">
            <summary>
                Gets the absolute path to the file the request would like to access.
            </summary>
            <value>The absolute path to the file the request would like to access.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.CanAccessFileParameters.Url">
            <summary>
                Gets the URL of the request.
            </summary>
            <value>The URL of the request.</value>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.CanAccessFileResponse">
            <summary>
                A response for the <see cref="P:DotNetBrowser.Net.INetwork.CanAccessFileHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.CanAccessFileResponse.Can">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.CanAccessFileResponse" /> that allows access to the file.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.CanAccessFileResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.CanAccessFileHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.CanAccessFileResponse.Cannot">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.CanAccessFileResponse" /> that denies access to the file.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.CanAccessFileResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.CanAccessFileHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.CanGetCookiesParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Net.INetwork.CanGetCookiesHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.CanGetCookiesParameters.Cookies">
            <summary>
                Gets a collection of cookies that are going to be sent with the URL request.
            </summary>
            <value>A collection of cookies that are going to be sent with the URL request.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.CanGetCookiesParameters.Url">
            <summary>
                Gets the URL associated with the cookies.
            </summary>
            <value>The URL associated with the cookies.</value>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.CanGetCookiesResponse">
            <summary>
                A response for the <see cref="P:DotNetBrowser.Net.INetwork.CanGetCookiesHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.CanGetCookiesResponse.Allow">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.CanGetCookiesResponse" /> instance that
                allows sending cookies back to web server.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.CanGetCookiesResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.CanGetCookiesHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.CanGetCookiesResponse.Deny">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.CanGetCookiesResponse" /> instance that
                denies sending cookies back to web server.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.CanGetCookiesResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.CanGetCookiesHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.CanSetCookieParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Net.INetwork.CanSetCookieHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.CanSetCookieParameters.Cookie">
            <summary>
                Gets the cookie received from the web server.
            </summary>
            <value>The cookie received from the web server.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.CanSetCookieParameters.Url">
            <summary>
                Gets the URL associated with the cookie.
            </summary>
            <value>The URL associated with the cookie.</value>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.CanSetCookieResponse">
            <summary>
                A response for the <see cref="P:DotNetBrowser.Net.INetwork.CanSetCookieHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.CanSetCookieResponse.Allow">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.CanSetCookieResponse" /> that allows saving the cookie.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.CanSetCookieResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.CanSetCookieHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.CanSetCookieResponse.Deny">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.CanSetCookieResponse" /> that denies saving the cookie.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.CanSetCookieResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.CanSetCookieHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.CertificateVerificationState">
            <summary>
                Represents the results of the certificate verification.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.CertificateVerificationState.Valid">
            <summary>
                SSL certificate should be accepted.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.CertificateVerificationState.Invalid">
            <summary>
                SSL certificate is invalid and must be rejected.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.CertificateVerificationState.Default">
            <summary>
                Let Chromium decided whether SSL certificate should be accepted or rejected.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.HeadersResponseStatus">
            <summary>
                Represents the response status returned from the headers' handlers.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.HeadersResponseStatus.OverrideHeaders">
            <summary>
                Override headers.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.HeadersResponseStatus.Continue">
            <summary>
                Continue the request and do not modify its headers.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.InterceptRequestParameters">
            <summary>
                The parameters of the scheme handler.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.InterceptRequestParameters.Headers">
            <summary>
                Gets the collection of HTTP headers sent in the scope of the request.
            </summary>
            <value>The collection of HTTP headers sent in the scope of the request.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.InterceptRequestParameters.UploadData">
            <summary>
                Gets the data uploaded in the scope of the request.
            </summary>
            <value>The data uploaded in the scope of the request.</value>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.InterceptRequestResponse">
            <summary>
                A response for the scheme handler.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.InterceptRequestResponse.IsIntercepted">
            <summary>
                Indicates if the request should be intercepted.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.InterceptRequestResponse.Intercept(DotNetBrowser.Net.UrlRequestJob)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.InterceptRequestResponse" /> instance indicating that
                the request should be intercepted.
            </summary>
            <param name="job">
                The <see cref="P:DotNetBrowser.Net.Handlers.InterceptRequestResponse.UrlRequestJob" /> providing data of the HTTP response
                that can be created using the <see cref="M:DotNetBrowser.Net.INetwork.CreateUrlRequestJob(DotNetBrowser.Net.UrlRequest,DotNetBrowser.Net.Handlers.UrlRequestJobOptions)" /> method.
            </param>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.InterceptRequestResponse" /> instance that can be used as a
                return value in handler implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.InterceptRequestResponse.Proceed">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.InterceptRequestResponse" /> instance indicating that
                the request should be handled by the Chromium engine.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.InterceptRequestResponse" /> instance that can be used as a
                return value in the scheme handler implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.NetworkParameters">
            <summary>
                The base class for <see cref="T:DotNetBrowser.Net.INetwork" />-related handlers parameters.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.NetworkParameters.Network">
            <summary>
                The <see cref="T:DotNetBrowser.Net.INetwork" /> instance associated with the handler.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.INetwork" /> instance associated with the handler.</value>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.ReceiveHeadersParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Net.INetwork.ReceiveHeadersHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.ReceiveHeadersParameters.Charset">
            <summary>
                Gets the charset in lower case from the headers. If there's no charset,
                returns empty string.
            </summary>
            <value>The charset in lower case from the headers.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.ReceiveHeadersParameters.ContentLength">
            <summary>
                Gets the number of the content length.
            </summary>
            <value>The number of the content length.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.ReceiveHeadersParameters.Headers">
            <summary>
                Gets the collection of HTTP headers with all its values.
            </summary>
            <value>The collection of HTTP headers with all its values.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.ReceiveHeadersParameters.MimeType">
            <summary>
                Gets the MIME type in lower case from the headers. If there's no MIME
                type, returns empty string.
            </summary>
            <value>The MIME type in lower case from the headers.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.ReceiveHeadersParameters.StatusLine">
            <summary>
                Gets the first line of a Response message which is the StatusLine,
                consisting of the protocol version followed by a numeric status code
                and its associated textual phrase.
            </summary>
            <value>The first line of a Response message which is the StatusLine.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.ReceiveHeadersParameters.StatusText">
            <summary>
                Gets the status text.
            </summary>
            <value>The status text.</value>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse">
            <summary>
                The response for the <see cref="P:DotNetBrowser.Net.INetwork.ReceiveHeadersHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse.HttpHeaders">
            <summary>
                Gets the collection of the of HTTP headers with all its values.
            </summary>
            <value>The collection of the of HTTP headers with all its values.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse.ResponseStatus">
            <summary>
                Gets the response status.
            </summary>
            <value>The response status.</value>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse.Continue">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse" /> that uses headers without modification.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.ReceiveHeadersHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse.OverrideHeaders(System.Collections.Generic.IEnumerable{DotNetBrowser.Net.HttpHeader})">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse" /> that overrides the received headers.
            </summary>
            <param name="httpHeaders">HttpHeaders used for overriding</param>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.ReceiveHeadersHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.ResourceType">
            <summary>
                The type of the resource being loaded.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.UnknownResource">
            <summary>
                The resource of the unknown type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.MainFrame">
            <summary>
                Top level page.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.SubFrame">
            <summary>
                Frame or IFRAME.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.Stylesheet">
            <summary>
                A CSS stylesheet.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.Script">
            <summary>
                An external script.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.Image">
            <summary>
                An image (jpg/gif/png/etc).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.FontResource">
            <summary>
                A font.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.SubResource">
            <summary>
                An "other" sub-resource.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.Object">
            <summary>
                An object (or embed) tag for a plugin, or a resource that a plugin requested.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.Media">
            <summary>
                A media resource.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.Worker">
            <summary>
                The main resource of a dedicated worker.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.SharedWorker">
            <summary>
                The main resource of a shared worker.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.Prefetch">
            <summary>
                An explicitly requested prefetch.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.Favicon">
            <summary>
                A favicon.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.Xhr">
            <summary>
                A XMLHttpRequest.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.Ping">
            <summary>
                A ping request for &lt;a ping&gt;.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.ServiceWorker">
            <summary>
                The main resource of a service worker.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.CspReport">
            <summary>
                The Content Security Policy report.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Handlers.ResourceType.PluginResource">
            <summary>
                The main plugin resource.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.SendUploadDataParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Net.INetwork.SendUploadDataHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.SendUploadDataParameters.UploadData">
            <summary>
                The upload data associated with a `UrlRequest`. The upload data can be in the `text/plain`,
                `application/x-www-form-urlencoded`, or `multipart/form-data` format.The upload data type depends on the
                content of the `Content-Type` header.If the `Content-Type` header is missing or doesn't include
                a valid substring indicating the corresponding upload data type, the upload data will be in a binary
                format.
            </summary>
            <value>
                The <see cref="T:DotNetBrowser.Net.IUploadData" /> instance representing the upload data associated
                with a `UrlRequest` or <c>null</c> if there are no associated upload data.
            </value>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.SendUploadDataResponse">
            <summary>
                The response for the <see cref="P:DotNetBrowser.Net.INetwork.SendUploadDataHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.SendUploadDataResponse.UploadData">
            <summary>
                The upload data associated with a `UrlRequest`. The upload data can be in the `text/plain`,
                `application/x-www-form-urlencoded`, or `multipart/form-data` format.The upload data type depends on the
                content of the `Content-Type` header.If the `Content-Type` header is missing or doesn't include
                a valid substring indicating the corresponding upload data type, the upload data will be in a binary
                format.
            </summary>
            <value>
                The <see cref="T:DotNetBrowser.Net.IUploadData" /> instance representing the upload data associated
                with a `UrlRequest` or <c>null</c> if there are no associated upload data.
            </value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Overridden">
            <summary>
                Indicates whether the upload data were overridden.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Continue">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.SendUploadDataResponse" /> that uses the original upload data.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.SendUploadDataResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.SendUploadDataHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Override(DotNetBrowser.Net.BytesData)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.SendUploadDataResponse" /> that overrides the upload data.
            </summary>
            <param name="uploadData">ByteData used for overriding</param>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.SendUploadDataResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.SendUploadDataHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Override(DotNetBrowser.Net.TextData)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.SendUploadDataResponse" /> that overrides the upload data.
            </summary>
            <param name="uploadData">TextData used for overriding</param>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.SendUploadDataResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.SendUploadDataHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Override(DotNetBrowser.Net.FormData)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.SendUploadDataResponse" /> that overrides the upload data.
            </summary>
            <param name="uploadData">FormData used for overriding</param>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.SendUploadDataResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.SendUploadDataHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Override(DotNetBrowser.Net.MultipartFormData)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.SendUploadDataResponse" /> that overrides the upload data.
            </summary>
            <param name="uploadData">MultipartFormData used for overriding</param>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.SendUploadDataResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.SendUploadDataHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.SendUrlRequestParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Net.INetwork.SendUrlRequestHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.SendUrlRequestParameters.Browser">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance that initiated this request.
            </summary>
            <value>
                The <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance or <c>null</c> if this instance
                has not been determined or not available anymore.
            </value>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.SendUrlRequestResponse">
            <summary>
                A response of the <see cref="P:DotNetBrowser.Net.INetwork.SendUrlRequestHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.SendUrlRequestResponse.UrlToRequest">
            <summary>
                Gets the new URL to request.
            </summary>
            <value>The new URL to request.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.SendUrlRequestResponse.IsUrlOverridden">
            <summary>
                Indicates if the URL is overridden.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.SendUrlRequestResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.SendUrlRequestResponse" /> that
                cancels loading process with the <see cref="F:DotNetBrowser.Net.NetError.Aborted" /> code.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.SendUrlRequestResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.SendUrlRequestHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.SendUrlRequestResponse.Continue">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.SendUrlRequestResponse" /> that
                continues loading process with the requested URL.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.SendUrlRequestResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.SendUrlRequestHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.SendUrlRequestResponse.Override(System.String)">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.SendUrlRequestResponse" /> that
                overrides the requested URL.
            </summary>
            <param name="url">New URL used for override</param>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.SendUrlRequestResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.SendUrlRequestHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.StartTransactionParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Net.INetwork.StartTransactionHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.StartTransactionParameters.Headers">
            <summary>
                Gets the collection of the of HTTP headers with all its values.
            </summary>
            <value>The collection of the of HTTP headers with all its values.</value>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.StartTransactionResponse">
            <summary>
                A response for the <see cref="P:DotNetBrowser.Net.INetwork.StartTransactionHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.StartTransactionResponse.HttpHeaders">
            <summary>
                Gets the collection of the of HTTP headers with all its values.
            </summary>
            <value>The collection of the of HTTP headers with all its values.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.StartTransactionResponse.ResponseStatus">
            <summary>
                Gets the response status.
            </summary>
            <value>The response status.</value>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.StartTransactionResponse.Continue">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.StartTransactionResponse" /> that starts the transaction
                with the original headers.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.StartTransactionResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.StartTransactionHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.StartTransactionResponse.OverrideHeaders(System.Collections.Generic.IEnumerable{DotNetBrowser.Net.HttpHeader})">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.StartTransactionResponse" /> that overrides
                headers and starts the transaction
            </summary>
            <param name="httpHeaders">HttpHeaders used for overriding</param>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.StartTransactionResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.StartTransactionHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.UrlRequestJobOptions">
            <summary>
                The options needed to create the <see cref="T:DotNetBrowser.Net.UrlRequestJob" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.UrlRequestJobOptions.Headers">
            <summary>
                Gets or sets the list of the HTTP headers that will be a part of the response.
            </summary>
            <value>he list of the HTTP headers that will be a part of the response.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.UrlRequestJobOptions.HttpStatusCode">
            <summary>
                Gets or sets the HTTP status code of the response.
            </summary>
            <value>
                The HTTP status code of the response.
                The default value is `HttpStatusCode.OK`.
            </value>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.UrlRequestParameters">
            <summary>
                The base class for all the <see cref="T:DotNetBrowser.Net.INetwork" />-related handlers parameters containing
                <see cref="T:DotNetBrowser.Net.UrlRequest" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.UrlRequestParameters.UrlRequest">
            <summary>
                The URL request received from the Chromium engine.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.VerifyCertificateParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Net.INetwork.VerifyCertificateHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.VerifyCertificateParameters.Certificate">
            <summary>
                Gets the SSL certificate to verify.
            </summary>
            <value>The SSL certificate to verify.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.VerifyCertificateParameters.HostName">
            <summary>
                Gets the SSL server host name.
            </summary>
            <value>The SSL server host name.</value>
        </member>
        <member name="P:DotNetBrowser.Net.Handlers.VerifyCertificateParameters.VerifyStatuses">
            <summary>
                Gets the verification statuses that indicate result
                of SSL certificate verification by the Chromium engine.
                If this collection is empty, then default SSL certificate verifier couldn't find any issues with the
                given certificate, so it's a valid certificate.
            </summary>
            <value>
                The verification statuses that indicate result
                of SSL certificate verification by the Chromium engine.
            </value>
        </member>
        <member name="T:DotNetBrowser.Net.Handlers.VerifyCertificateResponse">
            <summary>
                A response for the <see cref="P:DotNetBrowser.Net.INetwork.VerifyCertificateHandler" />
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.VerifyCertificateResponse.Default">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.VerifyCertificateResponse" /> that lets Chromium decide
                whether SSL certificate should be accepted or rejected.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.VerifyCertificateResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.VerifyCertificateHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.VerifyCertificateResponse.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.VerifyCertificateResponse.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.VerifyCertificateResponse.Invalid">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.VerifyCertificateResponse" /> that marks SSL certificate
                as invalid and must be rejected.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.VerifyCertificateResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.VerifyCertificateHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Net.Handlers.VerifyCertificateResponse.Valid">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Net.Handlers.VerifyCertificateResponse" /> that marks SSL certificate
                as valid and must be accepted.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Net.Handlers.VerifyCertificateResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Net.INetwork.VerifyCertificateHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Net.HostPortPair">
            <summary>
                A host/port pair of the URI.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.HostPortPair.Host">
            <summary>
                Gets the host of the URI.
            </summary>
            <value>The host of the URI.</value>
        </member>
        <member name="P:DotNetBrowser.Net.HostPortPair.Port">
            <summary>
                Gets the port of the URI.
            </summary>
            <value>The port of the URI.</value>
        </member>
        <member name="M:DotNetBrowser.Net.HostPortPair.HasPort">
            <summary>
                Checks whether this host/port pair has a port.
            </summary>
            <returns>true if the port of this host/port pair is greater than null.</returns>
        </member>
        <member name="M:DotNetBrowser.Net.HostPortPair.Parse(System.String)">
            <summary>
                Converts a string representation of a host/port pair to the <see cref="T:DotNetBrowser.Net.HostPortPair" /> instance.
            </summary>
            <param name="hostPort">The string representation of the host/port pair separated with the colon.</param>
            <returns>the <see cref="T:DotNetBrowser.Net.HostPortPair" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Net.HostPortPair.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Net.HttpHeader">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Net.HttpHeader.Name">
            <inheritdoc />
        </member>
        <member name="P:DotNetBrowser.Net.HttpHeader.Values">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Net.HttpHeader.#ctor(System.String,System.String[])">
            <summary>
                Creates the HTTP header instance using its name and values collection.
            </summary>
            <param name="name">The HTTP header name</param>
            <param name="values">The collection of the HTTP header values</param>
        </member>
        <member name="T:DotNetBrowser.Net.IFileValue">
            <summary>
                File data.
            </summary>
            <remarks>
                <para>
                    Depending on how the request was constructed can contain the path to a file, or the
                    bytes representing a file.
                </para>
                <para>
                    For example, it contains the path when the value is taken from an
                    <c> &lt;input type="file"&gt; </c>
                    element of the submitted form.
                </para>
                <para>
                    May contain bytes in case the request in the <c>multipart/form-data</c>
                    format was constructed manually in a JavaScript code.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Net.IFileValue.Bytes">
            <summary>
                The file value as an array of bytes.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.IFileValue.ContentType">
            <summary>
                The content type determined by the file extension. Equals
                <c>application/octet-stream</c> when there is no MIME type associated with the file
                extension.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.IFileValue.FileName">
            <summary>
                The file name.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.IFileValue.FilePath">
            <summary>
                The file value as a file path.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.IHttpAuthPreferences">
            <summary>
                The HTTP authorization preferences.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.IHttpAuthPreferences.DelegateWhiteList">
            <summary>
                Gets or sets the HTTP network delegate authorization white list of URLs.
                By default, network delegate white list is empty.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.IHttpAuthPreferences" /> object has already been disposed.</exception>
            <value>The comma/semicolon separated HTTP network delegate authorization white list of URLs.</value>
        </member>
        <member name="P:DotNetBrowser.Net.IHttpAuthPreferences.ServerWhiteList">
            <summary>
                Gets or sets the server HTTP authorization white list of URLs.
                By default, server white list is empty.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.IHttpAuthPreferences" /> object has already been disposed.</exception>
            <value>The comma/semicolon separated server HTTP authorization white list of URLs.</value>
        </member>
        <member name="T:DotNetBrowser.Net.IHttpHeader">
            <summary>
                Represents the single HTTP header with all its values.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.IHttpHeader.Name">
            <summary>
                Gets the HTTP header name.
            </summary>
            <value>The HTTP header name.</value>
        </member>
        <member name="P:DotNetBrowser.Net.IHttpHeader.Values">
            <summary>
                Gets the collection of the HTTP header values.
            </summary>
            <value>The collection of the HTTP header values.</value>
        </member>
        <member name="T:DotNetBrowser.Net.INetwork">
            <summary>
                Allows access and modifying to the network-level activities.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.AcceptLanguage">
            <summary>
                Gets or sets the <c>Accept-Language</c> request header value.
            </summary>
            <remarks>
                This field restricts the set of natural languages that are preferred as a response to the request.
                The default <c>Accept-Language</c> is <c>"en-us"</c>.
                See <see href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html" />
                W3 Documentation.
            </remarks>
            <example>
                <c>"fr, en-gb;q=0.8, en;q=0.7"</c> would mean: "I prefer French, but
                will accept British English and other types of English."
                Note, that all languages which are assigned a quality factor
                greater than 0 are acceptable.
            </example>
            <exception cref="T:System.ArgumentException">The value is set to null or an empty string.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <value>The Accept-Language value.</value>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.AuthenticateHandler">
            <summary>
                Gets or sets a handler that is used when the website requests authentication.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.AuthenticateResponse.Continue(System.String,System.String)" /> method
                    to continue authentication process.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.AuthenticateResponse.Cancel" /> method
                    to cancel authentication process.
                </para>
                <para>
                    If exception occurs inside the handler, the default behavior will be
                    applied - the <see cref="M:DotNetBrowser.Net.Handlers.AuthenticateResponse.Cancel" /> method will be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.CanAccessFileHandler">
            <summary>
                Gets or sets a handler that is used when the Chromium engine is about to access the requested file. Can be used
                to disallow accessing the file.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.CanAccessFileResponse.Can" /> method
                    to allow access to the file.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.CanAccessFileResponse.Cannot" /> method
                    to disallow access to the file.
                </para>
                <para>
                    If exception occurs inside the handler, the default behavior will be
                    applied - the <see cref="M:DotNetBrowser.Net.Handlers.CanAccessFileResponse.Can" /> method will be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.CanGetCookiesHandler">
            <summary>
                Gets or sets a handler that is used when Chromium engine decides
                whether cookies can be sent back to the web server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.CanGetCookiesResponse.Allow" /> method to
                    allow cookies to be sent to the web server.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.CanGetCookiesResponse.Deny" /> method to
                    disallow cookies to be sent to the web server.
                </para>
                <para>
                    If exception occurs inside the handler, then default behavior will be
                    applied - the <see cref="M:DotNetBrowser.Net.Handlers.CanGetCookiesResponse.Allow" /> method will be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.CanSetCookieHandler">
            <summary>
                Gets or sets a handler that is used when Chromium engine decides
                whether cookie can be saved for the URL or not.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.CanSetCookieResponse.Allow" /> method to
                    allow engine to save the cookie.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.CanSetCookieResponse.Deny" /> method to
                    deny engine to save the cookie. It will not be available
                    via the <see cref="T:DotNetBrowser.Cookies.ICookieStore" /> object.
                </para>
                <para>
                    If exception occurs inside the handler, then default behavior will be
                    applied - the <see cref="M:DotNetBrowser.Net.Handlers.CanSetCookieResponse.Allow" /> method will be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.Engine">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <value>The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.</value>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.HttpAuthPreferences">
            <summary>
                Gets the HTTP authorization preferences.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <value>The <see cref="T:DotNetBrowser.Net.IHttpAuthPreferences" /> instance associated with this object.</value>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.ReceiveHeadersHandler">
            <summary>
                Gets or sets a handler that is used each time that an HTTP(S) response header is received. Due to redirects
                and authentication requests this can happen multiple times per request. This event is intended
                to allow adding, modifying, and deleting HTTP response headers, such as incoming "Set-Cookie" headers.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse.OverrideHeaders(System.Collections.Generic.IEnumerable{DotNetBrowser.Net.HttpHeader})" /> method to override headers.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse.Continue" /> method to continue without modifications.
                </para>
                <para>
                    If exception occurs inside the handler, the default behavior will be
                    applied - the <see cref="M:DotNetBrowser.Net.Handlers.ReceiveHeadersResponse.Continue" /> method will be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.SendUploadDataHandler">
            <summary>
                Gets or sets a handler that is used when the upload data is about to send to the web server.
                Can be used to override the upload data before it is sent.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <remarks>
                <para>
                    Use one of the following methods to modify the upload data:
                    <ul>
                        <li>
                            <see cref="M:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Override(DotNetBrowser.Net.TextData)" />
                        </li>
                        <li>
                            <see cref="M:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Override(DotNetBrowser.Net.FormData)" />
                        </li>
                        <li>
                            <see cref="M:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Override(DotNetBrowser.Net.MultipartFormData)" />
                        </li>
                        <li>
                            <see cref="M:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Override(DotNetBrowser.Net.BytesData)" />
                        </li>
                    </ul>
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Continue" /> method if you
                    do not need to modify the upload data.
                </para>
                <para>
                    If exception occurs inside the handler, the default behavior will be
                    applied - the <see cref="M:DotNetBrowser.Net.Handlers.SendUploadDataResponse.Continue" /> method will be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.SendUrlRequestHandler">
            <summary>
                Gets or sets a handler that is used when an HTTP request is about to occur. It can be used to override the
                requested URL and
                redirect the request to another location.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.SendUrlRequestResponse.Override(System.String)" /> method to
                    override the requested URL.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.SendUrlRequestResponse.Continue" /> method to
                    proceed without changes.
                </para>
                <para>
                    If exception occurs inside the handler, the default behavior will be
                    applied - the <see cref="M:DotNetBrowser.Net.Handlers.SendUrlRequestResponse.Continue" /> method will be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.StartTransactionHandler">
            <summary>
                Gets or sets a handler that is used when the request is about to start the transaction process.
                It allows adding, modifying, and deleting HTTP request headers.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.StartTransactionResponse.OverrideHeaders(System.Collections.Generic.IEnumerable{DotNetBrowser.Net.HttpHeader})" /> method
                    to override headers.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.StartTransactionResponse.Continue" /> method
                    to continue with original headers.
                </para>
                <para>
                    If exception occurs inside the handler, the default behavior will be
                    applied - the <see cref="M:DotNetBrowser.Net.Handlers.StartTransactionResponse.Continue" /> method will be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.UserAgent">
            <summary>
                Gets the default user-agent string.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <remarks>
                <para>
                    The default user-agent string can be configured through the
                    <see cref="P:DotNetBrowser.Engine.EngineOptions.Builder.UserAgent" /> property. If the default
                    user-agent string has not been specified, then this method returns a string obtained from the
                    Chromium engine.
                </para>
            </remarks>
            <value>The default user-agent string.</value>
        </member>
        <member name="P:DotNetBrowser.Net.INetwork.VerifyCertificateHandler">
            <summary>
                Gets or sets a handler that is used to verify the SSL certificate provided by the web server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.VerifyCertificateResponse.Valid" /> method if the SSL certificate
                    should be accepted.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.VerifyCertificateResponse.Invalid" /> method if the SSL certificate
                    must be rejected.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Net.Handlers.VerifyCertificateResponse.Default" /> method to let Chromium decide
                    whether
                    SSL certificate should be accepted or rejected.
                </para>
                <para>
                    If this method throws an exception, then default behavior will be
                    applied - the <see cref="M:DotNetBrowser.Net.Handlers.VerifyCertificateResponse.Default" /> method will be used.
                </para>
            </remarks>
        </member>
        <member name="E:DotNetBrowser.Net.INetwork.RedirectResponseCodeReceived">
            <summary>
                Occurs when the redirect has been occured.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Net.INetwork.PacScriptErrorOccurred">
            <summary>
                Occurs when the error has been occured in the PAC script.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Net.INetwork.ResponseStarted">
            <summary>
                Occurs when the response has been started.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Net.INetwork.RequestCompleted">
            <summary>
                Occurs when the request has been completed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Net.INetwork.RequestDestroyed">
            <summary>
                Occurs when the request has been destroyed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Net.INetwork.ResponseBytesReceived">
            <summary>
                Occurs when a part of HTTP response body has been received over the network.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Net.INetwork.CreateUrlRequestJob(DotNetBrowser.Net.UrlRequest,DotNetBrowser.Net.Handlers.UrlRequestJobOptions)">
            <summary>
                Creates a new <see cref="T:DotNetBrowser.Net.UrlRequestJob" /> instance with the given <paramref name="options" />.
                <para>The URL request job is used to provide the response data for the intercepted URL request.</para>
            </summary>
            <param name="request">The intercepted <see cref="T:DotNetBrowser.Net.UrlRequest" /> instance to bind the job with.</param>
            <param name="options">The options which are used to initialize the <see cref="T:DotNetBrowser.Net.UrlRequestJob" /></param>
            <returns>A new <see cref="T:DotNetBrowser.Net.UrlRequestJob" /> instance.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Net.INetwork" /> object has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Net.IUploadData">
            <summary>
                The upload data associated with a `UrlRequest`. The upload data can be in the `text/plain`,
                `application/x-www-form-urlencoded`, or `multipart/form-data` format.The upload data type depends on the
                content of the `Content-Type` header. If the `Content-Type` header is missing or doesn't include
                a valid substring indicating the corresponding upload data type, the upload data will be in a binary
                format.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.IUploadData`1">
            <summary>
                The upload data associated with a `UrlRequest`. The upload data can be in the `text/plain`,
                `application/x-www-form-urlencoded`, or `multipart/form-data` format.The upload data type depends on the
                content of the `Content-Type` header. If the `Content-Type` header is missing or doesn't include
                a valid substring indicating the corresponding upload data type, the upload data will be in a binary
                format.
            </summary>
            <typeparam name="T">The upload data type.</typeparam>
        </member>
        <member name="P:DotNetBrowser.Net.IUploadData`1.Data">
            <summary>
                Gets the upload data.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.IUrlRequestJobImpl.IsClosed">
            <summary>
                Indicates if the request is handled and all the data is sent.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.IUrlRequestJobImpl.Complete">
            <summary>
                This method marks the request as completed. It can be used to indicate that an error occurred during writing the
                response data.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.IUrlRequestJobImpl.Fail">
            <summary>
                This method marks the request as failed. It can be used to indicate that an error occurred during writing the
                response data.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.IUrlRequestJobImpl.Write(System.Byte[])">
            <summary>
                Appends a chunk of the response data. This method may be called multiple
                times to append several chunks. When all the chunks are written either the <see cref="M:DotNetBrowser.Net.IUrlRequestJobImpl.Complete" />
                or <see cref="M:DotNetBrowser.Net.IUrlRequestJobImpl.Fail" /> method must be called to indicate that the request is
                completed or failed.
            </summary>
            <param name="data">The response data bytes.</param>
        </member>
        <member name="T:DotNetBrowser.Net.MimeType">
            <summary>
                The MIME type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.ApplicationPdf">
            <summary>
                Gets the "application/pdf" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "application/pdf" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.ApplicationOctetStream">
            <summary>
                Gets the "application/octet-stream" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "application/octet-stream" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.ApplicationZip">
            <summary>
                Gets the "application/zip" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "application/zip" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.ApplicationFormUrlEncoded">
            <summary>
                Gets the "application/x-www-form-urlencoded" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "application/x-www-form-urlencoded" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.ApplicationXml">
            <summary>
                Gets the "application/xml" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "application/xml" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.ApplicationJson">
            <summary>
                Gets the "application/json" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "application/json" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.ImageGif">
            <summary>
                Gets the "image/gif" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "image/gif" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.ImageJpeg">
            <summary>
                Gets the "image/jpeg" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "image/jpeg" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.ImagePng">
            <summary>
                Gets the "image/png" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "image/png" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.TextHtml">
            <summary>
                Gets the "text/html" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "text/html" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.TextCss">
            <summary>
                Gets the "text/css" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "text/css" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.TextPlain">
            <summary>
                Gets the "text/plain" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "text/plain" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.TextJavascript">
            <summary>
                Gets the "text/javascript" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "text/javascript" MIME type.</value>
        </member>
        <member name="F:DotNetBrowser.Net.MimeType.MultipartFormData">
            <summary>
                Gets the "multipart/form-data" MIME type.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Net.MimeType" /> instance associated with the "multipart/form-data" MIME type.</value>
        </member>
        <member name="M:DotNetBrowser.Net.MimeType.Create(System.String)">
            <summary>
                Creates the MimeType instance from string representation.
            </summary>
            <param name="value">string representation</param>
            <returns>the corresponding <see cref="T:DotNetBrowser.Net.MimeType" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Net.MimeType.op_Explicit(System.String)~DotNetBrowser.Net.MimeType">
            <summary>
                Creates the MimeType instance from string representation.
            </summary>
            <param name="value">string representation</param>
            <returns>the corresponding <see cref="T:DotNetBrowser.Net.MimeType" /> instance.</returns>
        </member>
        <member name="T:DotNetBrowser.Net.MultipartFormData">
            <summary>
                The list of key-value pairs each representing a segment of a multi-part form data.
                Can be empty if the form doesn't contain any data.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.MultipartFormData.Data">
            <summary>
                The key-value pairs that represent segments of the multi-part form data.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.MultipartFormData.#ctor(System.Collections.Generic.IReadOnlyCollection{DotNetBrowser.Net.MultipartFormDataKeyValuePair})">
            <summary>
                Creates a new instance containing the specified key-value pairs.
            </summary>
            <param name="data"> The key-value pairs that represent segments of the multi-part form data.</param>
        </member>
        <member name="T:DotNetBrowser.Net.MultipartFormDataKeyValuePair">
            <summary>
                A key-value pair that represents a segment of a multi-part form data. Can contain values
                corresponding a form field content, an upload file content, etc.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.MultipartFormDataKeyValuePair.FileValue">
            <summary>
                The file representation of the data.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.MultipartFormDataKeyValuePair.Key">
            <summary>
                The form content segment key.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.MultipartFormDataKeyValuePair.StringValue">
            <summary>
                The string representation of the data.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.MultipartFormDataKeyValuePair.#ctor(System.String,DotNetBrowser.Net.FileValue)">
            <summary>
                Creates an instance from the given key and value.
            </summary>
            <param name="key">The form content segment key.</param>
            <param name="value">The segment value representing the file content.</param>
        </member>
        <member name="M:DotNetBrowser.Net.MultipartFormDataKeyValuePair.#ctor(System.String,System.String)">
            <summary>
                Creates an instance from the given key and value.
            </summary>
            <param name="key">The form content segment key.</param>
            <param name="value">
                The segment value representing the form content segment value. Can be empty if the
                <paramref name="key" />does not correspond to any value. For example, an empty
                form field
            </param>
        </member>
        <member name="T:DotNetBrowser.Net.NetError">
            <summary>
                The network errors.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.Undefined">
            <summary>
                Undefined
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.Ok">
            <summary>
                No error.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.IoPending">
            <summary>
                An asynchronous IO operation is not yet complete.  This usually does not
                indicate a fatal error.  Typically this error will be generated as a
                notification to wait for some external notification that the IO operation
                finally completed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.Failed">
            <summary>
                A generic failure occurred.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.Aborted">
            <summary>
                An operation was aborted ( due to user action).
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.InvalidArgument">
            <summary>
                An argument to the function is incorrect.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.InvalidHandle">
            <summary>
                The handle or file descriptor is invalid.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FileNotFound">
            <summary>
                The file or directory cannot be found.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.TimedOut">
            <summary>
                An operation timed out.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FileTooBig">
            <summary>
                The file is too large.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.Unexpected">
            <summary>
                An unexpected error.  This may be caused by a programming mistake or an invalid assumption.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.AccessDenied">
            <summary>
                Permission to access a resource, other than the network, was denied.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.NotImplemented">
            <summary>
                The operation failed because of unimplemented functionality.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.InsufficientResources">
            <summary>
                There were not enough resources to complete the operation.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.OutOfMemory">
            <summary>
                Memory allocation failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.UploadFileChanged">
            <summary>
                The file upload failed because the file's modification time was different from the expectation.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SocketNotConnected">
            <summary>
                The socket is not connected.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FileExists">
            <summary>
                The file already exists.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FilePathTooLong">
            <summary>
                The path or file name is too long.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FileNoSpace">
            <summary>
                Not enough room left on the disk.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FileVirusInfected">
            <summary>
                The file has a virus.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.BlockedByClient">
            <summary>
                The client chose to block the request.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.NetworkChanged">
            <summary>
                The network changed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.BlockedByAdministrator">
            <summary>
                The request was blocked by the URL blacklist configured by the domain administrator.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SocketIsConnected">
            <summary>
                The socket is already connected.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ConnectionClosed">
            <summary>
                A connection was closed  = corresponding to a TCP FIN.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ConnectionReset">
            <summary>
                A connection was reset  = corresponding to a TCP RST.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ConnectionRefused">
            <summary>
                A connection attempt was refused.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ConnectionAborted">
            <summary>
                A connection timed out as a result of not receiving an ACK for data sent.
                This can include a FIN packet that did not get ACK'd.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ConnectionFailed">
            <summary>
                A connection attempt failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.NameNotResolved">
            <summary>
                The host name could not be resolved.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.InternetDisconnected">
            <summary>
                The Internet connection has been lost.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslProtocolError">
            <summary>
                An SSL protocol error occurred.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.AddressInvalid">
            <summary>
                The IP address or port number is invalid  = e.g., cannot connect to the IP
                address 0 or the port 0.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.AddressUnreachable">
            <summary>
                The IP address is unreachable.  This usually means that there is no route
                to the specified host or network.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslClientAuthCertNeeded">
            <summary>
                The server requested a client certificate for SSL client authentication.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.TunnelConnectionFailed">
            <summary>
                A tunnel connection through the proxy could not be established.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.NoSslVersionsEnabled">
            <summary>
                No SSL protocol versions are enabled.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslVersionOrCipherMismatch">
            <summary>
                The client and server don't support a common SSL protocol version or cipher suite.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslRenegotiationRequested">
            <summary>
                The server requested a renegotiation  = rehandshake,.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ProxyAuthUnsupported">
            <summary>
                The proxy requested authentication  = for tunnel establishment, with an unsupported method.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertErrorInSslRenegotiation">
            <summary>
                During SSL renegotiation  = rehandshake,, the server sent a certificate with an error.
                Note: this error is not in the -2xx range so that it won't be handled as a certificate error.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.BadSslClientAuthCert">
            <summary>
                The SSL handshake failed because of a bad or missing client certificate.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ConnectionTimedOut">
            <summary>
                A connection attempt timed out.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.HostResolverQueueTooLarge">
            <summary>
                There are too many pending DNS resolves, so a request in the queue was aborted.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SocksConnectionFailed">
            <summary>
                Failed establishing a connection to the SOCKS proxy server for a target host.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SocksConnectionHostUnreachable">
            <summary>
                The SOCKS proxy server failed establishing connection to the target host
                because that host is unreachable.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.NpnNegotiationFailed">
            <summary>
                The request to negotiate an alternate protocol failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslNoRenegotiation">
            <summary>
                The peer sent an SSL no_renegotiation alert message.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.WinsockUnexpectedWrittenBytes">
            <summary>
                Winsock sometimes reports more data written than passed.  This is probably due to a broken LSP.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslDecompressionFailureAlert">
            <summary>
                An SSL peer sent us a fatal decompression_failure alert. This typically occurs when a peer
                selects DEFLATE compression in the mistaken belief that it supports it.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslBadRecordMacAlert">
            <summary>
                An SSL peer sent us a fatal bad_record_mac alert. This has been observed from servers with
                buggy DEFLATE support.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ProxyAuthRequested">
            <summary>
                The proxy requested authentication  = for tunnel establishment.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslUnsafeNegotiation">
            <summary>
                A known TLS strict server didn't offer the renegotiation extension.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslWeakServerEphemeralDhKey">
            <summary>
                The SSL server attempted to use a weak ephemeral Diffie-Hellman key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ProxyConnectionFailed">
            <summary>
                Could not create a connection to the proxy server. An error occurred either
                in resolving its name, or in connecting a socket to it. Note that this does
                NOT include failures during the actual "CONNECT" method of an HTTP proxy.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.MandatoryProxyConfigurationFailed">
            <summary>
                A mandatory proxy configuration could not be used. Currently this means that
                a mandatory PAC script could not be fetched, parsed or executed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.PreconnectMaxSocketLimit">
            <summary>
                We've hit the max socket limit for the socket pool while preconnecting.
                We don't bother trying to preconnect more sockets.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslClientAuthPrivateKeyAccessDenied">
            <summary>
                The permission to use the SSL client certificate's private key was denied.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslClientAuthCertNoPrivateKey">
            <summary>
                The SSL client certificate has no private key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ProxyCertificateInvalid">
            <summary>
                The certificate presented by the HTTPS Proxy was invalid.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.NameResolutionFailed">
            <summary>
                An error occurred when trying to do a name resolution  = DNS,.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.NetworkAccessDenied">
            <summary>
                Permission to access the network was denied. This is used to distinguish
                errors that were most likely caused by a firewall from other access denied errors.
                See also ERR_ACCESS_DENIED.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.TemporarilyThrottled">
            <summary>
                The request throttler module cancelled this request to avoid DDOS.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.HttpsProxyTunnelResponse">
            <summary>
                A request to create an SSL tunnel connection through the HTTPS proxy
                received a non-200  = OK, and non-407  = Proxy Auth, response. The response body
                might include a description of why the request failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslClientAuthSignatureFailed">
            <summary>
                <para>
                    We were unable to sign the CertificateVerify data of an SSL client auth
                    handshake with the client certificate's private key.
                </para>
                <para>
                    Possible causes for this include the user implicitly or explicitly
                    denying access to the private key, the private key may not be valid for
                    signing, the key may be relying on a cached handle which is no longer
                    valid, or the CSP won't allow arbitrary data to be signed.
                </para>
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.MsgTooBig">
            <summary>
                The message was too large for the transport.
                = for example a UDP message which exceeds size threshold,.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SpdySessionAlreadyExists">
            <summary>
                A SPDY session already exists, and should be used instead of this connection.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.WsProtocolError">
            <summary>
                Websocket protocol error. Indicates that we are terminating the connection
                due to a malformed frame or other protocol violation.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ProtocolSwitched">
            <summary>
                Connection was aborted for switching to another protocol. WebSocket abort
                SocketStream connection when alternate protocol is found.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.AddressInUse">
            <summary>
                Returned when attempting to bind an address that is already in use.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslHandshakeNotCompleted">
            <summary>
                An operation failed because the SSL handshake has not completed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslBadPeerPublicKey">
            <summary>
                SSL peer's public key is invalid.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SslPinnedKeyNotInCertChain">
            <summary>
                The certificate didn't match the built-in public key pins for the host name.
                The pins are set in net/http/transport_security_state.cc and require that one
                of a set of public keys exist on the path from the leaf to the root.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ClientAuthCertTypeUnsupported">
            <summary>
                Server request for client certificate did not contain any types we support.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.OriginBoundCertGenerationTypeMismatch">
            <summary>
                Server requested one type of cert, then requested a different type while
                the first was still being generated.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertCommonNameInvalid">
            <summary>
                <para>
                    The server responded with a certificate whose common name did not match the host name.
                    This could mean:
                </para>
                <para>
                    1. An attacker has redirected our traffic to his server and is presenting a certificate
                    for which he knows the private key.
                </para>
                <para>
                    2. The server is misconfigured and responding with the wrong cert.
                </para>
                <para>
                    3. The user is on a wireless network and is being redirected to the network's login page.
                </para>
                <para>
                    4. The OS has used a DNS search suffix and the server doesn't have a certificate for
                    the abbreviated name in the address bar.
                </para>
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertDateInvalid">
            <summary>
                <para>
                    The server responded with a certificate that, by our clock, appears to
                    either not yet be valid or to have expired.  This could mean:
                </para>
                <para>
                    1. An attacker is presenting an old certificate for which he has managed
                    to obtain the private key.
                </para>
                <para>
                    2. The server is misconfigured and is not presenting a valid cert.
                </para>
                <para>
                    3. Our clock is wrong.
                </para>
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertAuthorityInvalid">
            <summary>
                <para>
                    The server responded with a certificate that is signed by an authority we don't trust.
                    The could mean:
                </para>
                <para>
                    1. An attacker has substituted the real certificate for a cert that
                    contains his public key and is signed by his cousin.
                </para>
                <para>
                    2. The server operator has a legitimate certificate from a CA we don't
                    know about, but should trust.
                </para>
                <para>
                    3. The server is presenting a self-signed certificate, providing no
                    defense against active attackers  = but foiling passive attackers.
                </para>
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertContainsErrors">
            <summary>
                <para>
                    The server responded with a certificate that contains errors.
                    This error is not recoverable.
                </para>
                <para>
                    MSDN describes this error as follows:
                    "The SSL certificate contains errors."
                    NOTE: It's unclear how this differs from ERR_CERT_INVALID. For consistency,
                    use that code instead of this one from now on.
                </para>
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertNoRevocationMechanism">
            <summary>
                The certificate has no mechanism for determining if it is revoked.  In
                effect, this certificate cannot be revoked.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertUnableToCheckRevocation">
            <summary>
                <para>
                    Revocation information for the security certificate for this site is not
                    available.  This could mean:
                </para>
                <para>
                    1. An attacker has compromised the private key in the certificate and is
                    blocking our attempt to find out that the cert was revoked.
                </para>
                <para>
                    2. The certificate is unrevoked, but the revocation server is busy or
                    unavailable.
                </para>
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertRevoked">
            <summary>
                The server responded with a certificate has been revoked.
                We have the capability to ignore this error, but it is probably not the
                thing to do.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertInvalid">
            <summary>
                <para>
                    The server responded with a certificate that is invalid.
                    This error is not recoverable.
                </para>
                <para>
                    MSDN describes this error as follows:
                    "The SSL certificate is invalid."
                </para>
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertWeakSignatureAlgorithm">
            <summary>
                The server responded with a certificate that is signed using a weak
                signature algorithm.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertNonUniqueName">
            <summary>
                The host name specified in the certificate is not unique.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertWeakKey">
            <summary>
                The server responded with a certificate that contains a weak key  = e.g.
                a too-small RSA key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CertEnd">
            <summary>
                The value immediately past the last certificate error code.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.InvalidUrl">
            <summary>
                The URL is invalid.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.DisallowedUrlScheme">
            <summary>
                The scheme of the URL is disallowed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.UnknownUrlScheme">
            <summary>
                The scheme of the URL is unknown.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.TooManyRedirects">
            <summary>
                Attempting to load an URL resulted in too many redirects.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.UnsafeRedirect">
            <summary>
                Attempting to load an URL resulted in an unsafe redirect  = e.g., a redirect
                to file:// is considered unsafe.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.UnsafePort">
            <summary>
                Attempting to load an URL with an unsafe port number.  These are port
                numbers that correspond to services, which are not robust to spurious input
                that may be constructed as a result of an allowed web construct  = e.g., HTTP
                looks a lot like SMTP, so form submission to port 25 is denied,.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.InvalidResponse">
            <summary>
                The server's response was invalid.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.InvalidChunkedEncoding">
            <summary>
                Error in chunked transfer encoding.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.MethodNotSupported">
            <summary>
                The server did not support the request method.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.UnexpectedProxyAuth">
            <summary>
                The response was 407  = Proxy Authentication Required,, yet we did not send
                the request to a proxy.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.EmptyResponse">
            <summary>
                The server closed the connection without sending any data.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ResponseHeadersTooBig">
            <summary>
                The headers section of the response is too large.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.PacStatusNotOk">
            <summary>
                The PAC requested by HTTP did not have a valid status code  = non-200.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.PacScriptFailed">
            <summary>
                The evaluation of the PAC script failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.RequestRangeNotSatisfiable">
            <summary>
                The response was 416  = Requested range not satisfiable, and the server cannot
                satisfy the range requested.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.MalformedIdentity">
            <summary>
                The identity used for authentication is invalid.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ContentDecodingFailed">
            <summary>
                Content decoding of the response body failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.NetworkIoSuspended">
            <summary>
                An operation could not be completed because all network IO
                is suspended.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SynReplyNotReceived">
            <summary>
                FLIP data received without receiving a SYN_REPLY on the stream.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.EncodingConversionFailed">
            <summary>
                Converting the response to target encoding failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.UnrecognizedFtpDirectoryListingFormat">
            <summary>
                The server sent an FTP directory listing in a format we do not understand.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.InvalidSpdyStream">
            <summary>
                Attempted use of an unknown SPDY stream id.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.NoSupportedProxies">
            <summary>
                There are no supported proxies in the provided list.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SpdyProtocolError">
            <summary>
                There is a SPDY protocol error.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.InvalidAuthCredentials">
            <summary>
                Credentials could not be established during HTTP Authentication.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.UnsupportedAuthScheme">
            <summary>
                An HTTP Authentication scheme was tried which is not supported on this
                machine.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.EncodingDetectionFailed">
            <summary>
                Detecting the encoding of the response failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.MissingAuthCredentials">
            <summary>
                = GSSAPI, No Kerberos credentials were available during HTTP Authentication.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.UnexpectedSecurityLibraryStatus">
            <summary>
                An unexpected, but documented, SSPI or GSSAPI status code was returned.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.MisconfiguredAuthEnvironment">
            <summary>
                The environment was not set up correctly for authentication  = for
                example, no KDC could be found or the principal is unknown.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.UndocumentedSecurityLibraryStatus">
            <summary>
                An undocumented SSPI or GSSAPI status code was returned.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ResponseBodyTooBigToDrain">
            <summary>
                The HTTP response was too big to drain.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ResponseHeadersMultipleContentLength">
            <summary>
                The HTTP response contained multiple distinct Content-Length headers.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.IncompleteSpdyHeaders">
            <summary>
                SPDY Headers have been received, but not all of them - status or version
                headers are missing, so we're expecting additional frames to complete them.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.PacNotInDhcp">
            <summary>
                No PAC URL configuration could be retrieved from DHCP. This can indicate
                either a failure to retrieve the DHCP configuration, or that there was no
                PAC URL configured in DHCP.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ResponseHeadersMultipleContentDisposition">
            <summary>
                The HTTP response contained multiple Content-Disposition headers.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ResponseHeadersMultipleLocation">
            <summary>
                The HTTP response contained multiple Location headers.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SpdyServerRefusedStream">
            <summary>
                SPDY server refused the stream. Client should retry. This should never be a
                user-visible error.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.SpdyPingFailed">
            <summary>
                SPDY server didn't respond to the PING message.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.PipelineEviction">
            <summary>
                The request couldn't be completed on an HTTP pipeline. Client should retry.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ContentLengthMismatch">
            <summary>
                The HTTP response body transferred fewer bytes than were advertised by the
                Content-Length header when the connection is closed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.IncompleteChunkedEncoding">
            <summary>
                The HTTP response body is transferred with Chunked-Encoding, but the
                terminating zero-length chunk was never sent when the connection is closed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.QuicProtocolError">
            <summary>
                There is a QUIC protocol error.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.HeadersTruncated">
            <summary>
                The HTTP headers were truncated by an EOF.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CacheMiss">
            <summary>
                The cache does not have the requested entry.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CacheReadFailure">
            <summary>
                Unable to read from the disk cache.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CacheWriteFailure">
            <summary>
                Unable to write to the disk cache.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CacheOperationNotSupported">
            <summary>
                The operation is not supported for this entry.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CacheOpenFailure">
            <summary>
                The disk cache is unable to open this entry.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CacheCreateFailure">
            <summary>
                The disk cache is unable to create this entry.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CacheRace">
            <summary>
                Multiple transactions are racing to create disk cache entries. This is an
                internal error returned from the HttpCache to the HttpCacheTransaction that
                tells the transaction to restart the entry-creation logic because the state
                of the cache has changed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CacheChecksumReadFailure">
            <summary>
                The cache was unable to read a checksum record on an entry. This can be
                returned from attempts to read from the cache. It is an internal error,
                returned by the SimpleCache backend, but not by any URLRequest methods
                or members.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.CacheChecksumMismatch">
            <summary>
                The cache found an entry with an invalid checksum. This can be returned from
                attempts to read from the cache. It is an internal error, returned by the
                SimpleCache backend, but not by any URLRequest methods or members.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.InsecureResponse">
            <summary>
                The server's response was insecure  = e.g. there was a cert error,.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.NoPrivateKeyForCert">
            <summary>
                The server responded to a &lt;keygen&gt; with a generated client cert that we
                don't have the matching private key for.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.AddUserCertFailed">
            <summary>
                An error adding to the OS certificate database  = e.g. OS X Keychain,.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FtpFailed">
            <summary>
                A generic error for failed FTP control connection command.
                If possible, please use or add a more specific error code.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FtpServiceUnavailable">
            <summary>
                The server cannot fulfill the request at this point. This is a temporary
                error.
                FTP response code 421.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FtpTransferAborted">
            <summary>
                The server has aborted the transfer.
                FTP response code 426.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FtpFileBusy">
            <summary>
                The file is busy, or some other temporary error condition on opening
                the file.
                FTP response code 450.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FtpSyntaxError">
            <summary>
                Server rejected our command because of syntax errors.
                FTP response codes 500, 501.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FtpCommandNotSupported">
            <summary>
                Server does not support the command we issued.
                FTP response codes 502, 504.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.FtpBadCommandSequence">
            <summary>
                Server rejected our command because we didn't issue the commands in right
                order.
                FTP response code 503.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.Pkcs12ImportBadPassword">
            <summary>
                PKCS #12 import failed due to incorrect password.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.Pkcs12ImportFailed">
            <summary>
                PKCS #12 import failed due to other error.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ImportCaCertNotCa">
            <summary>
                CA import failed - not a CA cert.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ImportCertAlreadyExists">
            <summary>
                Import failed - certificate already exists in database.
                Note it's a little weird this is an error but reimporting a PKCS12 is ok
                = no-op,.  That's how Mozilla does it, though.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ImportCaCertFailed">
            <summary>
                CA import failed due to some other error.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.ImportServerCertFailed">
            <summary>
                Server certificate import failed due to some internal error.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.Pkcs12ImportInvalidMac">
            <summary>
                PKCS #12 import failed due to invalid MAC.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.Pkcs12ImportInvalidFile">
            <summary>
                PKCS #12 import failed due to invalid/corrupt file.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.Pkcs12ImportUnsupported">
            <summary>
                PKCS #12 import failed due to unsupported features.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.KeyGenerationFailed">
            <summary>
                Key generation failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.OriginBoundCertGenerationFailed">
            <summary>
                Server-bound certificate generation failed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.PrivateKeyExportFailed">
            <summary>
                Failure to export private key.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.DnsMalformedResponse">
            <summary>
                DNS resolver received a malformed response.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.DnsServerRequiresTcp">
            <summary>
                DNS server requires TCP
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.DnsServerFailed">
            <summary>
                <para>
                    DNS server failed.  This error is returned for all of the following
                    error conditions:
                </para>
                <para>
                    1 - Format error - The name server was unable to interpret the query.
                </para>
                <para>
                    2 - Server failure - The name server was unable to process this query
                    due to a problem with the name server.
                </para>
                <para>
                    4 - Not Implemented - The name server does not support the requested
                    kind of query.
                </para>
                <para>
                    5 - Refused - The name server refuses to perform the specified
                    operation for policy reasons.
                </para>
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.DnsTimedOut">
            <summary>
                DNS transaction timed out.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.DnsCacheMiss">
            <summary>
                The entry was not found in cache, for cache-only lookups.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.DnsSearchEmpty">
            <summary>
                Suffix search list rules prevent resolution of the given host name.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.NetError.DnsSortError">
            <summary>
                Failed to sort addresses according to RFC3484.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.Proxy.AutoDetectProxySettings">
            <summary>
                With this proxy configuration the connection automatically
                detects proxy settings.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Proxy.AutoDetectProxySettings.ProxyType">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Net.Proxy.CustomProxySettings">
            <summary>
                Describes a user's proxy settings.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Proxy.CustomProxySettings.Exceptions">
            <summary>
                The set of URLs that should bypass the proxy settings.
            </summary>
            <remarks>
                The format of the exceptions string can be any of the following:
                <ul>
                    <li>
                        <c>[ URL_SCHEME "://" ] HOSTNAME_PATTERN [ ":" &lt;port&gt; ]</c>
                        Examples:
                        "foobar.com", "*foobar.com", "*.foobar.com", "*foobar.com:99", "https://x.*.y.com:99"
                    </li>
                    <li>
                        <c>"." HOSTNAME_SUFFIX_PATTERN [ ":" PORT ]</c>
                        Examples:
                        ".google.com", ".com", "http://.google.com"
                    </li>
                    <li>
                        <c>[ SCHEME "://" ] IP_LITERAL [ ":" PORT ]</c>
                        Examples:
                        "127.0.1", "[0:0::1]", "[::1]", "http://[::1]:99"
                    </li>
                    <li>
                        <c>IP_LITERAL "/" PREFIX_LENGHT_IN_BITS</c>
                        Examples:
                        "192.168.1.1/16", "fefe:13::abc/33"
                    </li>
                    <li>
                        <c>"&lt;local&gt;"</c>
                        Match local addresses. The meaning of "&lt;local&gt;" is whether the host matches
                        one of: "127.0.0.1", "::1", "localhost".
                    </li>
                </ul>
                <para />
                If you need to provide several exception rules you can separate them using comma:
                "*foobar.com,.google.com,&lt;local&gt;".
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Net.Proxy.CustomProxySettings.Rules">
            <summary>
                The proxy rules in specified format. The string should be a
                semicolon-separated list of ordered proxies that apply to a particular URL scheme.
            </summary>
            <remarks>
                Examples of the proxyRules string:
                <li>
                    <c>"http=foopy:80;ftp=foopy2"</c> - use HTTP proxy "foopy:80" for <c>http://</c> URLs,
                    and HTTP proxy "foopy2:80" for <c>%ftp://</c> URLs.
                </li>
                <li><c>"foopy:80"</c> - use HTTP proxy "foopy:80" for all URLs.</li>
                <li><c>"socks4://foopy"</c> - use SOCKS v4 proxy "foopy:1080" for all URLs.</li>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Net.Proxy.CustomProxySettings.ProxyType">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Net.Proxy.CustomProxySettings.#ctor(System.String,System.String)">
            <summary>
                Constructs a new CustomProxySettings instance with given proxy rules.
            </summary>
            <param name="rules">
                string that represents proxy rules in specified format. The string should be a
                semicolon-separated list of ordered proxies that apply to a particular URL scheme.
            </param>
            <param name="exceptions">string that represents the set of URLs that should bypass the proxy settings.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="rules" /> is null, empty or contain only white space.</exception>
            <remarks>
                Examples of the proxy rules string:
                <li>
                    <c>"http=foopy:80;ftp=foopy2"</c>use HTTP proxy "foopy:80" for <c>http://</c> URLs,
                    and HTTP proxy "foopy2:80" for <c>%ftp://</c> URLs.
                </li>
                <li><c>"socks4://foopy"</c>use SOCKS v4 proxy "foopy:1080" for all URLs.</li>
            </remarks>
        </member>
        <member name="T:DotNetBrowser.Net.Proxy.DirectProxySettings">
            <summary>
                With this proxy configuration the connection doesn't use a proxy server.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Proxy.DirectProxySettings.ProxyType">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Net.Proxy.IProxy">
            <summary>
                The service that allows modifying the proxy configuration for the current engine.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Proxy.IProxy.Engine">
            <summary>
                The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Proxy.IProxy.Settings">
            <summary>
                The current proxy settings.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.Proxy.PacProxySettings">
            <summary>
                With this proxy configuration the connection uses proxy settings
                received from proxy auto-config (PAC) file which is located at
                the specific address.
                <para />
                In case PAC script fails, a direct connection will be used.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Proxy.PacProxySettings.PacUrl">
            <summary>
                The URL address of the PAC file with proxy settings.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Proxy.PacProxySettings.ProxyType">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Net.Proxy.PacProxySettings.#ctor(System.String)">
            <summary>
                Constructs a new PacProxySettings instance initiated with
                the pacUrl URL address where PAC file with
                proxy settings is located. The address of the PAC file must be a
                valid URL address. The address can contain a path to the PAC
                file on local file system.
            </summary>
            <param name="pacUrl">URL address of the PAC file with proxy settings.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="pacUrl" /> is null, empty or contain only white space.</exception>
        </member>
        <member name="T:DotNetBrowser.Net.Proxy.ProxySettings">
            <summary>
                The base class for all proxy settings.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Proxy.ProxySettings.Type">
            <summary>
                Gets the type of proxy settings.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.Proxy.ProxyType">
            <summary>
                Types of proxy settings.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Proxy.ProxyType.System">
            <summary>
                The proxy settings defined in operating system.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Proxy.ProxyType.Direct">
            <summary>
                The direct connection without proxy server.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Proxy.ProxyType.AutoDetect">
            <summary>
                The automatically detected proxy settings.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Proxy.ProxyType.Pac">
            <summary>
                The proxy settings obtained from the PAC file.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Proxy.ProxyType.Custom">
            <summary>
                The custom proxy settings.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.Proxy.SystemProxySettings">
            <summary>
                The system proxy settings defined by the operating system.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Proxy.SystemProxySettings.ProxyType">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Net.RequestStatus">
            <summary>
                The status of a URL request.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.RequestStatus.Unregognized">
            <summary>
                The request status is not recognized.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.RequestStatus.Unknown">
            <summary>
                The request status is undefined.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.RequestStatus.Success">
            <summary>A request succeeded.</summary>
        </member>
        <member name="F:DotNetBrowser.Net.RequestStatus.IoPending">
            <summary>
                An IO request is pending. It is expected that the request issuer will be informed when it
                is completed.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.RequestStatus.Canceled">
            <summary>A request was cancelled programmatically.</summary>
        </member>
        <member name="F:DotNetBrowser.Net.RequestStatus.Failed">
            <summary>A request failed for some reason.</summary>
        </member>
        <member name="T:DotNetBrowser.Net.Scheme">
            <summary>
                The scheme component of a URL.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Scheme.Https">
            <summary>
                The HTTPS scheme.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.Scheme.Http">
            <summary>
                The HTTP scheme.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.Scheme.IsInterceptable">
            <summary>
                Indicates whether this scheme is interceptable.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.Scheme.Create(System.String)">
            <summary>
                Creates the Scheme instance from string representation.
            </summary>
            <param name="value">string representation</param>
            <returns>the corresponding <see cref="T:DotNetBrowser.Net.Scheme" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Net.Scheme.op_Explicit(System.String)~DotNetBrowser.Net.Scheme">
            <summary>
                Creates the Scheme instance from string representation.
            </summary>
            <param name="value">string representation</param>
            <returns>the corresponding <see cref="T:DotNetBrowser.Net.Scheme" /> instance.</returns>
        </member>
        <member name="T:DotNetBrowser.Net.SslVersion">
            <summary>
                The supported SSL connection versions.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.SslVersion.Unspecified">
            <summary>
                Reserved value.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.SslVersion.Unknown">
            <summary>
                The SSL version cannot be determined.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.SslVersion.Ssl2">
            <summary>
                SSL 2.0
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.SslVersion.Ssl3">
            <summary>
                SSL 3.0
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.SslVersion.Tls1">
            <summary>
                TLS 1.0
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.SslVersion.Tls11">
            <summary>
                TLS 1.1
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.SslVersion.Tls12">
            <summary>
                TLS 1.2
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.SslVersion.Tls13">
            <summary>
                TLS 1.3
            </summary>
        </member>
        <member name="F:DotNetBrowser.Net.SslVersion.Quic">
            <summary>
                QUIC
            </summary>
        </member>
        <member name="T:DotNetBrowser.Net.TextData">
            <summary>
                The upload data of the <c>text/plain</c> content type.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.TextData.Data">
            <summary>
                The upload data as a <c>string</c>.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.TextData.#ctor(System.String)">
            <summary>
                Creates a new instance containing the specified data.
            </summary>
            <param name="data"> The upload data as a <c>string</c>.</param>
        </member>
        <member name="M:DotNetBrowser.Net.TextData.op_Implicit(System.String)~DotNetBrowser.Net.TextData">
            <summary>
                Converts the specified data to a new instance of <see cref="T:DotNetBrowser.Net.BytesData" />.
            </summary>
            <param name="data"> The upload data as a byte array.</param>
            <returns>The new <see cref="T:DotNetBrowser.Net.TextData"/>instance.</returns>
        </member>
        <member name="T:DotNetBrowser.Net.UrlRequest">
            <summary>
                Represents the URL request received from the Chromium engine.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.UrlRequest.Browser">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with this request.
            </summary>
            <value>
                The <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance or null if the corresponding instance has not been determined or not
                available anymore.
            </value>
        </member>
        <member name="P:DotNetBrowser.Net.UrlRequest.Method">
            <summary>
                Gets the HTTP method used to perform current request.
            </summary>
            <value>the HTTP method used to perform current request.</value>
        </member>
        <member name="P:DotNetBrowser.Net.UrlRequest.ResourceType">
            <summary>
                Gets the <see cref="P:DotNetBrowser.Net.UrlRequest.ResourceType" /> of the resource the request is loading.
            </summary>
            <value> The type of the resource the request is loading. </value>
        </member>
        <member name="P:DotNetBrowser.Net.UrlRequest.SslVersion">
            <summary>
                Gets the SSL connection version used to make this
                request if it is available and the current request represents an HTTPS request.
            </summary>
            <value>The <see cref="P:DotNetBrowser.Net.UrlRequest.SslVersion" /> or null if it is not available.</value>
        </member>
        <member name="P:DotNetBrowser.Net.UrlRequest.TotalBytesReceived">
            <summary>
                Gets the total amount of data received from network after SSL decoding and proxy
                handling.
            </summary>
            <value>The total amount of data received over the network.</value>
        </member>
        <member name="P:DotNetBrowser.Net.UrlRequest.TotalBytesSent">
            <summary>
                Gets the total amount of data sent over the network before SSL encoding and proxy
                handling.
            </summary>
            <value>The total amount of data sent over the network.</value>
        </member>
        <member name="P:DotNetBrowser.Net.UrlRequest.Url">
            <summary>
                Gets the requested URL address.
            </summary>
            <value>The requested URL address.</value>
        </member>
        <member name="M:DotNetBrowser.Net.UrlRequest.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Net.UrlRequest.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Net.UrlRequestJob">
            <summary>
                The URL request job for the intercepted URL request, which allows you to provide the response data for
                this URL request.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Net.UrlRequestJob.IsClosed">
            <summary>
                Indicates if the request is handled and all the data is sent.
            </summary>
            <remarks>
                The request is marked as handled when either <see cref="M:DotNetBrowser.Net.UrlRequestJob.Complete" /> or <see cref="M:DotNetBrowser.Net.UrlRequestJob.Fail" /> is called.
            </remarks>
            <value>true if if the request is handled. </value>
        </member>
        <member name="P:DotNetBrowser.Net.UrlRequestJob.UrlRequest">
            <summary>
                Gets the <see cref="P:DotNetBrowser.Net.UrlRequestJob.UrlRequest" /> associated with this job.
            </summary>
            <value>The <see cref="P:DotNetBrowser.Net.UrlRequestJob.UrlRequest" /> associated with this job.</value>
        </member>
        <member name="P:DotNetBrowser.Net.UrlRequestJob.IsDisposed">
            <inheritdoc />
        </member>
        <member name="E:DotNetBrowser.Net.UrlRequestJob.Disposed">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Net.UrlRequestJob.Complete">
            <summary>
                Marks the request as completed. It can be used to indicate that all response data are already sent.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.UrlRequestJob.Fail">
            <summary>
                Marks the request as failed. It can be used to indicate that an error occurred during writing the
                response data.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Net.UrlRequestJob.Write(System.Byte[])">
            <summary>
                Appends a chunk of the response data. This method may be called multiple
                times to append several chunks.
            </summary>
            <remarks>
                When all the chunks are written either the <see cref="M:DotNetBrowser.Net.UrlRequestJob.Complete" />
                or <see cref="M:DotNetBrowser.Net.UrlRequestJob.Fail" /> method must be called to indicate that the request is
                completed or failed.
            </remarks>
            <param name="data">The response data bytes.</param>
        </member>
        <member name="T:DotNetBrowser.Permissions.Handlers.RequestPermissionParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Permissions.IPermissions.RequestPermissionHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Permissions.Handlers.RequestPermissionParameters.Type">
            <summary>
                Gets the permission type of the current request.
            </summary>
            <value>The permission type of the current request.</value>
        </member>
        <member name="P:DotNetBrowser.Permissions.Handlers.RequestPermissionParameters.Url">
            <summary>
                Gets the URL of the web page that requests permission.
            </summary>
            <value>The URL of the web page that requests permission.</value>
        </member>
        <member name="P:DotNetBrowser.Permissions.Handlers.RequestPermissionParameters.Permissions">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Permissions.IPermissions" /> instance associated with the handler.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Permissions.IPermissions" /> instance associated with the handler.</value>
        </member>
        <member name="T:DotNetBrowser.Permissions.Handlers.RequestPermissionResponse">
            <summary>
                A response to the <see cref="P:DotNetBrowser.Permissions.IPermissions.RequestPermissionHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Permissions.Handlers.RequestPermissionResponse.Deny">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Permissions.Handlers.RequestPermissionResponse" /> that notifies the engine that permission is denied.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Permissions.Handlers.RequestPermissionResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Permissions.IPermissions.RequestPermissionHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Permissions.Handlers.RequestPermissionResponse.Grant">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Permissions.Handlers.RequestPermissionResponse" /> that notifies the engine that permission is granted.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Permissions.Handlers.RequestPermissionResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Permissions.IPermissions.RequestPermissionHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Permissions.IPermissions">
            <summary>
                A service that allows managing permissions.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Permissions.IPermissions.Engine">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.</value>
        </member>
        <member name="P:DotNetBrowser.Permissions.IPermissions.RequestPermissionHandler">
            <summary>
                Gets or sets a handler that is used when a web page requests a permission, for example to enable geolocation.
                The permission type and the information about the web page can be obtained from the passed request object.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Permissions.IPermissions" /> has already been disposed.</exception>
            <remarks>
                <para>
                    Use the <see cref="M:DotNetBrowser.Permissions.Handlers.RequestPermissionResponse.Grant" /> to grant the requested permission.
                </para>
                <para>
                    Use the <see cref="M:DotNetBrowser.Permissions.Handlers.RequestPermissionResponse.Deny" /> to deny the requested permission.
                </para>
                <para>
                    If an exception occurs inside the handler implementation, the default behavior will be applied - the method
                    <see cref="M:DotNetBrowser.Permissions.Handlers.RequestPermissionResponse.Deny" />  will be used.
                </para>
            </remarks>
        </member>
        <member name="T:DotNetBrowser.Permissions.PermissionType">
            <summary>
                Represents the permission types.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.Unrecognized">
            <summary>
                The permission type is not recognized.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.UnknownPermission">
            <summary>
                The unknown permission type.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.MidiSysex">
            <summary>
                The permission associated with the usage of Web MIDI API.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.Notifications">
            <summary>
                The permission associated with the usage of the Notifications API.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.Geolocation">
            <summary>
                The permission associated with the usage of the Geolocation API.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.ProtectedMediaIdentifier">
            <summary>The protected media identifier permission.</summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.Midi">
            <summary>
                The permission associated with the usage of Web MIDI API.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.DurableStorage">
            <summary>The Persistent Storage permission (Durable Storage). </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.AudioCapture">
            <summary>The permission associated with the access to the audio capture devices.</summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.VideoCapture">
            <summary>The permission associated with the access to the video capture devices.</summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.BackgroundSync">
            <summary>
                The permission associated with the usage of Background Sync web API.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.Flash">
            <summary>
                The permission to run Flash player in the browser.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.Sensors">
            <summary>
                The permission to use motion and light sensors.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.AccessibilityEvents">
            <summary>
                The accessibility events permisson.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.ClipboardRead">
            <summary>
                The permission associated with the usage of the asynchronous methods in the Clipboard API.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Permissions.PermissionType.ClipboardWrite">
            <summary>
                The permission associated with the usage of the asynchronous methods in the Clipboard API.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Plugins.Handlers.AllowPluginParameters">
            <summary>
                The parameters for the <see cref="P:DotNetBrowser.Plugins.IPlugins.AllowPluginHandler" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Plugins.Handlers.AllowPluginParameters.Plugin">
            <summary>
                Gets the information about the plugin to check.
            </summary>
            <value>The information about the plugin to check.</value>
        </member>
        <member name="P:DotNetBrowser.Plugins.Handlers.AllowPluginParameters.Plugins">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Plugins.IPlugins" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Plugins.IPlugins" /> instance associated with this object.</value>
        </member>
        <member name="T:DotNetBrowser.Plugins.Handlers.AllowPluginResponse">
            <summary>
                A response to the <see cref="P:DotNetBrowser.Plugins.IPlugins.AllowPluginHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Plugins.Handlers.AllowPluginResponse.Allow">
            <summary>
                Creates an <see cref="T:DotNetBrowser.Plugins.Handlers.AllowPluginResponse" /> that notifies the engine that the plugin is allowed to be used.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Plugins.Handlers.AllowPluginResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Plugins.IPlugins.AllowPluginHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Plugins.Handlers.AllowPluginResponse.Deny">
            <summary>
                Creates an <see cref="T:DotNetBrowser.Plugins.Handlers.AllowPluginResponse" /> that notifies the engine that the plugin isn't allowed at the moment.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Plugins.Handlers.AllowPluginResponse" /> instance that can be used as a return value in
                <see cref="P:DotNetBrowser.Plugins.IPlugins.AllowPluginHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Plugins.IPlugins">
            <summary>
                The engine service that provides the details about the available Chromium plugins.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Plugins.IPlugins.AllowPluginHandler">
            <summary>
                Gets or sets a handler that is used when the engine wants to check whether a specific plugin is allowed or
                not.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Plugins.IPlugins" /> object has already been disposed.</exception>
            <remarks>
                <para>Use the <see cref="M:DotNetBrowser.Plugins.Handlers.AllowPluginResponse.Allow" /> method to allow the plugin.</para>
                <para>Use the <see cref="M:DotNetBrowser.Plugins.Handlers.AllowPluginResponse.Deny" /> method to deny the plugin.</para>
                <para>
                    If an exception occurs inside the handler implementation, the default behavior will be applied - the method
                    <see cref="M:DotNetBrowser.Plugins.Handlers.AllowPluginResponse.Allow" /> will be used.
                </para>
                <para>
                    <b>Important:</b> the engine will be blocked until the callback response is sent. It is not
                    allowed to invoke any engine/browser methods in this callback.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Plugins.IPlugins.AvailablePlugins">
            <summary>
                Gets the collection of the installed and available Chromium plugins.
            </summary>
            <value>
                The collection of the installed and available Chromium plugins. The collection will be empty  if
                there are no installed and available plugins.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Plugins.IPlugins" /> object has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Plugins.IPlugins.Engine">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.</value>
        </member>
        <member name="P:DotNetBrowser.Plugins.IPlugins.Settings">
            <summary>
                Gets the settings of the available Chromium plugins.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Plugins.IPluginSettings" /> to configure the available Chromium plugins.</value>
        </member>
        <member name="T:DotNetBrowser.Plugins.IPluginSettings">
            <summary>
                The settings to configure the available Chromium <see cref="N:DotNetBrowser.Plugins" />.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Plugins.IPluginSettings.PdfViewerEnabled">
            <summary>
                Enables or disables the built-in PDF viewer.
            </summary>
            <remarks>
                <para>
                    This setting controls how DotNetBrowser handles navigations to web pages
                    embedding PDF documents. When the PDF viewer is enabled,
                    then the PDF document will be displayed in the PDF viewer. Otherwise, the engine
                    will download the PDF document, like any other resource that cannot be rendered in the
                    browser. The download can be configured via the <see cref="P:DotNetBrowser.Browser.IBrowser.StartDownloadHandler" />.
                </para>
                <para>
                    Changing this setting affects only subsequent navigations and does not affect the
                    already loaded web pages.
                </para>
                <para>
                    By default, the PDF viewer is enabled.
                </para>
            </remarks>
            <value><c>true</c> if the PDF viewer is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Plugins.IPluginSettings" /> has already been disposed.</exception>
            <exception cref="T:DotNetBrowser.Engine.ConnectionClosedException">The connection to the Chromium engine is closed.</exception>
        </member>
        <member name="T:DotNetBrowser.Plugins.Plugin">
            <summary>
                The detailed information about the installed Chromium plugin.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Plugins.Plugin.Description">
            <summary>
                Gets the plugin description.
            </summary>
            <value>The plugin description.</value>
        </member>
        <member name="P:DotNetBrowser.Plugins.Plugin.MimeTypes">
            <summary>
                Gets the MIME types supported by this plugin.
            </summary>
            <value>A collection of the MIME types supported by this plugin.</value>
        </member>
        <member name="P:DotNetBrowser.Plugins.Plugin.Name">
            <summary>
                Gets the name of the plugin.
            </summary>
            <value>The name of the plugin.</value>
        </member>
        <member name="P:DotNetBrowser.Plugins.Plugin.Path">
            <summary>
                Gets the plugin path representation.
            </summary>
            <value>
                The plugin path representation. This can be one of the following:
                <ul>
                    <li> the absolute path to the plugin file on the local file system;</li>
                    <li> the plugin extension name; </li>
                    <li>
                        the resource URL (for example, <c>chrome-extension://&lt;IDENTIFIER&gt;</c>).
                    </li>
                </ul>
            </value>
        </member>
        <member name="P:DotNetBrowser.Plugins.Plugin.PluginType">
            <summary>
                Gets the plugin type.
            </summary>
            <value>The plugin type.</value>
        </member>
        <member name="P:DotNetBrowser.Plugins.Plugin.Version">
            <summary>
                Gets the version number of the plugin file.
            </summary>
            <value>
                The version number of the plugin file. This value may be
                OS-specific.
            </value>
        </member>
        <member name="T:DotNetBrowser.Plugins.PluginType">
            <summary>
                The plugin types.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Plugins.PluginType.Unrecognized">
            <summary>
                The plugin type is not recognized.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Plugins.PluginType.Unspecified">
            <summary>
                The plugin type is not specified.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Plugins.PluginType.PepperInProcess">
            <summary>
                An in-process PPAPI plugin.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Plugins.PluginType.PepperOutOfProcess">
            <summary>
                An out-of-process PPAPI plugin.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Plugins.PluginType.BrowserPlugin">
            <summary>
                A browser plugin.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.Capabilities">
            <summary>
                The capabilities of a printer.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Print.Capabilities.CanCollate">
            <summary>
                Indicates whether the printer supports collate printing.
            </summary>
            <value><c>true</c> if the printer can collate, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Print.Capabilities.ColorModels">
            <summary>
                Gets the list of the <see cref="T:DotNetBrowser.Print.ColorModel" /> values supported by the printer.
            </summary>
            <value>The list of the <see cref="T:DotNetBrowser.Print.ColorModel" /> values supported by the printer.</value>
        </member>
        <member name="P:DotNetBrowser.Print.Capabilities.DuplexModes">
            <summary>
                Gets the collection of the <see cref="T:DotNetBrowser.Print.DuplexMode" /> values supported by the printer.
            </summary>
            <value>The collection of the <see cref="T:DotNetBrowser.Print.DuplexMode" /> values supported by the printer.</value>
        </member>
        <member name="P:DotNetBrowser.Print.Capabilities.MaxCopies">
            <summary>
                Gets the maximum number of copies that the printer can make.
            </summary>
            <value>The maximum number of copies that the printer can make.</value>
        </member>
        <member name="P:DotNetBrowser.Print.Capabilities.PaperSizes">
            <summary>
                Gets the collection of the <see cref="T:DotNetBrowser.Print.PaperSize" /> values supported by the printer.
            </summary>
            <value>The collection of the <see cref="T:DotNetBrowser.Print.PaperSize" /> values supported by the printer.</value>
        </member>
        <member name="T:DotNetBrowser.Print.ColorModel">
            <summary>
                The color models used for printing.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.Unspecified">
            <summary>
                Reserved value.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.Gray">
            <summary>GRAY color model.</summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.Color">
            <summary>COLOR color model.</summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.Cmyk">
            <summary>CMYK color model.</summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.Cmy">
            <summary>CMY color model.</summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.Kcmy">
            <summary>KCMY color model.</summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.CmyPlusK">
            <summary>
                CMYPlusK represents CMY+K color model.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.Black">
            <summary>BLACK color model.</summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.Grayscale">
            <summary>GRAYSCALE color model.</summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.Rgb">
            <summary>RGB color model.</summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.Rgb16">
            <summary>RGB16 color model.</summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.Rgba">
            <summary>RGBA color model.</summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.ColorModeColor">
            <summary>
                COLOR_MODE_COLOR color model. Used in Samsung printer PPDs.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.ColorModeMonochrome">
            <summary>
                COLOR_MODE_MONOCHROME color model. Used in Samsung printer PPDs.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.HpColorColor">
            <summary>
                HP_COLOR_COLOR color model. Used in HP color printer PPDs.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.HpColorBlack">
            <summary>
                HP_COLOR_BLACK color model. Used in HP color printer PPDs.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.PrintoutModeNormal">
            <summary>
                PRINTOUT_MODE_NORMAL color model. Used in Foomatic PPDs.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.PrintoutModeNormalGray">
            <summary>
                PRINTOUT_MODE_NORMAL_GRAY color model. Used in Foomatic PPDs.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.ProcessColorModelCmyk">
            <summary>
                PROCESS_COLOR_MODEL_CMYK color model. Used in Canon printer PPDs.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.ProcessColorModelGreyscale">
            <summary>
                PROCESS_COLOR_MODEL_GREYSCALE color model. Used in Canon printer PPDs.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.ProcessColorModelRgb">
            <summary>
                PROCESS_COLOR_MODEL_RGB color model. Used in Canon printer PPDs
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.BrotherCupsColor">
            <summary>
                BROTHER_CUPS_COLOR color model. Used in Brother color laser printer PPDs.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.BrotherCupsMono">
            <summary>
                BROTHER_CUPS_MONO color model. Used in Brother color laser printer PPDs.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.BrotherBrScript3Color">
            <summary>
                BROTHER_BR_SCRIPT_3_COLOR color model. Used in Brother BRScript3 color printer PPDs.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.ColorModel.BrotherBrScript3Black">
            <summary>
                BROTHER_BR_SCRIPT_3_BLACK color model. Used in Brother BRScript3 color printer PPDs.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.DuplexMode">
            <summary>
                The duplex modes used for printing.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.DuplexMode.Unspecified">
            <summary>
                Reserved value.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.DuplexMode.Simplex">
            <summary>
                One-sided printing.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.DuplexMode.LongEdge">
            <summary>
                Two-sided printing, flipping on the long edge.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.DuplexMode.ShortEdge">
            <summary>
                Two-sided printing, flipping on the short edge.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.Events.PageCountUpdatedEventArgs`1">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Print.IPrintJob`1.PageCountUpdated" /> event.
            </summary>
            <typeparam name="TPrintSettings">The print settings type.</typeparam>
        </member>
        <member name="P:DotNetBrowser.Print.Events.PageCountUpdatedEventArgs`1.PageCount">
            <summary>
                Gets the total number of pages to be printed.
            </summary>
            <value>The total number of pages to be printed.</value>
        </member>
        <member name="P:DotNetBrowser.Print.Events.PageCountUpdatedEventArgs`1.PrintJob">
            <summary>
                Gets the print job associated with this event.
            </summary>
            <value>The print job associated with this event.</value>
        </member>
        <member name="T:DotNetBrowser.Print.Events.PrintCompletedEventArgs`1">
            <summary>
                Event arguments for the <see cref="E:DotNetBrowser.Print.IPrintJob`1.PrintCompleted" /> event.
            </summary>
            <typeparam name="TPrintSettings">The print settings type.</typeparam>
        </member>
        <member name="P:DotNetBrowser.Print.Events.PrintCompletedEventArgs`1.IsCompletedSuccessfully">
            <summary>
                Indicates whether the printing is completed successfully.
            </summary>
            <value><c>true</c> if the printing is completed successfully, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Print.Events.PrintCompletedEventArgs`1.PrintJob">
            <summary>
                Gets the print job associated with this event.
            </summary>
            <value>The print job associated with this event.</value>
        </member>
        <member name="T:DotNetBrowser.Print.Handlers.PrintContentParameters`2">
            <summary>
                The base class for content printing handlers parameters.
            </summary>
            <typeparam name="TPrintSettings">The system print settings type.</typeparam>
            <typeparam name="TPdfPrintSettings">The PDF print settings type.</typeparam>
        </member>
        <member name="P:DotNetBrowser.Print.Handlers.PrintContentParameters`2.Browser">
            <summary>
                Gets the browser associated with the handler.
            </summary>
            <value>The browser associated with the handler.</value>
        </member>
        <member name="P:DotNetBrowser.Print.Handlers.PrintContentParameters`2.Printers">
            <summary>
                Gets the collection of printers available in this handler.
            </summary>
            <value>The collection of printers available in this handler.</value>
        </member>
        <member name="T:DotNetBrowser.Print.Handlers.PrintHtmlContentParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.IBrowser.PrintHtmlContentHandler" />.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse">
            <summary>
                A response for the <see cref="P:DotNetBrowser.Browser.IBrowser.PrintHtmlContentHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse" /> instance that
                tells the Chromium engine to cancel printing.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Browser.IBrowser.PrintHtmlContentHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse.Print(DotNetBrowser.Print.SystemPrinter{DotNetBrowser.Print.SystemPrinter.IHtmlSettings})">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse" /> instance that
                tells the Chromium engine to proceed with the passed printer.
            </summary>
            <param name="printer">The printer to use.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Browser.IBrowser.PrintHtmlContentHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse.Print(DotNetBrowser.Print.PdfPrinter{DotNetBrowser.Print.PdfPrinter.IHtmlSettings})">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse" /> instance that
                tells the Chromium engine to proceed with the passed printer.
            </summary>
            <param name="printer">The printer to use.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Print.Handlers.PrintHtmlContentResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Browser.IBrowser.PrintHtmlContentHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Print.Handlers.PrintPdfContentParameters">
            <summary>
                The parameters of the <see cref="P:DotNetBrowser.Browser.IBrowser.PrintPdfContentHandler" />.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.Handlers.PrintPdfContentResponse">
            <summary>
                A response for the <see cref="P:DotNetBrowser.Browser.IBrowser.PrintPdfContentHandler" />.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Handlers.PrintPdfContentResponse.Cancel">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Print.Handlers.PrintPdfContentResponse" /> instance that
                tells the Chromium engine to cancel printing.
            </summary>
            <returns>
                The <see cref="T:DotNetBrowser.Print.Handlers.PrintPdfContentResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Browser.IBrowser.PrintPdfContentHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Print.Handlers.PrintPdfContentResponse.Print(DotNetBrowser.Print.SystemPrinter{DotNetBrowser.Print.SystemPrinter.IPdfSettings})">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Print.Handlers.PrintPdfContentResponse" /> instance that
                tells the Chromium engine to proceed with the passed printer.
            </summary>
            <param name="printer">The printer to use.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Print.Handlers.PrintPdfContentResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Browser.IBrowser.PrintPdfContentHandler" /> implementation.
            </returns>
        </member>
        <member name="M:DotNetBrowser.Print.Handlers.PrintPdfContentResponse.Print(DotNetBrowser.Print.PdfPrinter{DotNetBrowser.Print.PdfPrinter.IPdfSettings})">
            <summary>
                Creates a <see cref="T:DotNetBrowser.Print.Handlers.PrintPdfContentResponse" /> instance that
                tells the Chromium engine to proceed with the passed printer.
            </summary>
            <param name="printer">The printer to use.</param>
            <returns>
                The <see cref="T:DotNetBrowser.Print.Handlers.PrintPdfContentResponse" /> instance that can be used as a
                return value in <see cref="P:DotNetBrowser.Browser.IBrowser.PrintPdfContentHandler" /> implementation.
            </returns>
        </member>
        <member name="T:DotNetBrowser.Print.IPrinters`2">
            <summary>
                The collection of the available printers.
            </summary>
            <typeparam name="TPrintSettings">The print settings type available for these printers.</typeparam>
            <typeparam name="TPdfPrintSettings">The PDF print settings type available for PDF printer.</typeparam>
        </member>
        <member name="P:DotNetBrowser.Print.IPrinters`2.Default">
            <summary>
                Gets the default system printer.
            </summary>
            <value>The default system printer or <c>null</c> if there is no default printer configured.</value>
        </member>
        <member name="P:DotNetBrowser.Print.IPrinters`2.Pdf">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Print.PdfPrinter" /> instance that allows you to print to PDF.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Print.PdfPrinter" /> instance that allows you to print to PDF.</value>
        </member>
        <member name="T:DotNetBrowser.Print.IPrintJob`1">
            <summary>
                A printing operation that is currently in-progress.
            </summary>
            <typeparam name="TPrintSettings">The type of print settings that can be applied to this job.</typeparam>
        </member>
        <member name="P:DotNetBrowser.Print.IPrintJob`1.Settings">
            <summary>
                Gets the configurable settings of this print job.
            </summary>
            <value>The configurable settings of this print job.</value>
        </member>
        <member name="E:DotNetBrowser.Print.IPrintJob`1.PrintCompleted">
            <summary>
                Occurs when the printing operation is completed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Print.IPrintJob`1" /> has already been disposed.</exception>
        </member>
        <member name="E:DotNetBrowser.Print.IPrintJob`1.PageCountUpdated">
            <summary>
                Occurs when the total number of pages to be printed is updated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Print.IPrintJob`1" /> has already been disposed.</exception>
            <remarks>
                The page count is updated each time when the
                <see cref="M:DotNetBrowser.Print.Settings.IPrintSettings.Apply" /> method is called.
            </remarks>
        </member>
        <member name="T:DotNetBrowser.Print.Orientation">
            <summary>
                The page orientation values used for printing.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.Orientation.Unrecognized">
            <summary>
                The orientation is not recognized.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.Orientation.Unspecified">
            <summary>
                Reserved value.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.Orientation.Landscape">
            <summary>The landscape orientation.</summary>
        </member>
        <member name="F:DotNetBrowser.Print.Orientation.Portrait">
            <summary>The portrait orientation.</summary>
        </member>
        <member name="T:DotNetBrowser.Print.PageMargins">
            <summary>
                The page margins used for printing.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PageMargins.None">
            <summary>
                The empty margins for the page.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PageMargins.Default">
            <summary>
                The default margins for the page.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Print.PageMargins.Bottom">
            <summary>
                Gets the margin on the bottom side of the sheet.
            </summary>
            <value>The margin on the bottom side of the sheet.</value>
        </member>
        <member name="P:DotNetBrowser.Print.PageMargins.Left">
            <summary>
                Gets the margin on the left side of the sheet.
            </summary>
            <value>The margin on the left side of the sheet.</value>
        </member>
        <member name="P:DotNetBrowser.Print.PageMargins.Right">
            <summary>
                Gets the margin on the right side of the sheet.
            </summary>
            <value>The margin on the right side of the sheet.</value>
        </member>
        <member name="P:DotNetBrowser.Print.PageMargins.Top">
            <summary>
                Gets the margin on the top side of the sheet.
            </summary>
            <value>The margin on the top side of the sheet.</value>
        </member>
        <member name="M:DotNetBrowser.Print.PageMargins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates custom margins for the web page in points. One point equals 1/72 of an inch.
            </summary>
            <param name="left">The margin on the left side of the sheet. Cannot be negative.</param>
            <param name="right">The margin on the right side of the sheet. Cannot be negative.</param>
            <param name="top">The margin on the top side of the sheet. Cannot be negative.</param>
            <param name="bottom">The margin on the bottom side of the sheet. Cannot be negative.</param>
            <exception cref="T:System.ArgumentException">Any of the parameters is negative.</exception>
        </member>
        <member name="M:DotNetBrowser.Print.PageMargins.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Print.PageMargins.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Print.PageRange">
            <summary>
                The page range to be printed.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Print.PageRange.From">
            <summary>
                Gets the number of the first page within the range.
            </summary>
            <value>The number of the first page within the range.</value>
        </member>
        <member name="P:DotNetBrowser.Print.PageRange.To">
            <summary>
                Gets the number of the last page within the range.
            </summary>
            <value>The number of the last page within the range.</value>
        </member>
        <member name="M:DotNetBrowser.Print.PageRange.#ctor(System.Int32,System.Int32)">
            <summary>
                Creates a new page range instance.
            </summary>
            <param name="from">The 1-based number of the first page within the range.</param>
            <param name="to">The 1-based number of the last page within the range.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="from" /> is greater than <paramref name="to" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="from" /> is less than or equal to zero.</exception>
        </member>
        <member name="M:DotNetBrowser.Print.PageRange.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Print.PageRange.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Print.PagesPerSheet">
            <summary>
                The pages per sheet values that Chromium supports.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PagesPerSheet.Unrecognized">
            <summary>
                The pages per sheet value is not recognized.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PagesPerSheet.Unspecified">
            <summary>
                Reserved value.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PagesPerSheet.One">
            <summary>
                One page per sheet.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PagesPerSheet.Two">
            <summary>
                Two pages per sheet.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PagesPerSheet.Four">
            <summary>
                Four pages per sheet.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PagesPerSheet.Six">
            <summary>
                Six pages per sheet.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PagesPerSheet.Nine">
            <summary>
                Nine pages per sheet.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PagesPerSheet.Sixteen">
            <summary>
                Sixteen pages per sheet.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.PaperSize">
            <summary>
                The paper size used for printing.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.MicronsPerInch">
            <summary>
                Microns in one inch.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.MicronsPerMillimeter">
            <summary>
                Microns in one millimeter.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Print.PaperSize.Height">
            <summary>
                Gets the paper height in microns.
            </summary>
            <value>The paper height in microns.</value>
        </member>
        <member name="P:DotNetBrowser.Print.PaperSize.Name">
            <summary>
                Gets the paper size name.
            </summary>
            <value> The paper size name. Can be null or empty.</value>
        </member>
        <member name="P:DotNetBrowser.Print.PaperSize.Width">
            <summary>
                Gets the paper width in microns.
            </summary>
            <value>The paper width in microns.</value>
        </member>
        <member name="M:DotNetBrowser.Print.PaperSize.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Print.PaperSize.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Print.PaperSize.Of(System.Single,System.Single,DotNetBrowser.Print.PaperSize.Unit,System.String)">
            <summary>
                Creates a new paper size setting.
            </summary>
            <param name="width">The paper size width.</param>
            <param name="height">The paper size height.</param>
            <param name="unit">The <paramref name="width" /> and <paramref name="height" /> measurement unit.</param>
            <param name="name">The name of the paper size.</param>
            <returns>The paper size used for printing.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="width" /> is negative.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="height" /> is negative.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> is null , empty or contains only white space.</exception>
        </member>
        <member name="M:DotNetBrowser.Print.PaperSize.Of(System.Single,System.Single,DotNetBrowser.Print.PaperSize.Unit)">
            <summary>
                Creates a new paper size setting.
            </summary>
            <param name="width">The paper size width.</param>
            <param name="height">The paper size height.</param>
            <param name="unit">The <paramref name="width" /> and <paramref name="height" /> measurement unit.</param>
            <returns>The paper size used for printing.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="width" /> is negative. </exception>
            <exception cref="T:System.ArgumentException">The <paramref name="height" /> is negative.</exception>
        </member>
        <member name="M:DotNetBrowser.Print.PaperSize.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Print.PaperSize.Unit">
            <summary>
                The measurement unit of the paper size.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Unit.Millimeters">
            <summary>
                The paper size is measured in millimeters.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Unit.Inches">
            <summary>
                The paper size is measured in inches.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Unit.Microns">
            <summary>
                The paper size is measured in microns.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Na5X7">
            <summary>
                North American standard sheet media size "5x7".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Na6X9">
            <summary>
                North American standard sheet media size "6x9".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Na7X9">
            <summary>
                North American standard sheet media size "7x9".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Na9X11">
            <summary>
                North American standard sheet media size "9x11".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Na10X11">
            <summary>
                North American standard sheet media size "10x11".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Na10X13">
            <summary>
                North American standard sheet media size "10x13".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Na10X14">
            <summary>
                North American standard sheet media size "10x14".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Na10X15">
            <summary>
                North American standard sheet media size "10x15".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Na11X12">
            <summary>
                North American standard sheet media size "11x12".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Na11X15">
            <summary>
                North American standard sheet media size "11x15".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Na12X19">
            <summary>
                North American standard sheet media size "12x19".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaIndex3X5">
            <summary>
                North American standard sheet media size "Index 3x5".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaIndex4X6">
            <summary>
                North American standard sheet media size "Index 4x6".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaIndex4X6Ext">
            <summary>
                North American standard sheet media size "Index 4x6 ext".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaIndex5X8">
            <summary>
                North American standard sheet media size "Index 5x8".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaNumber9">
            <summary>
                North American standard sheet media size "Envelope #9".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaNumber10">
            <summary>
                North American standard sheet media size "Envelope #10".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaNumber11">
            <summary>
                North American standard sheet media size "Envelope #11".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaNumber12">
            <summary>
                North American standard sheet media size "Envelope #12".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaNumber14">
            <summary>
                North American standard sheet media size "Envelope #14".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaPersonal">
            <summary>
                North American standard sheet media size "Personal".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaMonarch">
            <summary>
                North American standard sheet media size "Monarch".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaInvoice">
            <summary>
                North American standard sheet media size "Invoice".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaExecutive">
            <summary>
                North American standard sheet media size "Executive".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaGovtLetter">
            <summary>
                North American standard sheet media size "Government Letter".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaGovtLegal">
            <summary>
                North American standard sheet media size "Government Legal".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaQuarto">
            <summary>
                North American standard sheet media size "Quarto".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaLetter">
            <summary>
                North American standard sheet media size "Letter".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaLetterPlus">
            <summary>
                North American standard sheet media size "Letter plus".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaLetterExtra">
            <summary>
                North American standard sheet media size "Letter extra".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaLegal">
            <summary>
                North American standard sheet media size "Legal".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaLegalExtra">
            <summary>
                North American standard sheet media size "Legal extra".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaFanfoldEur">
            <summary>
                North American standard sheet media size "FanFold European".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaFoolscap">
            <summary>
                North American standard sheet media size "FanFold German Legal".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaFanfoldUs">
            <summary>
                North American standard sheet media size "FanFold US".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaSuperA">
            <summary>
                North American standard sheet media size "Super A".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaSuperB">
            <summary>
                North American standard sheet media size "Super B".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaA2">
            <summary>
                North American standard sheet media size "A2".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaArchA">
            <summary>
                North American standard sheet media size "Arch A".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaArchB">
            <summary>
                North American standard sheet media size "Arch B".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaArchC">
            <summary>
                North American standard sheet media size "Arch C".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaArchD">
            <summary>
                North American standard sheet media size "Arch D".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaArchE">
            <summary>
                North American standard sheet media size "Arch E".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaC">
            <summary>
                North American standard sheet media size "C".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaC5">
            <summary>
                North American standard sheet media size "C5".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaD">
            <summary>
                North American standard sheet media size "D".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaE">
            <summary>
                North American standard sheet media size "E".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaF">
            <summary>
                North American standard sheet media size "F".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaEdp">
            <summary>
                North American standard sheet media size "EDP".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaEurEdp">
            <summary>
                North American standard sheet media size "European EDP".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaLedger">
            <summary>
                North American standard sheet media size "Tabloid".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaBPlus">
            <summary>
                North American standard sheet media size "B-plus".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaAsmeF">
            <summary>
                North American standard sheet media size "ASME F".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.NaWideFormat">
            <summary>
                North American standard sheet media size "Wide format".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Prc1">
            <summary>
                Chinese standard sheet media size "prc1 Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Prc2">
            <summary>
                Chinese standard sheet media size "prc2 Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Prc3">
            <summary>
                Chinese standard sheet media size "prc3 Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Prc4">
            <summary>
                Chinese standard sheet media size "prc4 Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Prc5">
            <summary>
                Chinese standard sheet media size "prc5 Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Prc6">
            <summary>
                Chinese standard sheet media size "prc6 Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Prc7">
            <summary>
                Chinese standard sheet media size "prc7 Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Prc8">
            <summary>
                Chinese standard sheet media size "prc8 Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Prc10">
            <summary>
                Chinese standard sheet media size "prc10 Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Prc16K">
            <summary>
                Chinese standard sheet media size "prc 16k".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Prc32K">
            <summary>
                Chinese standard sheet media size "prc 32k".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Roc8K">
            <summary>
                Chinese standard sheet media size "ROC 8K".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Roc16K">
            <summary>
                Chinese standard sheet media size "ROC 16K".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.OmJuuroKuKai">
            <summary>
                Chinese standard sheet media size "Juuro-ku-kai".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.OmPaKai">
            <summary>
                Chinese standard sheet media size "Pa-kai".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.OmDaiPaKai">
            <summary>
                Chinese standard sheet media size "Dai-pa-kai".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA0">
            <summary>
                ISO standard sheet media size "A0".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA1">
            <summary>
                ISO standard sheet media size "A1".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA2">
            <summary>
                ISO standard sheet media size "A2".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA3">
            <summary>
                ISO standard sheet media size "A3".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA3Extra">
            <summary>
                ISO standard sheet media size "A3 Extra".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA4">
            <summary>
                ISO standard sheet media size "A4".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA4Tab">
            <summary>
                ISO standard sheet media size "A4 Tab".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA4Extra">
            <summary>
                ISO standard sheet media size "A4 Extra".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA5">
            <summary>
                ISO standard sheet media size "A5".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA5Extra">
            <summary>
                ISO standard sheet media size "A5 Extra".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA6">
            <summary>
                ISO standard sheet media size "A6".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA7">
            <summary>
                ISO standard sheet media size "A7".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA8">
            <summary>
                ISO standard sheet media size "A8".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA9">
            <summary>
                ISO standard sheet media size "A9".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA10">
            <summary>
                ISO standard sheet media size "A10".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA4X3">
            <summary>
                ISO standard sheet media size "A4x3".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA4X4">
            <summary>
                ISO standard sheet media size "A4x4".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA4X5">
            <summary>
                ISO standard sheet media size "A4x5".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA4X6">
            <summary>
                ISO standard sheet media size "A4x6".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA4X7">
            <summary>
                ISO standard sheet media size "A4x7".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA4X8">
            <summary>
                ISO standard sheet media size "A4x8".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA4X9">
            <summary>
                ISO standard sheet media size "A4x9".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA3X3">
            <summary>
                ISO standard sheet media size "A3x3".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA3X4">
            <summary>
                ISO standard sheet media size "A3x4".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA3X5">
            <summary>
                ISO standard sheet media size "A3x5".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA3X6">
            <summary>
                ISO standard sheet media size "A3x6".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA3X7">
            <summary>
                ISO standard sheet media size "A3x7".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA2X3">
            <summary>
                ISO standard sheet media size "A2x3".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA2X4">
            <summary>
                ISO standard sheet media size "A2x4".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA2X5">
            <summary>
                ISO standard sheet media size "A2x5".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA1X3">
            <summary>
                ISO standard sheet media size "A1x3".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA1X4">
            <summary>
                ISO standard sheet media size "A1x4".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.Iso2A0">
            <summary>
                ISO standard sheet media size "2A0".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoA0X3">
            <summary>
                ISO standard sheet media size "A0x3".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB0">
            <summary>
                ISO standard sheet media size "B0".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB1">
            <summary>
                ISO standard sheet media size "B1".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB2">
            <summary>
                ISO standard sheet media size "B2".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB3">
            <summary>
                ISO standard sheet media size "B3".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB4">
            <summary>
                ISO standard sheet media size "B4".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB5">
            <summary>
                ISO standard sheet media size "B5".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB5Extra">
            <summary>
                ISO standard sheet media size "B5 Extra".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB6">
            <summary>
                ISO standard sheet media size "B6".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB6C4">
            <summary>
                ISO standard sheet media size "B6C4".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB7">
            <summary>
                ISO standard sheet media size "B7".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB8">
            <summary>
                ISO standard sheet media size "B8".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB9">
            <summary>
                ISO standard sheet media size "B9".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoB10">
            <summary>
                ISO standard sheet media size "B10".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC0">
            <summary>
                ISO standard sheet media size "C0".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC1">
            <summary>
                ISO standard sheet media size "C1".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC2">
            <summary>
                ISO standard sheet media size "C2".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC3">
            <summary>
                ISO standard sheet media size "C3".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC4">
            <summary>
                ISO standard sheet media size "C4".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC5">
            <summary>
                ISO standard sheet media size "C5".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC6">
            <summary>
                ISO standard sheet media size "C6".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC6C5">
            <summary>
                ISO standard sheet media size "C6C5".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC7">
            <summary>
                ISO standard sheet media size "C7".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC7C6">
            <summary>
                ISO standard sheet media size "C7C6".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC8">
            <summary>
                ISO standard sheet media size "C8".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC9">
            <summary>
                ISO standard sheet media size "C9".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoC10">
            <summary>
                ISO standard sheet media size "C10".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoDl">
            <summary>
                ISO standard sheet media size "DL".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoRa2">
            <summary>
                ISO standard sheet media size "RA2".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoSra2">
            <summary>
                ISO standard sheet media size "SRA2".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoRa1">
            <summary>
                ISO standard sheet media size "RA1".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoSra1">
            <summary>
                ISO standard sheet media size "SRA1".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoRa0">
            <summary>
                ISO standard sheet media size "RA0".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.IsoSra0">
            <summary>
                ISO standard sheet media size "SRA0".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisB0">
            <summary>
                Japanese standard sheet media size "B0 (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisB1">
            <summary>
                Japanese standard sheet media size "B1 (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisB2">
            <summary>
                Japanese standard sheet media size "B2 (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisB3">
            <summary>
                Japanese standard sheet media size "B3 (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisB4">
            <summary>
                Japanese standard sheet media size "B4 (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisB5">
            <summary>
                Japanese standard sheet media size "B5 (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisB6">
            <summary>
                Japanese standard sheet media size "B6 (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisB7">
            <summary>
                Japanese standard sheet media size "B7 (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisB8">
            <summary>
                Japanese standard sheet media size "B8 (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisB9">
            <summary>
                Japanese standard sheet media size "B9 (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisB10">
            <summary>
                Japanese standard sheet media size "B10 (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JisExec">
            <summary>
                Japanese standard sheet media size "Executive (JIS)".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JpnChou2">
            <summary>
                Japanese standard sheet media size "Choukei 2".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JpnChou3">
            <summary>
                Japanese standard sheet media size "Choukei 3".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JpnChou4">
            <summary>
                Japanese standard sheet media size "Choukei 4".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JpnHagaki">
            <summary>
                Japanese standard sheet media size "Hagaki".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JpnOufuku">
            <summary>
                Japanese standard sheet media size "Oufuku Hagaki".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JpnYou4">
            <summary>
                Japanese standard sheet media size "You 4".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JpnKahu">
            <summary>
                Japanese standard sheet media size "Kahu Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.JpnKaku2">
            <summary>
                Japanese standard sheet media size "Kaku 2".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.OmSmallPhoto">
            <summary>
                Other metric standard sheet media size "Small photo".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.OmItalian">
            <summary>
                Other metric standard sheet media size "Italian Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.OmPostfix">
            <summary>
                Other metric standard sheet media size "Postfix Envelope".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.OmLargePhoto">
            <summary>
                Other metric standard sheet media size "Large photo".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.OmFolio">
            <summary>
                Other metric standard sheet media size "Folio".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.OmFolioSp">
            <summary>
                Other metric standard sheet media size "Folio SP".
            </summary>
        </member>
        <member name="F:DotNetBrowser.Print.PaperSize.OmInvite">
            <summary>
                Other metric standard sheet media size "Invite Envelope".
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.PdfPrinter">
            <summary>
                A printer that allows you to print to PDF.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.PdfPrinter.ISettings`1">
            <summary>
                The print settings available when printing HTML or PDF content on the PDF printer.
            </summary>
            <typeparam name="T">The specific print settings type.</typeparam>
        </member>
        <member name="T:DotNetBrowser.Print.PdfPrinter.IHtmlSettings">
            <summary>
                The print settings available when printing HTML content on the PDF printer.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.PdfPrinter.IPdfSettings">
            <summary>
                The print settings available when printing PDF content on the PDF printer.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.PdfPrinter`1">
            <summary>
                A printer that allows you to print to PDF.
            </summary>
            <typeparam name="TPrintSettings">The print settings type that can be applied to the print job.</typeparam>
        </member>
        <member name="T:DotNetBrowser.Print.Printer`1">
            <summary>
                The base class for the printers.
            </summary>
            <typeparam name="TPrintSettings">The print settings type available for this printer.</typeparam>
        </member>
        <member name="P:DotNetBrowser.Print.Printer`1.Capabilities">
            <summary>
                Gets the capabilities of this printer.
            </summary>
            <value>The capabilities of this printer.</value>
        </member>
        <member name="P:DotNetBrowser.Print.Printer`1.DeviceName">
            <summary>
                Gets the device name of this printer.
            </summary>
            <value>The device name of this printer.</value>
        </member>
        <member name="P:DotNetBrowser.Print.Printer`1.IsDefault">
            <summary>
                Indicates whether this printer is the default system printer.
            </summary>
            <value><c>true</c> if this printer is the default system printer, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Print.Printer`1.PrintJob">
            <summary>
                Gets the current print job. This print job can be used to configure print settings.
            </summary>
            <value>The current print job.</value>
        </member>
        <member name="P:DotNetBrowser.Print.Printer`1.DotNetBrowser#IAutoDisposable#IsDisposed">
            <inheritdoc />
        </member>
        <member name="E:DotNetBrowser.Print.Printer`1.DotNetBrowser#IAutoDisposable#Disposed">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Print.Settings.ICollate`1">
            <summary>
                Allows configuring collate printing.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support collate
                printing.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.ICollate`1.CollatePrintingEnabled">
            <summary>
                Enables or disables collate printing.
            </summary>
            <value><c>true</c> if collate printing is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ArgumentException">Collate is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.CollateExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.ICollate`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.CollateExtensions.DisableCollatePrinting``1(DotNetBrowser.Print.Settings.ICollate{``0})">
            <summary>
                Disables collate printing.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="collate">The <see cref="T:DotNetBrowser.Print.Settings.ICollate`1" /> implementation.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">Collate is not supported by the printer.</exception>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.CollateExtensions.EnableCollatePrinting``1(DotNetBrowser.Print.Settings.ICollate{``0})">
            <summary>
                Enables collate printing.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.ICollate`1" /> implementation.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">Collate is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IColorModel`1">
            <summary>
                Allows configuring the color model for printing.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support color models.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.IColorModel`1.ColorModel">
            <summary>
                Gets or sets the color model.
            </summary>
            <value>The color model used for printing.</value>
            <exception cref="T:System.ArgumentException">The specified color model is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.ColorModelExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IColorModel`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.ColorModelExtensions.SetColorModel``1(DotNetBrowser.Print.Settings.IColorModel{``0},DotNetBrowser.Print.ColorModel)">
            <summary>
                Sets the color model used for printing.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IColorModel`1" /> implementation.</param>
            <param name="colorModel">The color model used for printing.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The specified color model is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.ICopies`1">
            <summary>
                Allows configuring the number of copies to print.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support specifying
                copies.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.ICopies`1.Copies">
            <summary>
                Gets or sets the number of copies to print.
            </summary>
            <value>The number of copies to print. Cannot be zero or negative.</value>
            <exception cref="T:System.ArgumentException">The specified copies number is less than or equal to zero.</exception>
            <exception cref="T:System.ArgumentException">The specified copies number is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.CopiesExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.ICopies`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.CopiesExtensions.SetCopies``1(DotNetBrowser.Print.Settings.ICopies{``0},System.Int32)">
            <summary>
                Sets the number of copies to print.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.ICopies`1" /> implementation.</param>
            <param name="copies">The number of copies to print. Cannot be zero or negative.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The specified copies number is less than or equal to zero.</exception>
            <exception cref="T:System.ArgumentException">The specified copies number is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IDuplexMode`1">
            <summary>
                Allows configuring the duplex mode for printing.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support specifying
                duplex mode.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.IDuplexMode`1.DuplexMode">
            <summary>
                Gets or sets the duplex mode.
            </summary>
            <value>The duplex mode used for printing.</value>
            <exception cref="T:System.ArgumentException">The specified duplex mode is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.DuplexModeExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IDuplexMode`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.DuplexModeExtensions.SetDuplexMode``1(DotNetBrowser.Print.Settings.IDuplexMode{``0},DotNetBrowser.Print.DuplexMode)">
            <summary>
                Sets the duplex mode.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IDuplexMode`1" /> implementation.</param>
            <param name="duplexMode">The duplex mode used for printing.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The specified duplex mode is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IOrientation`1">
            <summary>
                Allows configuring the page orientation.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support configuring
                the page orientation.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.IOrientation`1.Orientation">
            <summary>
                Gets or sets the page orientation.
            </summary>
            <value>The page orientation.</value>
            <exception cref="T:System.ArgumentException">The specified page orientation is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.OrientationExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IOrientation`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.OrientationExtensions.SetOrientation``1(DotNetBrowser.Print.Settings.IOrientation{``0},DotNetBrowser.Print.Orientation)">
            <summary>
                Sets the page orientation.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IOrientation`1" /> implementation.</param>
            <param name="orientation">The page orientation.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The specified page orientation is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IPageMargins`1">
            <summary>
                Allows configuring the page margins.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support configuring
                the page margins.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.IPageMargins`1.PageMargins">
            <summary>
                Gets or sets the page margins for printing.
            </summary>
            <value>The page margins for printing.</value>
            <exception cref="T:System.ArgumentException">The specified page margins is null.</exception>
            <exception cref="T:System.ArgumentException">The specified page margins is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.PageMarginsExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IPageMargins`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PageMarginsExtensions.SetPageMargins``1(DotNetBrowser.Print.Settings.IPageMargins{``0},DotNetBrowser.Print.PageMargins)">
            <summary>
                Configures the page margins for printing
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IPageMargins`1" /> implementation.</param>
            <param name="pageMargins">The page margins for printing.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The specified page margins is null.</exception>
            <exception cref="T:System.ArgumentException">The specified page margins is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IPageRanges`1">
            <summary>
                Allows configuring the page ranges for printing.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support specifying
                page ranges.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.IPageRanges`1.PageRanges">
            <summary>
                Gets or sets the collection of the page ranges to print.
            </summary>
            <value>The collection of the page ranges to print.</value>
            <exception cref="T:System.ArgumentException">The collection is null, empty, or contains null objects.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.PageRangesExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IPageRanges`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PageRangesExtensions.SetPageRanges``1(DotNetBrowser.Print.Settings.IPageRanges{``0},System.Collections.Generic.IReadOnlyCollection{DotNetBrowser.Print.PageRange})">
            <summary>
                Sets the collection of the page ranges to print.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IPageRanges`1" /> implementation.</param>
            <param name="pageRanges">The collection of the page ranges to print.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The collection is null, empty, or contains null objects.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IPagesPerSheet`1">
            <summary>
                Allows configuring the number of pages per sheet.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support configuring
                the number of pages per sheet.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.IPagesPerSheet`1.PagesPerSheet">
            <summary>
                Gets or sets the number of pages per sheet.
            </summary>
            <value>The number of pages per sheet.</value>
            <exception cref="T:System.ArgumentException">The specified number of pages per sheet is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.PagesPerSheetExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IPagesPerSheet`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PagesPerSheetExtensions.SetPagesPerSheet``1(DotNetBrowser.Print.Settings.IPagesPerSheet{``0},DotNetBrowser.Print.PagesPerSheet)">
            <summary>
                Sets the number of pages per sheet.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IPagesPerSheet`1" /> implementation.</param>
            <param name="pagesPerSheet">The new number of pages per sheet.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The specified number of pages per sheet is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IPaperSize`1">
            <summary>
                Allows configuring the paper size for printing.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support configuring
                paper size.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.IPaperSize`1.PaperSize">
            <summary>
                Gets or sets the paper size for printing.
            </summary>
            <value>The paper size used for printing.</value>
            <exception cref="T:System.ArgumentException">The specified paper size is null.</exception>
            <exception cref="T:System.ArgumentException">The specified paper size is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.PaperSizeExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IPaperSize`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PaperSizeExtensions.SetPaperSize``1(DotNetBrowser.Print.Settings.IPaperSize{``0},DotNetBrowser.Print.PaperSize)">
            <summary>
                Sets the paper size for printing.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IPaperSize`1" /> implementation.</param>
            <param name="paperSize">The paper size used for printing.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The specified paper size is null.</exception>
            <exception cref="T:System.ArgumentException">The specified paper size is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IPdfFilePath`1">
            <summary>
                Allows configuring the destination PDF file path.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support
                configuring the destination PDF file path.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.IPdfFilePath`1.PdfFilePath">
            <summary>
                Gets or sets the full PDF file path.
            </summary>
            <value>The full PDF file path. Cannot be null, empty, or contain only white space.</value>
            <exception cref="T:System.ArgumentException">The specified file path is null, empty, or contain only white space.</exception>
            <exception cref="T:System.ArgumentException">The parent directory for the PDF file does not exist and cannot be created.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.PdfFilePathExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IPdfFilePath`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PdfFilePathExtensions.SetPdfFilePath``1(DotNetBrowser.Print.Settings.IPdfFilePath{``0},System.String)">
            <summary>
                Sets the full PDF file path.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IPdfFilePath`1" /> implementation.</param>
            <param name="pdfFilePath">The full PDF file path. Cannot be null, empty, or contain only white space.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The specified file path is null, empty, or contain only white space.</exception>
            <exception cref="T:System.ArgumentException">The parent directory for the PDF file does not exist and cannot be created.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IPrintBackgrounds`1">
            <summary>
                Allows configuring printing background graphics.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support configuring
                printing background graphics.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.IPrintBackgrounds`1.PrintingBackgroundsEnabled">
            <summary>
                Enables or disables printing background graphics.
            </summary>
            <value><c>true</c> if printing background graphics is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ArgumentException">The background graphics printing is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.PrintBackgroundsExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IPrintBackgrounds`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PrintBackgroundsExtensions.DisablePrintingBackgrounds``1(DotNetBrowser.Print.Settings.IPrintBackgrounds{``0})">
            <summary>
                Disables printing background graphics.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IPrintBackgrounds`1" /> implementation.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The background graphics printing is not supported by the printer.</exception>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PrintBackgroundsExtensions.EnablePrintingBackgrounds``1(DotNetBrowser.Print.Settings.IPrintBackgrounds{``0})">
            <summary>
                Enables printing background graphics.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IPrintBackgrounds`1" /> implementation.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The background graphics printing is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IPrintHeaderFooter`1">
            <summary>
                Allows configuring printing headers and footers.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support configuring
                printing headers and footers.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.IPrintHeaderFooter`1.PrintingHeaderFooterEnabled">
            <summary>
                Enables or disables printing headers and footer.
            </summary>
            <value><c>true</c> if printing headers and footer is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ArgumentException">The headers and footer printing is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.PrintHeaderFooterExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IPrintHeaderFooter`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PrintHeaderFooterExtensions.DisablePrintingHeaderFooter``1(DotNetBrowser.Print.Settings.IPrintHeaderFooter{``0})">
            <summary>
                Disables printing headers and footers.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IPrintHeaderFooter`1" /> implementation.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The headers and footer printing is not supported by the printer.</exception>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PrintHeaderFooterExtensions.EnablePrintingHeaderFooter``1(DotNetBrowser.Print.Settings.IPrintHeaderFooter{``0})">
            <summary>
                Enables printing headers and footers.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IPrintHeaderFooter`1" /> implementation.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">The headers and footer printing is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IPrintSelectionOnly`1">
            <summary>
                Allows configuring printing only the selected content.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <remarks>
                This interface is implemented by specific <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> implementations that support configuring
                printing only the selected content.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Print.Settings.IPrintSelectionOnly`1.PrintingSelectionOnlyEnabled">
            <summary>
                Enables or disables printing only the selected content.
            </summary>
            <value><c>true</c> if printing only the selected content is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ArgumentException">Only the selected content printing is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.PrintSelectionOnlyExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IPrintSelectionOnly`1" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PrintSelectionOnlyExtensions.DisablePrintingSelectionOnly``1(DotNetBrowser.Print.Settings.IPrintSelectionOnly{``0})">
            <summary>
                Disables printing only the selected content.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IPrintSelectionOnly`1" /> implementation.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">Only the selected content printing is not supported by the printer.</exception>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PrintSelectionOnlyExtensions.EnablePrintingSelectionOnly``1(DotNetBrowser.Print.Settings.IPrintSelectionOnly{``0})">
            <summary>
                Enables printing only the selected content.
            </summary>
            <typeparam name="TPrintSettings">The specific print settings type.</typeparam>
            <param name="obj">The <see cref="T:DotNetBrowser.Print.Settings.IPrintSelectionOnly`1" /> implementation.</param>
            <returns>The current print settings instance.</returns>
            <exception cref="T:System.ArgumentException">Only the selected content printing is not supported by the printer.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.IPrintSettings">
            <summary>
                The common interface for the concrete print job settings to implement.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.IPrintSettings.Apply">
            <summary>
                Applies the configured print settings. You should call this method to regenerate the internal
                print preview using the configured settings and update the total page count to be printed.
            </summary>
            <remarks>
                This method is invoked automatically when you choose to proceed in the <see cref="P:DotNetBrowser.Browser.IBrowser.PrintHtmlContentHandler" />
                or <see cref="P:DotNetBrowser.Browser.IBrowser.PrintPdfContentHandler" />. If the settings cannot be applied at this point, the printing operation
                is canceled.
            </remarks>
            <exception cref="T:System.ObjectDisposedException"> The <see cref="T:DotNetBrowser.Print.IPrintJob`1" /> has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException"> The print settings were not applied properly.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.Settings.PrintSettingsExtensions">
            <summary>
                Extension methods for <see cref="T:DotNetBrowser.Print.Settings.IPrintSettings" /> interface.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Print.Settings.PrintSettingsExtensions.Apply``1(``0,System.Action{``0})">
            <summary>
                Performs the action with the print settings and then applies the changes.
            </summary>
            <typeparam name="TPrintSettings">The type of print settings that can be applied.</typeparam>
            <param name="printSettings">The print settings to work with. Cannot be null.</param>
            <param name="action">The action to perform with these print settings. Cannot be null.</param>
            <returns><c>true</c> if the settings were applied successfully, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ObjectDisposedException"> The <see cref="T:DotNetBrowser.Print.IPrintJob`1" /> has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException"> The print settings were not applied properly.</exception>
        </member>
        <member name="T:DotNetBrowser.Print.SystemPrinter">
            <summary>
                A local or network printer available in the system.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.SystemPrinter.ISettings`1">
            <summary>
                Print settings available when printing HTML or PDF content on a physical printer.
            </summary>
            <typeparam name="T">The specific print settings type.</typeparam>
        </member>
        <member name="T:DotNetBrowser.Print.SystemPrinter.IHtmlSettings">
            <summary>
                Print settings available when printing HTML content on a physical printer.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.SystemPrinter.IPdfSettings">
            <summary>
                Print settings available when printing PDF content on a physical printer.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Print.SystemPrinter`1">
            <summary>
                A local or network printer available in the system.
            </summary>
            <typeparam name="TPrintSettings"></typeparam>
        </member>
        <member name="T:DotNetBrowser.Search.Direction">
            <summary>
                The search direction.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Search.Direction.Forward">
            <summary>
                Search forward.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Search.Direction.Backward">
            <summary>
                Search backward.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Search.FindOptions">
            <summary>
                The find text options.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Search.FindOptions.Direction">
            <summary>
                Gets or sets the search direction.
            </summary>
            <value>The search direction.</value>
        </member>
        <member name="P:DotNetBrowser.Search.FindOptions.MatchCase">
            <summary>
                Enables or disables the case-sensitive search.
            </summary>
            <value><c>true</c> if the case-sensitive search is enabled, <c>false</c> otherwise.</value>
        </member>
        <member name="M:DotNetBrowser.Search.FindOptions.#ctor(System.Boolean,DotNetBrowser.Search.Direction)">
            <summary>
                Initializes a new instance of <see cref="T:DotNetBrowser.Search.FindOptions" /> with the specified <paramref name="matchCase" /> and
                <paramref name="direction" />.
            </summary>
            <param name="matchCase">Indicates whether the search is case-sensitive.</param>
            <param name="direction">The search direction.</param>
        </member>
        <member name="T:DotNetBrowser.Search.FindResult">
            <summary>
                A result of the text search.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Search.FindResult.NumberOfMatches">
            <summary>
                Gets the number of matches.
            </summary>
            <value>The number of the matches found at the moment or -1 when no matches found.</value>
        </member>
        <member name="P:DotNetBrowser.Search.FindResult.SelectedMatch">
            <summary>
                Gets the index of the currently selected match.
            </summary>
            <value>The index of the currently selected match or -1 when there's no matches.</value>
        </member>
        <member name="T:DotNetBrowser.Search.Handlers.FindResultReceivedParameters">
            <summary>
                The parameters of the handler that is passed to the <see cref="M:DotNetBrowser.Search.ITextFinder.Find(System.String,DotNetBrowser.Search.FindOptions,DotNetBrowser.Handlers.IHandler{DotNetBrowser.Search.Handlers.FindResultReceivedParameters})" />
                method and called when a find result is received.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Search.Handlers.FindResultReceivedParameters.FindResult">
            <summary>
                Gets the find result.
            </summary>
            <value>The find result.</value>
        </member>
        <member name="P:DotNetBrowser.Search.Handlers.FindResultReceivedParameters.IsSearchFinished">
            <summary>
                Indicates whether the searching process was finished.
            </summary>
            <value><c>true</c> if the search was finished, <c>false</c> otherwise.</value>
        </member>
        <member name="P:DotNetBrowser.Search.Handlers.FindResultReceivedParameters.TextFinder">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Search.ITextFinder" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Search.ITextFinder" /> instance associated with this object.</value>
        </member>
        <member name="M:DotNetBrowser.Search.Handlers.FindResultReceivedParameters.ToString">
            <summary>
                Represent object as string
            </summary>
            <returns>a string that represents the object</returns>
        </member>
        <member name="T:DotNetBrowser.Search.ITextFinder">
            <summary>
                Allows finding text on the loaded web page.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Search.ITextFinder.Browser">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with this object.</value>
        </member>
        <member name="M:DotNetBrowser.Search.ITextFinder.Find(System.String,DotNetBrowser.Search.FindOptions,DotNetBrowser.Handlers.IHandler{DotNetBrowser.Search.Handlers.FindResultReceivedParameters})">
            <summary>
                Performs search of the given <paramref name="searchText" /> with the given <paramref name="options" />,
                highlights all matches and selects the first match on the currently loaded web page.
            </summary>
            <param name="searchText">the text to search. Cannot be null or empty.</param>
            <param name="options">the options such as direction and match case.</param>
            <param name="intermediateResultsHandler"> the handler which is called when some search results are received.</param>
            <returns>
                a <see cref="T:System.Threading.Tasks.Task" /> which completes when the search is finished. The result of the task is the last find
                result received from Chromium.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Search.ITextFinder" /> has already been disposed.</exception>
            <remarks>
                The search is performed only through a visible content on the loaded web page. If some text
                is presented on the web page, but due to CSS rules it's not visible, the text finder will not
                check this content during search. Also, it doesn't find text on the web pages with an empty
                size, so make sure that the size of the browser instance where the text search is performed
                isn't empty.
            </remarks>
        </member>
        <member name="M:DotNetBrowser.Search.ITextFinder.StopFinding(DotNetBrowser.Search.StopFindAction)">
            <summary>
                Stops finding and clears the highlighting of the found matches.
            </summary>
            <param name="action">The action that will be applied to the selected match.</param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Search.ITextFinder" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Search.StopFindAction">
            <summary>
                The stop find actions.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Search.StopFindAction.ClearSelection">
            <summary>
                Stops the current search and clears the selection.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Search.StopFindAction.KeepSelection">
            <summary>
                Stops the current search but leave the selection.
            </summary>
        </member>
        <member name="T:DotNetBrowser.SpellCheck.ISpellCheckDictionary">
            <summary>
                Provides functionality for working with a spell check dictionary.
            </summary>
        </member>
        <member name="P:DotNetBrowser.SpellCheck.ISpellCheckDictionary.Words">
            <summary>
                Gets the words in the dictionary.
            </summary>
            <value>
                A collection of the words in the dictionary. This collection will be empty if the dictionary does not have any
                words.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.SpellCheck.ISpellCheckDictionary" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.SpellCheck.ISpellCheckDictionary.Add(System.String)">
            <summary>
                Adds the specified <paramref name="word" /> to the dictionary and schedules a write to disk.
            </summary>
            <param name="word">
                The word to add to the dictionary. It must be UTF8, between 1 and 99 bytes long,
                and without leading or trailing ASCII whitespace.
            </param>
            <returns><c>true</c> if the word is valid and not a duplicate.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="word" />is null, empty, or contains only white space.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.SpellCheck.ISpellCheckDictionary" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.SpellCheck.ISpellCheckDictionary.Contains(System.String)">
            <summary>
                Checks if the dictionary contains the specified <paramref name="word" />.
            </summary>
            <param name="word">
                The word to check. It must be UTF8, between 1 and 99 bytes long,
                and without leading or trailing ASCII whitespace.
            </param>
            <returns><c>true</c> if the word is present in the dictionary, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="word" />is null, empty, or contains only white space.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.SpellCheck.ISpellCheckDictionary" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.SpellCheck.ISpellCheckDictionary.Remove(System.String)">
            <summary>
                Removes the specified <paramref name="word" /> from the dictionary.
            </summary>
            <param name="word">
                The word to remove from the dictionary. It must be UTF8, between 1 and 99 bytes long,
                and without leading or trailing ASCII whitespace.
            </param>
            <returns><c>true</c>  if the word was found and removed successfully, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="word" />is null, empty, or contains only white space.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.SpellCheck.ISpellCheckDictionary" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.SpellCheck.ISpellChecker">
            <summary>
                Represents an engine service that provides functionality for configuring spell checking.
            </summary>
        </member>
        <member name="P:DotNetBrowser.SpellCheck.ISpellChecker.CustomDictionary">
            <summary>
                Gets the custom dictionary.
            </summary>
            <value>The custom dictionary.</value>
        </member>
        <member name="P:DotNetBrowser.SpellCheck.ISpellChecker.DictionaryNames">
            <summary>
                Gets or sets the list of the dictionary names used for spell checking.
            </summary>
            <value>
                The list of the dictionary names used for spell checking.
                These dictionaries are downloaded programmatically and stored in the user data directory of the engine.
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.SpellCheck.ISpellChecker" /> has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.SpellCheck.ISpellChecker.Enabled">
            <summary>
                Enables or disables spell checking. By default, spell checking is enabled.
            </summary>
            <value><c>true</c> if spell checking is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.SpellCheck.ISpellChecker" /> has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.SpellCheck.ISpellChecker.Engine">
            <summary>
                The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.
            </summary>
        </member>
        <member name="T:DotNetBrowser.SpellCheck.SpellCheckingResult">
            <summary>
                The spell checking result that contains the bounds of a mis-spelled substring of the
                checked text.
            </summary>
        </member>
        <member name="P:DotNetBrowser.SpellCheck.SpellCheckingResult.Length">
            <summary>
                Gets the length of the mis-spelled word in the checked text.
            </summary>
            <value>The length of the mis-spelled word in the checked text.</value>
        </member>
        <member name="P:DotNetBrowser.SpellCheck.SpellCheckingResult.Location">
            <summary>
                Gets the location of the first symbol in the mis-spelled word in the checked text that is
                considered as mis-spelled by the spell checker.
            </summary>
            <value>
                The location of the first symbol in the mis-spelled word in the checked text that is
                considered as mis-spelled by the spell checker.
            </value>
        </member>
        <member name="T:DotNetBrowser.SpellCheck.SpellCheckMenu">
            <summary>
                A spell check menu in the context menu.
            </summary>
        </member>
        <member name="P:DotNetBrowser.SpellCheck.SpellCheckMenu.AddToDictionaryMenuItemText">
            <summary>
                Gets the localized text of the "Add to Dictionary" menu item.
            </summary>
            <value>The localized text of the "Add to Dictionary" menu item.</value>
        </member>
        <member name="P:DotNetBrowser.SpellCheck.SpellCheckMenu.DictionarySuggestions">
            <summary>
                Gets a collection of the suggested replacements for a misspelled word under the cursor.
            </summary>
            <value>The suggested replacements for a misspelled word under the cursor. Can be empty.</value>
        </member>
        <member name="P:DotNetBrowser.SpellCheck.SpellCheckMenu.MisspelledWord">
            <summary>
                Gets the misspelled word under the cursor, if any.
            </summary>
            <value>The misspelled word under the cursor, if any.</value>
        </member>
        <member name="T:DotNetBrowser.Ui.Bitmap">
            <summary>
                Represents a binary image that consists of an image size and a byte array that contains the
                pre-multiplied image pixels in the BGRA format.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Ui.Bitmap.Pixels">
            <summary>
                Gets a read-only byte array that contains the pre-multiplied pixels of the binary image. Each pixel
                allocates 4 bytes in the BGRA format.
            </summary>
            <value>A read-only byte array that contains the pre-multiplied pixels of the binary image.</value>
        </member>
        <member name="P:DotNetBrowser.Ui.Bitmap.Size">
            <summary>
                Gets the size of this bitmap instance.
            </summary>
            <value>The size of this bitmap instance. The size can be empty.</value>
        </member>
        <member name="T:DotNetBrowser.Ui.Color">
            <summary>
                A numeric model of an RGB color. The components of the color instance are presented in the
                arithmetic notation. This means that each component accepts any fractional value from 0 to 1.
            </summary>
            <remarks>
                <para>
                    If all the components except <c>alpha</c> are at zero and the <c>alpha</c> is at 1, the
                    result is black. If all are at 1, the result is the brightest representable white.
                </para>
                <para>
                    <b>Important:</b>  the component values out of the <c>0..1</c> range are not allowed and
                    should not be used.
                </para>
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Ui.Color.Alpha">
            <summary>
                Gets the opacity channel value in the <c>0..1</c> range. When the value is 1, the color
                is 100% opaque. When 0, the color is 100% transparent.
            </summary>
            <value>The opacity channel value in the <c>0..1</c> range.</value>
        </member>
        <member name="P:DotNetBrowser.Ui.Color.Blue">
            <summary>
                Gets the blue channel value in the <c>0..1</c> range.
            </summary>
            <value>The blue channel value in the <c>0..1</c> range.</value>
        </member>
        <member name="P:DotNetBrowser.Ui.Color.Green">
            <summary>
                Gets the green channel value in the <c>0..1</c> range.
            </summary>
            <value>The green channel value in the <c>0..1</c> range.</value>
        </member>
        <member name="P:DotNetBrowser.Ui.Color.Red">
            <summary>
                Gets the red channel value in the <c>0..1</c> range.
            </summary>
            <value>The red channel value in the <c>0..1</c> range.</value>
        </member>
        <member name="M:DotNetBrowser.Ui.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new <see cref="T:DotNetBrowser.Ui.Color" /> instance with the specified channel values.
            </summary>
            <param name="red">The red channel value.</param>
            <param name="green">The green channel value.</param>
            <param name="blue">The blue channel value.</param>
            <param name="alpha">The alpha channel value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"> thrown when any of the parameters is outside the <c>0..1</c> range.</exception>
        </member>
        <member name="M:DotNetBrowser.Ui.Color.ToString(System.String,System.IFormatProvider)">
            <inheritdoc />
            <remarks>
                <para>The supported format strings are:</para>
                <list type="bullet">
                    <item>
                        <term>G</term>
                        <description>
                            General string representation:
                            <c>Red: &lt;value&gt;, Green: &lt;value&gt;, Blue: &lt;value&gt;, Alpha: &lt;value&gt;</c>
                        </description>
                    </item>
                    <item>
                        <term>RGB</term>
                        <description>Hexademical representation (with alpha omitted): <c>RRGGBB</c>.</description>
                    </item>
                    <item>
                        <term>RGBA</term>
                        <description>Hexademical representation: <c>RRGGBBAA</c>.</description>
                    </item>
                </list>
            </remarks>
        </member>
        <member name="M:DotNetBrowser.Ui.Color.ToHexRGB">
            <summary>
                Creates a string representation for this color in the <c>RGB</c> hex format.
            </summary>
            <returns>The string representation for this color in the <c>RGB</c> hex format.</returns>
        </member>
        <member name="M:DotNetBrowser.Ui.Color.ToHexRGBA">
            <summary>
                Creates a string representation for this color in the <c>RGBA</c> hex format.
            </summary>
            <returns>The string representation for this color in the <c>RGBA</c> hex format.</returns>
        </member>
        <member name="M:DotNetBrowser.Ui.Color.ToString">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Ui.Color.ToString(System.String)">
            <summary>
                Returns a string representation of the value of this <see cref="T:DotNetBrowser.Ui.Color" /> instance, according to the provided
                format specifier.
            </summary>
            <param name="format">
                A single format specifier that indicates how to format the value of this Color. The format
                parameter can be "G", "F", "RGB", or "RGBA". If format is null or an empty string (""), "G" is used.
            </param>
            <returns>The value of this <see cref="T:DotNetBrowser.Ui.Color" />, represented  in the specified format.</returns>
            <remarks>
                <para>The supported format strings are:</para>
                <list type="bullet">
                    <item>
                        <term>G</term>
                        <description>
                            General string representation:
                            <c>Red: &lt;value&gt;, Green: &lt;value&gt;, Blue: &lt;value&gt;, Alpha: &lt;value&gt;</c>
                        </description>
                    </item>
                    <item>
                        <term>RGB</term>
                        <description>Hexademical representation (with alpha omitted): <c>RRGGBB</c>.</description>
                    </item>
                    <item>
                        <term>RGBA</term>
                        <description>Hexademical representation: <c>RRGGBBAA</c>.</description>
                    </item>
                </list>
            </remarks>
        </member>
        <member name="T:DotNetBrowser.Ui.Cursors.CursorType">
            <summary>
                The cursor types.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Unspecified">
            <summary>
                The cursor type is not specified.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Pointer">
            <summary>
                The pointer (arrow) cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Cross">
            <summary>
                The crosshair cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Hand">
            <summary>
                The hand cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.IBeam">
            <summary>
                The I-beam cursor, which is used to show where the text cursor appears when the mouse is clicked.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Wait">
            <summary>
                The wait (hourglass) cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Help">
            <summary>
                The help cursor, which is a combination of an arrow and a question mark.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.EastResize">
            <summary>
                The east sizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.NorthResize">
            <summary>
                The northsizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.NorthEastResize">
            <summary>
                The northeast sizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.NorthWestResize">
            <summary>
                The northwest sizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.SouthResize">
            <summary>
                The sizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.SouthEastResize">
            <summary>
                The southeast sizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.SouthWestResize">
            <summary>
                The sizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.WestResize">
            <summary>
                The sizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.NorthSouthResize">
            <summary>
                The two-headed north/south sizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.EastWestResize">
            <summary>
                The two-headed east/west sizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.NorthEastSouthWestResize">
            <summary>
                The two-headed northeast/southwest sizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.NorthWestSouthEastResize">
            <summary>
                The two-headed northwest/southeast sizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.ColumnResize">
            <summary>
                The column resizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.RowResize">
            <summary>
                The row resizing cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.MiddlePanning">
            <summary>
                The middle panning cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.EastPanning">
            <summary>
                The east panning cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.NorthPanning">
            <summary>
                The panning cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.NorthEastPanning">
            <summary>
                The northeast panning cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.NorthWestPanning">
            <summary>
                The northwest panning cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.SouthPanning">
            <summary>
                The south panning cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.SouthEastPanning">
            <summary>
                The southeast panning cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.SouthWestPanning">
            <summary>
                The southwest panning cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.WestPanning">
            <summary>
                The west panning cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Move">
            <summary>
                The move cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.VerticalText">
            <summary>
                The text cursor (similar to I-beam) fro vertical text.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Cell">
            <summary>
                The cell cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.ContextMenu">
            <summary>
                RThe context menu cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Alias">
            <summary>
                The alias (shortcut) cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Progress">
            <summary>
                The cursor that appears when an operation is in progress, for instance, when an application is starting.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.NoDrop">
            <summary>
                The cursor with which indicates that a particular region is invalid for a given operation.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Copy">
            <summary>
                The copy cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.None">
            <summary>
                The special cursor that is invisible.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.NotAllowed">
            <summary>
                The cursor with which indicates that a particular region is not allowed for a given operation.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.ZoomIn">
            <summary>
                The zoom in cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.ZoomOut">
            <summary>
                The zoom out cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Grab">
            <summary>
                The grab (hand) cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Grabbing">
            <summary>
                The grabbing hand cursor.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Cursors.CursorType.Custom">
            <summary>
                The custom cursor defined on the particular web page.
            </summary>
        </member>
        <member name="T:DotNetBrowser.Ui.Language">
            <summary>
                The supported user interface languages.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Amharic">
            <summary>
                Amharic language ("am")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Arabic">
            <summary>
                Arabic language ("ar")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Bulgarian">
            <summary>
                Bulgarian language ("bg")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Bengali">
            <summary>
                Bengali language ("bn")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Catalan">
            <summary>
                Catalan language ("ca")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Chinese">
            <summary>
                Chinese language ("zh-cn")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.ChineseTaiwan">
            <summary>
                Chinese (Taiwan) language ("zh-tw")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Czech">
            <summary>
                Czech language ("cs")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Danish">
            <summary>
                Danish language ("da")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Dutch">
            <summary>
                Dutch language ("nl")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.EnglishUk">
            <summary>
                English (UK) language ("en-gb")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.EnglishUs">
            <summary>
                English (US) language ("en-us")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Estonian">
            <summary>
                Estonian language ("et")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Filipino">
            <summary>
                Filipino language ("fil")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Finnish">
            <summary>
                Finnish language ("fi")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.French">
            <summary>
                French (France) language ("fr")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.German">
            <summary>
                German language ("de")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Greek">
            <summary>
                Greek language ("el")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Gujarati">
            <summary>
                Gujarati language ("gu")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Hebrew">
            <summary>
                Hebrew language ("he")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Hindi">
            <summary>
                Hindi language ("hi")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Hungarian">
            <summary>
                Hungarian language ("hu")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Indonesian">
            <summary>
                Indonesian language ("id")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Italian">
            <summary>
                Italian language ("it")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Japanese">
            <summary>
                Japanese language ("ja")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Kannada">
            <summary>
                Kannada language ("kn")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Korean">
            <summary>
                Korean language ("ko")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Latvian">
            <summary>
                Latvian language ("lv")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Lithuanian">
            <summary>
                Lithuanian language ("lt")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Malayalam">
            <summary>
                Malayalam language ("ml")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Marathi">
            <summary>
                Marathi language ("mr")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Malay">
            <summary>
                Malay language ("ms")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Norwegian">
            <summary>
                Norwegian language ("nb")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Persian">
            <summary>
                Persian language ("fa")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Polish">
            <summary>
                Polish language ("pl")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.PortugueseBrazil">
            <summary>
                Portuguese (Brazil) language ("pt-br")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.PortuguesePortugal">
            <summary>
                Portuguese (Portugal) language ("pt-pt")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Romanian">
            <summary>
                Romanian language ("ro")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Russian">
            <summary>
                Russian language ("ru")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Serbian">
            <summary>
                Serbian language ("sr")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Slovak">
            <summary>
                Slovak language ("sk")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Slovenian">
            <summary>
                Slovenian language ("sl")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.SpanishLatinAmerica">
            <summary>
                Spanish (Latin America) language ("es-419")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.SpanishSpain">
            <summary>
                Spanish language (Spain) ("es")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Swahili">
            <summary>
                Swahili language ("sw")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Swedish">
            <summary>
                Swedish language ("sv")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Tamil">
            <summary>
                Tamil language ("ta")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Telugu">
            <summary>
                Telugu language ("te")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Thai">
            <summary>
                Thai language ("th")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Turkish">
            <summary>
                Turkish language ("tr")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Ukrainian">
            <summary>
                Ukrainian language ("uk")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Vietnamese">
            <summary>
                Vietnamese language ("vi")
            </summary>
        </member>
        <member name="F:DotNetBrowser.Ui.Language.Default">
            <summary>
                Default language (English).
            </summary>
        </member>
        <member name="M:DotNetBrowser.Ui.Language.FromCulture(System.Globalization.CultureInfo)">
            <summary>
                Initializes the <see cref="T:DotNetBrowser.Ui.Language" /> instance from the specified culture information.
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <returns>The <see cref="T:DotNetBrowser.Ui.Language" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Ui.Language.FromString(System.String)">
            <summary>
                Returns the <see cref="T:DotNetBrowser.Ui.Language" /> instance by its string representation.
            </summary>
            <param name="value">The language string representation</param>
            <returns>The <see cref="T:DotNetBrowser.Ui.Language" /> instance that corresponds to the provided string representation.</returns>
        </member>
        <member name="M:DotNetBrowser.Ui.Language.op_Explicit(System.Globalization.CultureInfo)~DotNetBrowser.Ui.Language">
            <summary>
                Returns the <see cref="T:DotNetBrowser.Ui.Language" /> instance by the specified culture information.
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <returns>The <see cref="T:DotNetBrowser.Ui.Language" /> instance that corresponds to the specified culture information.</returns>
        </member>
        <member name="M:DotNetBrowser.Ui.Language.op_Explicit(System.String)~DotNetBrowser.Ui.Language">
            <summary>
                Returns the <see cref="T:DotNetBrowser.Ui.Language" /> instance by its string representation.
            </summary>
            <param name="value">The language string representation</param>
            <returns>The <see cref="T:DotNetBrowser.Ui.Language" /> instance that corresponds to the provided string representation.</returns>
        </member>
        <member name="T:DotNetBrowser.Util.TypedEnum`1">
            <summary>
                The base class for all enumeration-like types.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
        </member>
        <member name="P:DotNetBrowser.Util.TypedEnum`1.Value">
            <summary>
                The actual value.
            </summary>
        </member>
        <member name="M:DotNetBrowser.Util.TypedEnum`1.#ctor(`0)">
            <summary>
                Creates and initializes a new instance.
            </summary>
            <param name="value">the actual value of this instance.</param>
        </member>
        <member name="M:DotNetBrowser.Util.TypedEnum`1.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Util.TypedEnum`1.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:DotNetBrowser.Util.TypedEnum`1.ToString">
            <inheritdoc />
        </member>
        <member name="T:DotNetBrowser.Zoom.Events.LevelChangedEventArgs">
            <summary>
                The event arguments for the <see cref="E:DotNetBrowser.Zoom.IZoomLevels.LevelChanged" /> event.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Zoom.Events.LevelChangedEventArgs.Host">
            <summary>
                Gets the host of the URL of the web page which zoom level has been changed.
            </summary>
            <value>The host of the URL of the web page which zoom level has been changed.</value>
        </member>
        <member name="P:DotNetBrowser.Zoom.Events.LevelChangedEventArgs.Level">
            <summary>
                Gets the new zoom level of a web page.
            </summary>
            <value>The new zoom level of a web page.</value>
        </member>
        <member name="P:DotNetBrowser.Zoom.Events.LevelChangedEventArgs.ZoomLevels">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Zoom.IZoomLevels" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Zoom.IZoomLevels" /> instance associated with this object.</value>
        </member>
        <member name="T:DotNetBrowser.Zoom.IZoom">
            <summary>
                Allows zooming content of a web page.
            </summary>
            <remarks>
                A <see cref="T:DotNetBrowser.Zoom.IZoom" /> instance belongs to a <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance and can be used only if the
                <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance is alive. When the <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance is closed,
                <see cref="T:DotNetBrowser.Zoom.IZoom" /> instance automatically updates its internal state and doesn't allow modifying zoom anymore.
                The <exception cref="T:System.ObjectDisposedException" /> will be thrown in this case.
                <p />
                The zoom level is configured for each domain separately, so if you set zoom level for the a.com
                web page, it will not be applied for the b.com web page. If you change zoom level
                for one domain and then load another one, then the zoom level for another domain will be
                default.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Zoom.IZoom.Browser">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Browser.IBrowser" /> instance associated with this object.</value>
        </member>
        <member name="P:DotNetBrowser.Zoom.IZoom.Enabled">
            <summary>
                Enables or disables zoom changes.
            </summary>
            <value><c>true</c> if zoom functionality is enabled, <c>false</c> otherwise.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Zoom.IZoom" /> has already been disposed.</exception>
            <remarks>
                By default, zoom functionality
                is enabled. You can change zoom level for the currently loaded web page.
                <p />
                To disable zoom functionality, set this property to <c>false</c>. In this case, the browser
                instance will revert zoom to the default level, and all attempts to change zoom
                will be ignored.
            </remarks>
        </member>
        <member name="P:DotNetBrowser.Zoom.IZoom.Level">
            <summary>
                Gets or sets the zoom level for the currently loaded web page.
            </summary>
            <value>The zoom level.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Zoom.IZoom" /> has already been disposed.</exception>
            <remarks>
                Zoom level is configured for each domain separately. For example, if you load the www.a.com web page and
                set zoom level to <see cref="F:DotNetBrowser.Zoom.Level.P250" />, then load the www.b.org web page, the zoom level for
                www.b.org web page will be reset to default value. When you load the
                www.a.com web page again, its zoom level will be restored
                to <see cref="F:DotNetBrowser.Zoom.Level.P250" /> automatically.
            </remarks>
        </member>
        <member name="M:DotNetBrowser.Zoom.IZoom.In">
            <summary>
                Updates the zoom level for the currently loaded web page on one step up.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Zoom.IZoom" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Zoom.IZoom.Out">
            <summary>
                Updates the zoom level for the currently loaded web page on one step down.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Zoom.IZoom" /> has already been disposed.</exception>
        </member>
        <member name="M:DotNetBrowser.Zoom.IZoom.Reset">
            <summary>
                Resets the zoom level for the currently loaded web page to default value.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Zoom.IZoom" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Zoom.IZoomLevels">
            <summary>
                Allows configuring the default zoom levels and receive notifications about zoom changes.
            </summary>
        </member>
        <member name="P:DotNetBrowser.Zoom.IZoomLevels.DefaultLevel">
            <summary>
                Gets or sets the default zoom level for pages that don't override it.
            </summary>
            <value>
                The default zoom level for the web pages.
                By default, zoom level is <see cref="F:DotNetBrowser.Zoom.Level.P100" />
            </value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Zoom.IZoomLevels" /> has already been disposed.</exception>
        </member>
        <member name="P:DotNetBrowser.Zoom.IZoomLevels.Engine">
            <summary>
                Gets the <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.
            </summary>
            <value>The <see cref="T:DotNetBrowser.Engine.IEngine" /> instance associated with this object.</value>
        </member>
        <member name="E:DotNetBrowser.Zoom.IZoomLevels.LevelChanged">
            <summary>
                Occurs when the zoom level for a specific URL has been changed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DotNetBrowser.Zoom.IZoomLevels" /> has already been disposed.</exception>
        </member>
        <member name="T:DotNetBrowser.Zoom.Level">
            <summary>
                A zoom level of a web page. Provides a set of the pre-defined constants. Each constant name
                consists of the <c>P</c> prefix followed by a number. The number represents a zoom level in
                percents. For example, the <see cref="F:DotNetBrowser.Zoom.Level.P25" /> and <see cref="F:DotNetBrowser.Zoom.Level.P110" /> values represent the 25% and 110% zoom
                levels accordingly.
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P25">
            <summary>
                25%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P33">
            <summary>
                33%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P50">
            <summary>
                50%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P67">
            <summary>
                67%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P75">
            <summary>
                75%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P80">
            <summary>
                80%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P90">
            <summary>
                90%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P100">
            <summary>
                100% (default zoom level)
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P110">
            <summary>
                110%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P125">
            <summary>
                125%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P150">
            <summary>
                150%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P175">
            <summary>
                175%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P200">
            <summary>
                200%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P250">
            <summary>
                250%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P300">
            <summary>
                300%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P400">
            <summary>
                400%
            </summary>
        </member>
        <member name="F:DotNetBrowser.Zoom.Level.P500">
            <summary>
                500%
            </summary>
        </member>
        <member name="M:DotNetBrowser.Zoom.Level.#ctor(System.Double)">
            <summary>
                Initializes a new <see cref="T:DotNetBrowser.Zoom.Level" /> instance with the specified zoom level <paramref name="value" />.
            </summary>
            <param name="value">The zoom level value</param>
            <exception cref="T:System.ArgumentException">The <paramref name="value" /> is less than zero.</exception>
        </member>
        <member name="M:DotNetBrowser.Zoom.Level.Create(System.Double)">
            <summary>
                Initializes a new <see cref="T:DotNetBrowser.Zoom.Level" /> instance from its double representation.
            </summary>
            <param name="value">The level representation.</param>
            <returns>The initialized <see cref="T:DotNetBrowser.Zoom.Level" /> instance.</returns>
        </member>
        <member name="M:DotNetBrowser.Zoom.Level.op_Explicit(System.Double)~DotNetBrowser.Zoom.Level">
            <summary>
                Initializes a new <see cref="T:DotNetBrowser.Zoom.Level" /> instance from its double representation.
            </summary>
            <param name="value">The level representation.</param>
            <returns>The initialized <see cref="T:DotNetBrowser.Zoom.Level" /> instance.</returns>
        </member>
    </members>
</doc>
